{
  "description": "AtlasSchema is the Schema for the atlasschemas API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasSchemaSpec defines the desired state of AtlasSchema",
      "properties": {
        "cloud": {
          "description": "Cloud defines the Atlas Cloud configuration.",
          "properties": {
            "repo": {
              "description": "Repo is the name of repository on the Atlas Cloud.",
              "type": "string"
            },
            "tokenFrom": {
              "description": "TokenFrom defines the reference to the secret key that contains the Atlas Cloud Token.",
              "properties": {
                "secretKeyRef": {
                  "description": "SecretKeyRef references to the key of a secret in the same namespace.",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "credentials": {
          "description": "Credentials defines the credentials to use when connecting to the database.\nUsed instead of URL or URLFrom.",
          "properties": {
            "database": {
              "type": "string"
            },
            "host": {
              "type": "string"
            },
            "hostFrom": {
              "description": "Secret defines a secret key reference.",
              "properties": {
                "secretKeyRef": {
                  "description": "SecretKeyRef defines the secret key reference to use for the user.",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "parameters": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "password": {
              "type": "string"
            },
            "passwordFrom": {
              "description": "Secret defines a secret key reference.",
              "properties": {
                "secretKeyRef": {
                  "description": "SecretKeyRef defines the secret key reference to use for the user.",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "port": {
              "type": "integer"
            },
            "scheme": {
              "type": "string"
            },
            "user": {
              "type": "string"
            },
            "userFrom": {
              "description": "Secret defines a secret key reference.",
              "properties": {
                "secretKeyRef": {
                  "description": "SecretKeyRef defines the secret key reference to use for the user.",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "devURL": {
          "description": "DevURL is the URL of the database to use for normalization and calculations.\nIf not specified, the operator will spin up a temporary database container to use for these operations.",
          "type": "string"
        },
        "devURLFrom": {
          "description": "DevURLFrom is a reference to a secret containing the URL of the database to use for normalization and calculations.",
          "properties": {
            "secretKeyRef": {
              "description": "SecretKeyRef defines the secret key reference to use for the user.",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "exclude": {
          "description": "Exclude a list of glob patterns used to filter existing resources being taken into account.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "policy": {
          "description": "Policy defines the policies to apply when managing the schema change lifecycle.",
          "properties": {
            "diff": {
              "description": "Diff defines the diff policies to apply when planning schema changes.",
              "properties": {
                "concurrent_index": {
                  "properties": {
                    "create": {
                      "type": "boolean"
                    },
                    "drop": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "skip": {
                  "description": "SkipChanges represents the skip changes policy.",
                  "properties": {
                    "add_column": {
                      "type": "boolean"
                    },
                    "add_foreign_key": {
                      "type": "boolean"
                    },
                    "add_index": {
                      "type": "boolean"
                    },
                    "add_schema": {
                      "type": "boolean"
                    },
                    "add_table": {
                      "type": "boolean"
                    },
                    "drop_column": {
                      "type": "boolean"
                    },
                    "drop_foreign_key": {
                      "type": "boolean"
                    },
                    "drop_index": {
                      "type": "boolean"
                    },
                    "drop_schema": {
                      "type": "boolean"
                    },
                    "drop_table": {
                      "type": "boolean"
                    },
                    "modify_column": {
                      "type": "boolean"
                    },
                    "modify_foreign_key": {
                      "type": "boolean"
                    },
                    "modify_index": {
                      "type": "boolean"
                    },
                    "modify_schema": {
                      "type": "boolean"
                    },
                    "modify_table": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "lint": {
              "description": "Lint defines the linting policies to apply before applying the schema.",
              "properties": {
                "destructive": {
                  "description": "CheckConfig defines the configuration of a linting check.",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "review": {
                  "default": "ERROR",
                  "description": "Review defines the review policy to apply after linting the schema changes.",
                  "enum": [
                    "ALWAYS",
                    "WARNING",
                    "ERROR"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "schema": {
          "description": "Desired Schema of the target.",
          "properties": {
            "configMapKeyRef": {
              "description": "Selects a key from a ConfigMap.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the ConfigMap or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "hcl": {
              "type": "string"
            },
            "sql": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "schemas": {
          "description": "The names of the schemas (named databases) on the target database to be managed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "txMode": {
          "default": "file",
          "description": "TxMode defines the transaction mode to use when applying the schema.",
          "enum": [
            "file",
            "all",
            "none"
          ],
          "type": "string"
        },
        "url": {
          "description": "URL of the target database schema.",
          "type": "string"
        },
        "urlFrom": {
          "description": "URLs may be defined as a secret key reference.",
          "properties": {
            "secretKeyRef": {
              "description": "SecretKeyRef defines the secret key reference to use for the user.",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "AtlasSchemaStatus defines the observed state of AtlasSchema",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "last_applied": {
          "description": "LastApplied is the unix timestamp of the most recent successful schema apply operation.",
          "format": "int64",
          "type": "integer"
        },
        "observed_hash": {
          "description": "ObservedHash is the hash of the most recently applied schema.",
          "type": "string"
        },
        "planLink": {
          "description": "PlanLink is the link to the schema plan on the Atlas Cloud.",
          "type": "string"
        },
        "planURL": {
          "description": "PlanURL is the URL of the schema plan to apply.",
          "type": "string"
        }
      },
      "required": [
        "last_applied",
        "observed_hash"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
