{
  "properties": {
    "apiVersion": {
      "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Annotations on the cluster. This field has the same\nrestrictions as Kubernetes annotations. The total size of all keys and\nvalues combined is limited to 256k. Key can have 2 segments: prefix (optional)\nand name (required), separated by a slash (/). Prefix must be a DNS subdomain.\nName must be 63 characters or less, begin and end with alphanumerics,\nwith dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "type": "object"
        },
        "authorization": {
          "description": "Configuration related to the cluster RBAC settings.",
          "properties": {
            "adminUsers": {
              "description": "Users that can perform operations as a cluster admin. A managed\nClusterRoleBinding will be created to grant the 'cluster-admin' ClusterRole\nto the users. Up to ten admin users can be provided.\n\nFor more info on RBAC, see\nhttps://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "binaryAuthorization": {
          "description": "Binary Authorization configuration.",
          "properties": {
            "evaluationMode": {
              "description": "Configure Binary Authorization evaluation mode. Possible values: [\"DISABLED\", \"PROJECT_SINGLETON_POLICY_ENFORCE\"].",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "deletionPolicy": {
          "description": "Policy to determine what flags to send on delete.",
          "type": "string"
        },
        "description": {
          "description": "A human readable description of this attached cluster. Cannot be longer\nthan 255 UTF-8 encoded bytes.",
          "type": "string"
        },
        "distribution": {
          "description": "Immutable. The Kubernetes distribution of the underlying attached cluster. Supported values:\n\"eks\", \"aks\".",
          "type": "string"
        },
        "fleet": {
          "description": "Fleet configuration.",
          "properties": {
            "membership": {
              "description": "The name of the managed Hub Membership resource associated to this\ncluster. Membership names are formatted as\nprojects/<project-number>/locations/global/membership/<cluster-id>.",
              "type": "string"
            },
            "projectRef": {
              "description": "The number of the Fleet host project where this cluster will be registered.",
              "oneOf": [
                {
                  "not": {
                    "required": [
                      "external"
                    ]
                  },
                  "required": [
                    "name"
                  ]
                },
                {
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  },
                  "required": [
                    "external"
                  ]
                }
              ],
              "properties": {
                "external": {
                  "description": "Allowed value: string of the format `projects/{{value}}`, where {{value}} is the `number` field of a `Project` resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "projectRef"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Immutable. The location for the resource.",
          "type": "string"
        },
        "loggingConfig": {
          "description": "Logging configuration.",
          "properties": {
            "componentConfig": {
              "description": "The configuration of the logging components.",
              "properties": {
                "enableComponents": {
                  "description": "The components to be enabled. Possible values: [\"SYSTEM_COMPONENTS\", \"WORKLOADS\"].",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "monitoringConfig": {
          "description": "Monitoring configuration.",
          "properties": {
            "managedPrometheusConfig": {
              "description": "Enable Google Cloud Managed Service for Prometheus in the cluster.",
              "properties": {
                "enabled": {
                  "description": "Enable Managed Collection.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "oidcConfig": {
          "description": "OIDC discovery information of the target cluster.\n\nKubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster\nAPI server. This fields indicates how GCP services\nvalidate KSA tokens in order to allow system workloads (such as GKE Connect\nand telemetry agents) to authenticate back to GCP.\n\nBoth clusters with public and private issuer URLs are supported.\nClusters with public issuers only need to specify the 'issuer_url' field\nwhile clusters with private issuers need to provide both\n'issuer_url' and 'jwks'.",
          "properties": {
            "issuerUrl": {
              "description": "Immutable. A JSON Web Token (JWT) issuer URI. 'issuer' must start with 'https://'.",
              "type": "string"
            },
            "jwks": {
              "description": "Immutable. OIDC verification keys in JWKS format (RFC 7517).",
              "type": "string"
            }
          },
          "required": [
            "issuerUrl"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "platformVersion": {
          "description": "The platform version for the cluster (e.g. '1.23.0-gke.1').",
          "type": "string"
        },
        "projectRef": {
          "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
          "oneOf": [
            {
              "not": {
                "required": [
                  "external"
                ]
              },
              "required": [
                "name"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              },
              "required": [
                "external"
              ]
            }
          ],
          "properties": {
            "external": {
              "description": "Allowed value: The `name` field of a `Project` resource.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": "string"
        }
      },
      "required": [
        "distribution",
        "fleet",
        "location",
        "oidcConfig",
        "platformVersion",
        "projectRef"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "clusterRegion": {
          "description": "Output only. The region where this cluster runs.\n\nFor EKS clusters, this is an AWS region. For AKS clusters,\nthis is an Azure region.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "items": {
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "createTime": {
          "description": "Output only. The time at which this cluster was created.",
          "type": "string"
        },
        "errors": {
          "description": "A set of errors found in the cluster.",
          "items": {
            "properties": {
              "message": {
                "description": "Human-friendly description of the error.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "kubernetesVersion": {
          "description": "The Kubernetes version of the cluster.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer"
        },
        "reconciling": {
          "description": "If set, there are currently changes in flight to the cluster.",
          "type": "boolean"
        },
        "state": {
          "description": "The current state of the cluster. Possible values:\nSTATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,\nDEGRADED.",
          "type": "string"
        },
        "uid": {
          "description": "A globally unique identifier for the cluster.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time at which this cluster was last updated.",
          "type": "string"
        },
        "workloadIdentityConfig": {
          "description": "Workload Identity settings.",
          "items": {
            "properties": {
              "identityProvider": {
                "description": "The ID of the OIDC Identity Provider (IdP) associated to\nthe Workload Identity Pool.",
                "type": "string"
              },
              "issuerUri": {
                "description": "The OIDC issuer URL for this cluster.",
                "type": "string"
              },
              "workloadPool": {
                "description": "The Workload Identity Pool associated to the cluster.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
