{
  "description": "DataformRepository is the Schema for the dataform API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "displayName": {
          "description": "Optional. The repository's user-friendly name.",
          "type": "string"
        },
        "gitRemoteSettings": {
          "description": "Optional. If set, configures this repository to be linked to a Git remote.",
          "properties": {
            "authenticationTokenSecretVersionRef": {
              "description": "The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/* /secrets/* /versions/*.",
              "oneOf": [
                {
                  "not": {
                    "required": [
                      "external"
                    ]
                  },
                  "required": [
                    "name"
                  ]
                },
                {
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  },
                  "required": [
                    "external"
                  ]
                }
              ],
              "properties": {
                "external": {
                  "description": " If provided must be in the format `projects/*/secrets/*/versions/*`.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` field of a `SecretManagerSecretVersion` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `metadata.namespace` field of a `SecretManagerSecretVersion` resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "defaultBranch": {
              "description": "The Git remote's default branch name.",
              "type": "string"
            },
            "sshAuthenticationConfig": {
              "description": "Authentication fields for remote uris using SSH protocol.",
              "properties": {
                "hostPublicKey": {
                  "description": "Content of a public SSH key to verify an identity of a remote Git host.",
                  "type": "string"
                },
                "userPrivateKeySecretVersionRef": {
                  "description": "The name of the Secret Manager secret version to use as a ssh private key for Git operations. Must be in the format projects/*/secrets/*/versions/* .",
                  "oneOf": [
                    {
                      "not": {
                        "required": [
                          "external"
                        ]
                      },
                      "required": [
                        "name"
                      ]
                    },
                    {
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      },
                      "required": [
                        "external"
                      ]
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": " If provided must be in the format `projects/*/secrets/*/versions/*`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` field of a `SecretManagerSecretVersion` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `metadata.namespace` field of a `SecretManagerSecretVersion` resource.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "hostPublicKey",
                "userPrivateKeySecretVersionRef"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "url": {
              "description": "The Git remote's URL.",
              "type": "string"
            }
          },
          "required": [
            "defaultBranch",
            "url"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "npmrcEnvironmentVariablesSecretVersionRef": {
          "description": "Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for package installation operations.",
          "oneOf": [
            {
              "not": {
                "required": [
                  "external"
                ]
              },
              "required": [
                "name"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              },
              "required": [
                "external"
              ]
            }
          ],
          "properties": {
            "external": {
              "description": " If provided must be in the format `projects/*/secrets/*/versions/*`.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `SecretManagerSecretVersion` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `metadata.namespace` field of a `SecretManagerSecretVersion` resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "projectRef": {
          "description": "The project that this resource belongs to.",
          "oneOf": [
            {
              "not": {
                "required": [
                  "external"
                ]
              },
              "required": [
                "name"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              },
              "required": [
                "external"
              ]
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "region": {
          "description": "Immutable. A reference to the region.",
          "type": "string"
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": "string"
        },
        "serviceAccountRef": {
          "description": "Optional. The service account reference to run workflow invocations under.",
          "oneOf": [
            {
              "not": {
                "required": [
                  "external"
                ]
              },
              "required": [
                "name"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              },
              "required": [
                "external"
              ]
            }
          ],
          "properties": {
            "external": {
              "description": "The `email` field of an `IAMServiceAccount` resource.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "setAuthenticatedUserAdmin": {
          "description": "Optional. Input only. If set to true, the authenticated user will be granted the roles/dataform.admin role on the created repository.",
          "type": "boolean"
        },
        "workspaceCompilationOverrides": {
          "description": "Optional. If set, fields of workspaceCompilationOverrides override the default compilation settings that are specified in dataform.json when creating workspace-scoped compilation results.",
          "properties": {
            "defaultDatabase": {
              "description": "Optional. The default database (Google Cloud project ID).",
              "type": "string"
            },
            "schemaSuffix": {
              "description": "Optional. The suffix that should be appended to all schema (BigQuery dataset ID) names.",
              "type": "string"
            },
            "tablePrefix": {
              "description": "Optional. The prefix that should be prepended to all table names.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "projectRef",
        "region"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the DataformRepository's current state.",
          "items": {
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "externalRef": {
          "description": "A unique specifier for the DataformReposity resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "format": "int64",
          "type": "integer"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
