{
  "description": "Canary is the Schema for the Canary API.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CanarySpec defines the desired state of a Canary.",
      "properties": {
        "analysis": {
          "description": "Canary analysis for this canary",
          "oneOf": [
            {
              "required": [
                "interval",
                "threshold",
                "iterations"
              ]
            },
            {
              "required": [
                "interval",
                "threshold",
                "stepWeight"
              ]
            },
            {
              "required": [
                "interval",
                "threshold",
                "stepWeights"
              ]
            }
          ],
          "properties": {
            "alerts": {
              "description": "Alert list for this canary analysis",
              "items": {
                "properties": {
                  "name": {
                    "description": "Name of the this alert",
                    "type": "string"
                  },
                  "providerRef": {
                    "description": "Alert provider reference",
                    "properties": {
                      "name": {
                        "description": "Name of the alert provider",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the alert provider",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "severity": {
                    "description": "Severity level can be info, warn, error (default info)",
                    "enum": [
                      "",
                      "info",
                      "warn",
                      "error"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "providerRef",
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "canaryReadyThreshold": {
              "description": "Percentage of pods that need to be available to consider canary as ready",
              "type": "number"
            },
            "interval": {
              "description": "Schedule interval for this canary",
              "pattern": "^[0-9]+(m|s)",
              "type": "string"
            },
            "iterations": {
              "description": "Number of checks to run for A/B Testing and Blue/Green",
              "type": "number"
            },
            "match": {
              "description": "A/B testing match conditions",
              "items": {
                "properties": {
                  "headers": {
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "required": [
                            "exact"
                          ]
                        },
                        {
                          "required": [
                            "prefix"
                          ]
                        },
                        {
                          "required": [
                            "suffix"
                          ]
                        },
                        {
                          "required": [
                            "regex"
                          ]
                        }
                      ],
                      "properties": {
                        "exact": {
                          "format": "string",
                          "type": "string"
                        },
                        "prefix": {
                          "format": "string",
                          "type": "string"
                        },
                        "regex": {
                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax)",
                          "format": "string",
                          "type": "string"
                        },
                        "suffix": {
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "object"
                  },
                  "queryParams": {
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "exact"
                                ]
                              },
                              {
                                "required": [
                                  "prefix"
                                ]
                              },
                              {
                                "required": [
                                  "regex"
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "required": [
                            "exact"
                          ]
                        },
                        {
                          "required": [
                            "prefix"
                          ]
                        },
                        {
                          "required": [
                            "regex"
                          ]
                        }
                      ],
                      "properties": {
                        "exact": {
                          "type": "string"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "regex": {
                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "description": "Query parameters for matching.",
                    "type": "object"
                  },
                  "sourceLabels": {
                    "additionalProperties": {
                      "format": "string",
                      "type": "string"
                    },
                    "description": "Applicable only when the 'mesh' gateway is included in the service.gateways list",
                    "type": "object"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "maxWeight": {
              "description": "Max traffic weight routed to canary",
              "type": "number"
            },
            "metrics": {
              "description": "Metric check list for this canary",
              "items": {
                "properties": {
                  "interval": {
                    "description": "Interval of the query",
                    "pattern": "^[0-9]+(m|s)",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the metric",
                    "type": "string"
                  },
                  "query": {
                    "description": "Prometheus query",
                    "type": "string"
                  },
                  "templateRef": {
                    "description": "Metric template reference",
                    "properties": {
                      "name": {
                        "description": "Name of this metric template",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of this metric template",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "templateVariables": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Additional variables to be used in the metrics query (key-value pairs)",
                    "type": "object"
                  },
                  "threshold": {
                    "description": "Max value accepted for this metric",
                    "type": "number"
                  },
                  "thresholdRange": {
                    "description": "Range accepted for this metric",
                    "properties": {
                      "max": {
                        "description": "Max value accepted for this metric",
                        "type": "number"
                      },
                      "min": {
                        "description": "Min value accepted for this metric",
                        "type": "number"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "mirror": {
              "description": "Mirror traffic to canary",
              "type": "boolean"
            },
            "mirrorWeight": {
              "description": "Weight of traffic to be mirrored",
              "type": "number"
            },
            "primaryReadyThreshold": {
              "description": "Percentage of pods that need to be available to consider primary as ready",
              "type": "number"
            },
            "sessionAffinity": {
              "description": "SessionAffinity represents the session affinity settings for a canary run.",
              "properties": {
                "cookieName": {
                  "description": "CookieName is the key that will be used for the session affinity cookie.",
                  "type": "string"
                },
                "maxAge": {
                  "default": 86400,
                  "description": "MaxAge indicates the number of seconds until the session affinity cookie will expire.",
                  "type": "number"
                }
              },
              "required": [
                "cookieName"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "stepWeight": {
              "description": "Incremental traffic step weight for the analysis phase",
              "type": "number"
            },
            "stepWeightPromotion": {
              "description": "Incremental traffic step weight for the promotion phase",
              "type": "number"
            },
            "stepWeights": {
              "description": "Incremental traffic step weights for the analysis phase",
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "threshold": {
              "description": "Max number of failed checks before rollback",
              "type": "number"
            },
            "webhooks": {
              "description": "Webhook list for this canary",
              "items": {
                "properties": {
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata (key-value pairs) for this webhook",
                    "type": "object"
                  },
                  "muteAlert": {
                    "description": "Mute all alerts for the webhook",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the webhook",
                    "type": "string"
                  },
                  "retries": {
                    "description": "Number of retries for this webhook",
                    "type": "number"
                  },
                  "timeout": {
                    "description": "Request timeout for this webhook",
                    "pattern": "^[0-9]+(m|s)",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the webhook pre, post or during rollout",
                    "enum": [
                      "",
                      "confirm-rollout",
                      "pre-rollout",
                      "rollout",
                      "confirm-promotion",
                      "post-rollout",
                      "event",
                      "rollback",
                      "confirm-traffic-increase"
                    ],
                    "type": "string"
                  },
                  "url": {
                    "description": "URL address of this webhook",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "url"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "autoscalerRef": {
          "description": "Scaler selector",
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "enum": [
                "HorizontalPodAutoscaler",
                "ScaledObject"
              ],
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "primaryScalerQueries": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "primaryScalerReplicas": {
              "properties": {
                "maxReplicas": {
                  "type": "number"
                },
                "minReplicas": {
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "ingressRef": {
          "description": "Ingress selector",
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "enum": [
                "Ingress"
              ],
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "metricsServer": {
          "description": "Prometheus URL",
          "type": "string"
        },
        "progressDeadlineSeconds": {
          "description": "Deployment progress deadline",
          "type": "number"
        },
        "provider": {
          "description": "Traffic managent provider",
          "type": "string"
        },
        "revertOnDeletion": {
          "description": "Revert mutated resources to original spec on deletion",
          "type": "boolean"
        },
        "routeRef": {
          "description": "APISIX route selector",
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "enum": [
                "ApisixRoute"
              ],
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "service": {
          "description": "Kubernetes Service spec",
          "properties": {
            "apex": {
              "description": "Metadata to add to the apex service",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "appProtocol": {
              "description": "Application protocol of the port",
              "type": "string"
            },
            "backends": {
              "description": "AppMesh backend array",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "canary": {
              "description": "Metadata to add to the canary service",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "corsPolicy": {
              "description": "Istio Cross-Origin Resource Sharing policy (CORS)",
              "properties": {
                "allowCredentials": {
                  "type": "boolean"
                },
                "allowHeaders": {
                  "items": {
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                },
                "allowMethods": {
                  "description": "List of HTTP methods allowed to access the resource",
                  "items": {
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                },
                "allowOrigin": {
                  "description": "The list of origins that are allowed to perform CORS requests.",
                  "items": {
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                },
                "allowOrigins": {
                  "description": "String patterns that match allowed origins",
                  "items": {
                    "oneOf": [
                      {
                        "required": [
                          "exact"
                        ]
                      },
                      {
                        "required": [
                          "prefix"
                        ]
                      },
                      {
                        "required": [
                          "regex"
                        ]
                      }
                    ],
                    "properties": {
                      "exact": {
                        "format": "string",
                        "type": "string"
                      },
                      "prefix": {
                        "format": "string",
                        "type": "string"
                      },
                      "regex": {
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "exposeHeaders": {
                  "items": {
                    "format": "string",
                    "type": "string"
                  },
                  "type": "array"
                },
                "maxAge": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "delegation": {
              "description": "enable behaving as a delegate VirtualService",
              "type": "boolean"
            },
            "gatewayRefs": {
              "description": "The list of parent Gateways for a HTTPRoute",
              "items": {
                "properties": {
                  "group": {
                    "default": "gateway.networking.k8s.io",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  },
                  "kind": {
                    "default": "Gateway",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                    "type": "string"
                  },
                  "name": {
                    "maxLength": 253,
                    "minLength": 1,
                    "type": "string"
                  },
                  "namespace": {
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                    "type": "string"
                  },
                  "port": {
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "sectionName": {
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "maxItems": 32,
              "type": "array"
            },
            "gateways": {
              "description": "The list of Istio gateway for this virtual service",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "headers": {
              "description": "Headers operations",
              "properties": {
                "request": {
                  "properties": {
                    "add": {
                      "additionalProperties": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "remove": {
                      "items": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "set": {
                      "additionalProperties": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "response": {
                  "properties": {
                    "add": {
                      "additionalProperties": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "remove": {
                      "items": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "set": {
                      "additionalProperties": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "hosts": {
              "description": "The list of host names for this service",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "match": {
              "description": "URI match conditions",
              "items": {
                "properties": {
                  "authority": {
                    "oneOf": [
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "exact"
                              ]
                            },
                            {
                              "required": [
                                "prefix"
                              ]
                            },
                            {
                              "required": [
                                "regex"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "required": [
                          "exact"
                        ]
                      },
                      {
                        "required": [
                          "prefix"
                        ]
                      },
                      {
                        "required": [
                          "regex"
                        ]
                      }
                    ],
                    "properties": {
                      "exact": {
                        "format": "string",
                        "type": "string"
                      },
                      "prefix": {
                        "format": "string",
                        "type": "string"
                      },
                      "regex": {
                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "gateways": {
                    "description": "Names of gateways where the rule should be applied.",
                    "items": {
                      "format": "string",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "headers": {
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "exact"
                                ]
                              },
                              {
                                "required": [
                                  "prefix"
                                ]
                              },
                              {
                                "required": [
                                  "regex"
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "required": [
                            "exact"
                          ]
                        },
                        {
                          "required": [
                            "prefix"
                          ]
                        },
                        {
                          "required": [
                            "regex"
                          ]
                        }
                      ],
                      "properties": {
                        "exact": {
                          "format": "string",
                          "type": "string"
                        },
                        "prefix": {
                          "format": "string",
                          "type": "string"
                        },
                        "regex": {
                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "object"
                  },
                  "ignoreUriCase": {
                    "description": "Flag to specify whether the URI matching should be case-insensitive.",
                    "type": "boolean"
                  },
                  "method": {
                    "oneOf": [
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "exact"
                              ]
                            },
                            {
                              "required": [
                                "prefix"
                              ]
                            },
                            {
                              "required": [
                                "regex"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "required": [
                          "exact"
                        ]
                      },
                      {
                        "required": [
                          "prefix"
                        ]
                      },
                      {
                        "required": [
                          "regex"
                        ]
                      }
                    ],
                    "properties": {
                      "exact": {
                        "format": "string",
                        "type": "string"
                      },
                      "prefix": {
                        "format": "string",
                        "type": "string"
                      },
                      "regex": {
                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "The name assigned to a match.",
                    "format": "string",
                    "type": "string"
                  },
                  "port": {
                    "description": "Specifies the ports on the host that is being addressed.",
                    "type": "integer"
                  },
                  "queryParams": {
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "exact"
                                ]
                              },
                              {
                                "required": [
                                  "prefix"
                                ]
                              },
                              {
                                "required": [
                                  "regex"
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "required": [
                            "exact"
                          ]
                        },
                        {
                          "required": [
                            "prefix"
                          ]
                        },
                        {
                          "required": [
                            "regex"
                          ]
                        }
                      ],
                      "properties": {
                        "exact": {
                          "format": "string",
                          "type": "string"
                        },
                        "prefix": {
                          "format": "string",
                          "type": "string"
                        },
                        "regex": {
                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "description": "Query parameters for matching.",
                    "type": "object"
                  },
                  "scheme": {
                    "oneOf": [
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "exact"
                              ]
                            },
                            {
                              "required": [
                                "prefix"
                              ]
                            },
                            {
                              "required": [
                                "regex"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "required": [
                          "exact"
                        ]
                      },
                      {
                        "required": [
                          "prefix"
                        ]
                      },
                      {
                        "required": [
                          "regex"
                        ]
                      }
                    ],
                    "properties": {
                      "exact": {
                        "format": "string",
                        "type": "string"
                      },
                      "prefix": {
                        "format": "string",
                        "type": "string"
                      },
                      "regex": {
                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "sourceLabels": {
                    "additionalProperties": {
                      "format": "string",
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "sourceNamespace": {
                    "description": "Source namespace constraining the applicability of a rule to workloads in that namespace.",
                    "format": "string",
                    "type": "string"
                  },
                  "uri": {
                    "oneOf": [
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "exact"
                              ]
                            },
                            {
                              "required": [
                                "prefix"
                              ]
                            },
                            {
                              "required": [
                                "regex"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "required": [
                          "exact"
                        ]
                      },
                      {
                        "required": [
                          "prefix"
                        ]
                      },
                      {
                        "required": [
                          "regex"
                        ]
                      }
                    ],
                    "properties": {
                      "exact": {
                        "format": "string",
                        "type": "string"
                      },
                      "prefix": {
                        "format": "string",
                        "type": "string"
                      },
                      "regex": {
                        "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                        "format": "string",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "withoutHeaders": {
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "exact"
                                ]
                              },
                              {
                                "required": [
                                  "prefix"
                                ]
                              },
                              {
                                "required": [
                                  "regex"
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "required": [
                            "exact"
                          ]
                        },
                        {
                          "required": [
                            "prefix"
                          ]
                        },
                        {
                          "required": [
                            "regex"
                          ]
                        }
                      ],
                      "properties": {
                        "exact": {
                          "format": "string",
                          "type": "string"
                        },
                        "prefix": {
                          "format": "string",
                          "type": "string"
                        },
                        "regex": {
                          "description": "RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).",
                          "format": "string",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "description": "withoutHeader has the same syntax with the header, but has opposite meaning.",
                    "type": "object"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "meshName": {
              "description": "AppMesh mesh name",
              "type": "string"
            },
            "mirror": {
              "description": "Mirror defines a schema for a filter that mirrors requests.",
              "items": {
                "properties": {
                  "backendRef": {
                    "properties": {
                      "group": {
                        "default": "",
                        "maxLength": 253,
                        "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                        "type": "string"
                      },
                      "kind": {
                        "default": "Service",
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                        "type": "string"
                      },
                      "name": {
                        "maxLength": 253,
                        "minLength": 1,
                        "type": "string"
                      },
                      "namespace": {
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                        "type": "string"
                      },
                      "port": {
                        "format": "int32",
                        "maximum": 65535,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-kubernetes-validations": [
                      {
                        "message": "Must have port for Service reference",
                        "rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true"
                      }
                    ],
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "required": [
                "backendRef"
              ],
              "type": "array"
            },
            "name": {
              "description": "Kubernetes service name",
              "type": "string"
            },
            "port": {
              "description": "Container port number",
              "type": "number"
            },
            "portDiscovery": {
              "description": "Enable port dicovery",
              "type": "boolean"
            },
            "portName": {
              "description": "Container port name",
              "type": "string"
            },
            "primary": {
              "description": "Metadata to add to the primary service",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "retries": {
              "description": "Retry policy for HTTP requests",
              "properties": {
                "attempts": {
                  "description": "Number of retries for a given request",
                  "format": "int32",
                  "type": "integer"
                },
                "perTryTimeout": {
                  "description": "Timeout per retry attempt for a given request",
                  "type": "string"
                },
                "retryOn": {
                  "description": "Specifies the conditions under which retry takes place",
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rewrite": {
              "description": "Rewrite HTTP URIs",
              "properties": {
                "authority": {
                  "format": "string",
                  "type": "string"
                },
                "type": {
                  "format": "string",
                  "type": "string"
                },
                "uri": {
                  "format": "string",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "targetPort": {
              "description": "Container target port name",
              "x-kubernetes-int-or-string": true
            },
            "timeout": {
              "description": "HTTP or gRPC request timeout",
              "type": "string"
            },
            "trafficPolicy": {
              "description": "Istio traffic policy",
              "properties": {
                "connectionPool": {
                  "properties": {
                    "http": {
                      "description": "HTTP connection pool settings.",
                      "properties": {
                        "h2UpgradePolicy": {
                          "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
                          "enum": [
                            "DEFAULT",
                            "DO_NOT_UPGRADE",
                            "UPGRADE"
                          ],
                          "type": "string"
                        },
                        "http1MaxPendingRequests": {
                          "description": "Maximum number of pending HTTP requests to a destination.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "http2MaxRequests": {
                          "description": "Maximum number of requests to a backend.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "idleTimeout": {
                          "description": "The idle timeout for upstream connection pool connections.",
                          "type": "string"
                        },
                        "maxRequestsPerConnection": {
                          "description": "Maximum number of requests per connection to a backend.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "maxRetries": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "loadBalancer": {
                  "description": "Settings controlling the load balancer algorithms.",
                  "oneOf": [
                    {
                      "required": [
                        "simple"
                      ]
                    },
                    {
                      "properties": {
                        "consistentHash": {
                          "oneOf": [
                            {
                              "required": [
                                "httpHeaderName"
                              ]
                            },
                            {
                              "required": [
                                "httpCookie"
                              ]
                            },
                            {
                              "required": [
                                "useSourceIp"
                              ]
                            },
                            {
                              "required": [
                                "httpQueryParameterName"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "consistentHash"
                      ]
                    }
                  ],
                  "properties": {
                    "consistentHash": {
                      "properties": {
                        "httpCookie": {
                          "description": "Hash based on HTTP cookie.",
                          "properties": {
                            "name": {
                              "description": "Name of the cookie.",
                              "format": "string",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path to set for the cookie.",
                              "format": "string",
                              "type": "string"
                            },
                            "ttl": {
                              "description": "Lifetime of the cookie.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "httpHeaderName": {
                          "description": "Hash based on a specific HTTP header.",
                          "format": "string",
                          "type": "string"
                        },
                        "httpQueryParameterName": {
                          "description": "Hash based on a specific HTTP query parameter.",
                          "format": "string",
                          "type": "string"
                        },
                        "minimumRingSize": {
                          "type": "integer"
                        },
                        "useSourceIp": {
                          "description": "Hash based on the source IP address.",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "localityLbSetting": {
                      "properties": {
                        "distribute": {
                          "description": "Optional: only one of distribute or failover can be set.",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Originating locality, '/' separated, e.g.",
                                "format": "string",
                                "type": "string"
                              },
                              "to": {
                                "additionalProperties": {
                                  "type": "integer"
                                },
                                "description": "Map of upstream localities to traffic distribution weights.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "enabled": {
                          "description": "enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.",
                          "type": "boolean"
                        },
                        "failover": {
                          "description": "Optional: only failover or distribute can be set.",
                          "items": {
                            "properties": {
                              "from": {
                                "description": "Originating region.",
                                "format": "string",
                                "type": "string"
                              },
                              "to": {
                                "format": "string",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "simple": {
                      "enum": [
                        "ROUND_ROBIN",
                        "LEAST_CONN",
                        "RANDOM",
                        "PASSTHROUGH",
                        "LEAST_REQUEST"
                      ],
                      "type": "string"
                    },
                    "warmupDurationSecs": {
                      "description": "Represents the warmup duration of Service.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "outlierDetection": {
                  "description": "Settings controlling eviction of unhealthy hosts from the load balancing pool.",
                  "properties": {
                    "baseEjectionTime": {
                      "description": "Minimum ejection duration.",
                      "type": "string"
                    },
                    "consecutive5xxErrors": {
                      "description": "Number of 5xx errors before a host is ejected from the connection pool.",
                      "type": "integer"
                    },
                    "consecutiveErrors": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "consecutiveGatewayErrors": {
                      "description": "Number of gateway errors before a host is ejected from the connection pool.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "interval": {
                      "description": "Time interval between ejection sweep analysis.",
                      "type": "string"
                    },
                    "maxEjectionPercent": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "minHealthPercent": {
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tls": {
                  "description": "Istio TLS related settings for connections to the upstream service",
                  "properties": {
                    "caCertificates": {
                      "format": "string",
                      "type": "string"
                    },
                    "clientCertificate": {
                      "description": "REQUIRED if mode is `MUTUAL`.",
                      "format": "string",
                      "type": "string"
                    },
                    "mode": {
                      "enum": [
                        "DISABLE",
                        "SIMPLE",
                        "MUTUAL",
                        "ISTIO_MUTUAL"
                      ],
                      "type": "string"
                    },
                    "privateKey": {
                      "description": "REQUIRED if mode is `MUTUAL`.",
                      "format": "string",
                      "type": "string"
                    },
                    "sni": {
                      "description": "SNI string to present to the server during TLS handshake.",
                      "format": "string",
                      "type": "string"
                    },
                    "subjectAltNames": {
                      "items": {
                        "format": "string",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "port"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "skipAnalysis": {
          "description": "Skip analysis and promote canary",
          "type": "boolean"
        },
        "suspend": {
          "description": "Suspend Canary disabling/pausing all canary runs",
          "type": "boolean"
        },
        "targetRef": {
          "description": "Target selector",
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "enum": [
                "DaemonSet",
                "Deployment",
                "Service"
              ],
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "upstreamRef": {
          "description": "Gloo Upstream selector",
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "enum": [
                "Upstream"
              ],
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          },
          "required": [
            "apiVersion",
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "targetRef",
        "service",
        "analysis"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "CanaryStatus defines the observed state of a canary.",
      "properties": {
        "canaryWeight": {
          "description": "Traffic weight routed to canary",
          "type": "number"
        },
        "conditions": {
          "description": "Status conditions of this canary",
          "items": {
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime of this condition",
                "format": "date-time",
                "type": "string"
              },
              "lastUpdateTime": {
                "description": "LastUpdateTime of this condition",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message associated with this condition",
                "type": "string"
              },
              "reason": {
                "description": "Reason for the current status of this condition",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition",
                "type": "string"
              }
            },
            "required": [
              "type",
              "status",
              "reason"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "failedChecks": {
          "description": "Failed check count of the current canary analysis",
          "type": "number"
        },
        "iterations": {
          "description": "Iteration count of the current canary analysis",
          "type": "number"
        },
        "lastAppliedSpec": {
          "description": "LastAppliedSpec of this canary",
          "type": "string"
        },
        "lastPromotedSpec": {
          "description": "LastPromotedSpec of this canary",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "LastTransitionTime of this canary",
          "format": "date-time",
          "type": "string"
        },
        "phase": {
          "description": "Analysis phase of this canary",
          "enum": [
            "",
            "Initializing",
            "Initialized",
            "Waiting",
            "Progressing",
            "WaitingPromotion",
            "Promoting",
            "Finalising",
            "Succeeded",
            "Failed",
            "Terminating",
            "Terminated"
          ],
          "type": "string"
        },
        "previousSessionAffinityCookie": {
          "description": "Session affinity cookie of the previous canary run",
          "type": "string"
        },
        "sessionAffinityCookie": {
          "description": "Session affinity cookie of the current canary run",
          "type": "string"
        },
        "trackedConfigs": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "TrackedConfig of this canary",
          "type": "object"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
