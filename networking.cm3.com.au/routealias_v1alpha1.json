{
  "description": "RouteAlias is the Schema for the routealias API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "RouteAliasSpec defines the desired state of RouteAlias",
      "properties": {
        "exportTo": {
          "description": "A list of namespaces to which this service is exported. Exporting a service allows it to be used by sidecars, gateways and virtual services defined in other namespaces. This feature provides a mechanism for service owners and mesh administrators to control the visibility of services across namespace boundaries. \n If no namespaces are specified then the service is exported to all namespaces by default. \n The value \".\" is reserved and defines an export to the same namespace that the service is declared in. Similarly, the value \"*\" is reserved and defines an export to all namespaces. \n For a Kubernetes Service, the equivalent effect can be achieved by setting the annotation \"networking.istio.io/exportTo\" to a comma-separated list of namespace names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "virtualServiceRef": {
          "description": "VirtualServiceRef is a reference to an existing VirtualService",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "type": "string"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        }
      },
      "required": [
        "virtualServiceRef"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "RouteAliasStatus defines the observed state of RouteAlias",
      "type": "object"
    }
  },
  "type": "object"
}
