{
    "description": "BuildRequest is the resource used to pass parameters to build generator \n Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
    "properties": {
        "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
        },
        "binary": {
            "description": "binary indicates a request to build from a binary provided to the builder",
            "properties": {
                "asFile": {
                    "description": "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'.",
                    "type": "string"
                }
            },
            "type": "object",
            "additionalProperties": false
        },
        "dockerStrategyOptions": {
            "description": "DockerStrategyOptions contains additional docker-strategy specific options for the build",
            "properties": {
                "buildArgs": {
                    "description": "Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details",
                    "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "properties": {
                            "name": {
                                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                "type": "string"
                            },
                            "value": {
                                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                "type": "string"
                            },
                            "valueFrom": {
                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                "properties": {
                                    "configMapKeyRef": {
                                        "description": "Selects a key of a ConfigMap.",
                                        "properties": {
                                            "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": "string"
                                            },
                                            "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "key"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "fieldRef": {
                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                            },
                                            "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "fieldPath"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "resourceFieldRef": {
                                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                        "properties": {
                                            "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                            },
                                            "divisor": {
                                                "anyOf": [
                                                    {
                                                        "type": "integer"
                                                    },
                                                    {
                                                        "type": "string"
                                                    }
                                                ],
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "resource"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "secretKeyRef": {
                                        "description": "Selects a key of a secret in the pod's namespace",
                                        "properties": {
                                            "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": "string"
                                            },
                                            "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                            }
                                        },
                                        "required": [
                                            "key"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array"
                },
                "noCache": {
                    "description": "noCache overrides the docker-strategy noCache option in the build config",
                    "type": "boolean"
                }
            },
            "type": "object",
            "additionalProperties": false
        },
        "env": {
            "description": "env contains additional environment variables you want to pass into a builder container.",
            "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "properties": {
                    "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                        "type": "string"
                    },
                    "valueFrom": {
                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                        "properties": {
                            "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "properties": {
                                    "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                        "type": "string"
                                    },
                                    "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "key"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "properties": {
                                    "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                    },
                                    "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "fieldPath"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "properties": {
                                    "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                    },
                                    "divisor": {
                                        "anyOf": [
                                            {
                                                "type": "integer"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "properties": {
                                    "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                        "type": "string"
                                    },
                                    "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "key"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "type": "array"
        },
        "from": {
            "description": "from is the reference to the ImageStreamTag that triggered the build.",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                }
            },
            "type": "object",
            "additionalProperties": false
        },
        "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
        },
        "lastVersion": {
            "description": "lastVersion (optional) is the LastVersion of the BuildConfig that was used to generate the build. If the BuildConfig in the generator doesn't match, a build will not be generated.",
            "format": "int64",
            "type": "integer",
            "minimum": -9223372036854776000,
            "maximum": 9223372036854776000
        },
        "metadata": {
            "type": "object"
        },
        "revision": {
            "description": "revision is the information from the source for a specific repo snapshot.",
            "properties": {
                "git": {
                    "description": "Git contains information about git-based build source",
                    "properties": {
                        "author": {
                            "description": "author is the author of a specific commit",
                            "properties": {
                                "email": {
                                    "description": "email of the source control user",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name of the source control user",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "commit": {
                            "description": "commit is the commit hash identifying a specific commit",
                            "type": "string"
                        },
                        "committer": {
                            "description": "committer is the committer of a specific commit",
                            "properties": {
                                "email": {
                                    "description": "email of the source control user",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "name of the source control user",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "message": {
                            "description": "message is the description of a specific commit",
                            "type": "string"
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "type": {
                    "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
                    "type": "string"
                }
            },
            "required": [
                "type"
            ],
            "type": "object",
            "additionalProperties": false
        },
        "sourceStrategyOptions": {
            "description": "SourceStrategyOptions contains additional source-strategy specific options for the build",
            "properties": {
                "incremental": {
                    "description": "incremental overrides the source-strategy incremental option in the build config",
                    "type": "boolean"
                }
            },
            "type": "object",
            "additionalProperties": false
        },
        "triggeredBy": {
            "description": "triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers.",
            "items": {
                "description": "BuildTriggerCause holds information about a triggered build. It is used for displaying build trigger data for each build and build configuration in oc describe. It is also used to describe which triggers led to the most recent update in the build configuration.",
                "properties": {
                    "bitbucketWebHook": {
                        "description": "BitbucketWebHook represents data for a Bitbucket webhook that fired a specific build.",
                        "properties": {
                            "revision": {
                                "description": "Revision is the git source revision information of the trigger.",
                                "properties": {
                                    "git": {
                                        "description": "Git contains information about git-based build source",
                                        "properties": {
                                            "author": {
                                                "description": "author is the author of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "commit": {
                                                "description": "commit is the commit hash identifying a specific commit",
                                                "type": "string"
                                            },
                                            "committer": {
                                                "description": "committer is the committer of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "message": {
                                                "description": "message is the description of a specific commit",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": {
                                        "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "secret": {
                                "description": "Secret is the obfuscated webhook secret that triggered a build.",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "genericWebHook": {
                        "description": "genericWebHook holds data about a builds generic webhook trigger.",
                        "properties": {
                            "revision": {
                                "description": "revision is an optional field that stores the git source revision information of the generic webhook trigger when it is available.",
                                "properties": {
                                    "git": {
                                        "description": "Git contains information about git-based build source",
                                        "properties": {
                                            "author": {
                                                "description": "author is the author of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "commit": {
                                                "description": "commit is the commit hash identifying a specific commit",
                                                "type": "string"
                                            },
                                            "committer": {
                                                "description": "committer is the committer of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "message": {
                                                "description": "message is the description of a specific commit",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": {
                                        "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "secret": {
                                "description": "secret is the obfuscated webhook secret that triggered a build.",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "githubWebHook": {
                        "description": "gitHubWebHook represents data for a GitHub webhook that fired a specific build.",
                        "properties": {
                            "revision": {
                                "description": "revision is the git revision information of the trigger.",
                                "properties": {
                                    "git": {
                                        "description": "Git contains information about git-based build source",
                                        "properties": {
                                            "author": {
                                                "description": "author is the author of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "commit": {
                                                "description": "commit is the commit hash identifying a specific commit",
                                                "type": "string"
                                            },
                                            "committer": {
                                                "description": "committer is the committer of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "message": {
                                                "description": "message is the description of a specific commit",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": {
                                        "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "secret": {
                                "description": "secret is the obfuscated webhook secret that triggered a build.",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "gitlabWebHook": {
                        "description": "GitLabWebHook represents data for a GitLab webhook that fired a specific build.",
                        "properties": {
                            "revision": {
                                "description": "Revision is the git source revision information of the trigger.",
                                "properties": {
                                    "git": {
                                        "description": "Git contains information about git-based build source",
                                        "properties": {
                                            "author": {
                                                "description": "author is the author of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "commit": {
                                                "description": "commit is the commit hash identifying a specific commit",
                                                "type": "string"
                                            },
                                            "committer": {
                                                "description": "committer is the committer of a specific commit",
                                                "properties": {
                                                    "email": {
                                                        "description": "email of the source control user",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "name of the source control user",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            },
                                            "message": {
                                                "description": "message is the description of a specific commit",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": {
                                        "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "secret": {
                                "description": "Secret is the obfuscated webhook secret that triggered a build.",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "imageChangeBuild": {
                        "description": "imageChangeBuild stores information about an imagechange event that triggered a new build.",
                        "properties": {
                            "fromRef": {
                                "description": "fromRef contains detailed information about an image that triggered a build.",
                                "properties": {
                                    "apiVersion": {
                                        "description": "API version of the referent.",
                                        "type": "string"
                                    },
                                    "fieldPath": {
                                        "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                    },
                                    "namespace": {
                                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                        "type": "string"
                                    },
                                    "resourceVersion": {
                                        "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                        "type": "string"
                                    },
                                    "uid": {
                                        "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "imageID": {
                                "description": "imageID is the ID of the image that triggered a new build.",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "message": {
                        "description": "message is used to store a human readable message for why the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration change\",etc.",
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "type": "array"
        },
        "triggeredByImage": {
            "description": "triggeredByImage is the Image that triggered this build.",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                }
            },
            "type": "object",
            "additionalProperties": false
        }
    },
    "type": "object",
    "additionalProperties": false,
    "$schema": "http://json-schema.org/draft-04/schema#"
}
