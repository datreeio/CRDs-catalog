{
  "description": "MultilineParser is the Schema of namespace-level multiline parser API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "flushTimeout": {
          "default": 5000,
          "description": "Timeout in milliseconds to flush a non-terminated multiline buffer. Default is set to 5 seconds.",
          "type": "integer"
        },
        "keyContent": {
          "description": "For an incoming structured message, specify the key that contains the data that should be processed by the regular expression and possibly concatenated.",
          "type": "string"
        },
        "parser": {
          "description": "Name of a pre-defined parser that must be applied to the incoming content before applying the regex rule. If no parser is defined, it's assumed that's a raw text and not a structured message.",
          "type": "string"
        },
        "rules": {
          "description": "Configure a rule to match a multiline pattern. The rule has a specific format described below. Multiple rules can be defined.",
          "items": {
            "properties": {
              "next": {
                "type": "string"
              },
              "regex": {
                "type": "string"
              },
              "start": {
                "type": "string"
              }
            },
            "required": [
              "next",
              "regex",
              "start"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "type": {
          "default": "regex",
          "description": "Set the multiline mode, for now, we support the type regex.",
          "enum": [
            "regex"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
