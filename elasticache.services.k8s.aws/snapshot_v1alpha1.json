{
  "description": "Snapshot is the Schema for the Snapshots API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SnapshotSpec defines the desired state of Snapshot.\n\nRepresents a copy of an entire Valkey or Redis OSS cluster as of the time\nwhen the snapshot was taken.",
      "properties": {
        "cacheClusterID": {
          "description": "The identifier of an existing cluster. The snapshot is created from this\ncluster.",
          "type": "string"
        },
        "kmsKeyID": {
          "description": "The ID of the KMS key used to encrypt the snapshot.",
          "type": "string"
        },
        "replicationGroupID": {
          "description": "The identifier of an existing replication group. The snapshot is created\nfrom this replication group.",
          "type": "string"
        },
        "snapshotName": {
          "description": "A name for the snapshot being created.",
          "type": "string"
        },
        "sourceSnapshotName": {
          "description": "The name of an existing snapshot from which to make a copy.",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags to be added to this resource. A tag is a key-value pair. A\ntag key must be accompanied by a tag value, although null is accepted.",
          "items": {
            "description": "A tag that can be added to an ElastiCache cluster or replication group. Tags\nare composed of a Key/Value pair. You can use tags to categorize and track\nall your ElastiCache resources, with the exception of global replication\ngroup. When you add or remove tags on replication groups, those actions will\nbe replicated to all nodes in the replication group. A tag with a null Value\nis permitted.",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "snapshotName"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "SnapshotStatus defines the observed state of Snapshot",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "autoMinorVersionUpgrade": {
          "description": "If you are running Valkey 7.2 and above or Redis OSS engine version 6.0 and\nabove, set this parameter to yes if you want to opt-in to the next auto minor\nversion upgrade campaign. This parameter is disabled for previous versions.",
          "type": "boolean"
        },
        "automaticFailover": {
          "description": "Indicates the status of automatic failover for the source Valkey or Redis\nOSS replication group.",
          "type": "string"
        },
        "cacheClusterCreateTime": {
          "description": "The date and time when the source cluster was created.",
          "format": "date-time",
          "type": "string"
        },
        "cacheNodeType": {
          "description": "The name of the compute and memory capacity node type for the source cluster.\n\nThe following node types are supported by ElastiCache. Generally speaking,\nthe current generation types provide more memory and computational power\nat lower cost when compared to their equivalent previous generation counterparts.\n\n   * General purpose: Current generation: M7g node types: cache.m7g.large,\n   cache.m7g.xlarge, cache.m7g.2xlarge, cache.m7g.4xlarge, cache.m7g.8xlarge,\n   cache.m7g.12xlarge, cache.m7g.16xlarge For region availability, see Supported\n   Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)\n   M6g node types (available only for Redis OSS engine version 5.0.6 onward\n   and for Memcached engine version 1.5.16 onward): cache.m6g.large, cache.m6g.xlarge,\n   cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge,\n   cache.m6g.16xlarge M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge,\n   cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types:\n   cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge\n   T4g node types (available only for Redis OSS engine version 5.0.6 onward\n   and Memcached engine version 1.5.16 onward): cache.t4g.micro, cache.t4g.small,\n   cache.t4g.medium T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium\n   T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous\n   generation: (not recommended. Existing clusters are still supported but\n   creation of new clusters is not supported for these types.) T1 node types:\n   cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large,\n   cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge,\n   cache.m3.2xlarge\n\n   * Compute optimized: Previous generation: (not recommended. Existing clusters\n   are still supported but creation of new clusters is not supported for\n   these types.) C1 node types: cache.c1.xlarge\n\n   * Memory optimized: Current generation: R7g node types: cache.r7g.large,\n   cache.r7g.xlarge, cache.r7g.2xlarge, cache.r7g.4xlarge, cache.r7g.8xlarge,\n   cache.r7g.12xlarge, cache.r7g.16xlarge For region availability, see Supported\n   Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)\n   R6g node types (available only for Redis OSS engine version 5.0.6 onward\n   and for Memcached engine version 1.5.16 onward): cache.r6g.large, cache.r6g.xlarge,\n   cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge,\n   cache.r6g.16xlarge R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge,\n   cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types:\n   cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge,\n   cache.r4.16xlarge Previous generation: (not recommended. Existing clusters\n   are still supported but creation of new clusters is not supported for\n   these types.) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge\n   R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge,\n   cache.r3.8xlarge\n\nAdditional node type info\n\n   * All current generation instance types are created in Amazon VPC by default.\n\n   * Valkey or Redis OSS append-only files (AOF) are not supported for T1\n   or T2 instances.\n\n   * Valkey or Redis OSS Multi-AZ with automatic failover is not supported\n   on T1 instances.\n\n   * The configuration variables appendonly and appendfsync are not supported\n   on Valkey, or on Redis OSS version 2.8.22 and later.",
          "type": "string"
        },
        "cacheParameterGroupName": {
          "description": "The cache parameter group that is associated with the source cluster.",
          "type": "string"
        },
        "cacheSubnetGroupName": {
          "description": "The name of the cache subnet group associated with the source cluster.",
          "type": "string"
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "dataTiering": {
          "description": "Enables data tiering. Data tiering is only supported for replication groups\nusing the r6gd node type. This parameter must be set to true when using r6gd\nnodes. For more information, see Data tiering (https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/data-tiering.html).",
          "type": "string"
        },
        "engine": {
          "description": "The name of the cache engine (memcached or redis) used by the source cluster.",
          "type": "string"
        },
        "engineVersion": {
          "description": "The version of the cache engine version that is used by the source cluster.",
          "type": "string"
        },
        "nodeSnapshots": {
          "description": "A list of the cache nodes in the source cluster.",
          "items": {
            "description": "Represents an individual cache node in a snapshot of a cluster.",
            "properties": {
              "cacheClusterID": {
                "type": "string"
              },
              "cacheNodeCreateTime": {
                "format": "date-time",
                "type": "string"
              },
              "cacheNodeID": {
                "type": "string"
              },
              "cacheSize": {
                "type": "string"
              },
              "nodeGroupConfiguration": {
                "description": "Node group (shard) configuration options. Each node group (shard) configuration\nhas the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones,\nReplicaCount.",
                "properties": {
                  "nodeGroupID": {
                    "type": "string"
                  },
                  "primaryAvailabilityZone": {
                    "type": "string"
                  },
                  "primaryOutpostARN": {
                    "type": "string"
                  },
                  "replicaAvailabilityZones": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "replicaCount": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "replicaOutpostARNs": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "slots": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nodeGroupID": {
                "type": "string"
              },
              "snapshotCreateTime": {
                "format": "date-time",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "numCacheNodes": {
          "description": "The number of cache nodes in the source cluster.\n\nFor clusters running Valkey or Redis OSS, this value must be 1. For clusters\nrunning Memcached, this value must be between 1 and 40.",
          "format": "int64",
          "type": "integer"
        },
        "numNodeGroups": {
          "description": "The number of node groups (shards) in this snapshot. When restoring from\na snapshot, the number of node groups (shards) in the snapshot and in the\nrestored replication group must be the same.",
          "format": "int64",
          "type": "integer"
        },
        "port": {
          "description": "The port number used by each cache nodes in the source cluster.",
          "format": "int64",
          "type": "integer"
        },
        "preferredAvailabilityZone": {
          "description": "The name of the Availability Zone in which the source cluster is located.",
          "type": "string"
        },
        "preferredMaintenanceWindow": {
          "description": "Specifies the weekly time range during which maintenance on the cluster is\nperformed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi\n(24H Clock UTC). The minimum maintenance window is a 60 minute period.\n\nValid values for ddd are:\n\n   * sun\n\n   * mon\n\n   * tue\n\n   * wed\n\n   * thu\n\n   * fri\n\n   * sat\n\nExample: sun:23:00-mon:01:30",
          "type": "string"
        },
        "preferredOutpostARN": {
          "description": "The ARN (Amazon Resource Name) of the preferred outpost.",
          "type": "string"
        },
        "replicationGroupDescription": {
          "description": "A description of the source replication group.",
          "type": "string"
        },
        "snapshotRetentionLimit": {
          "description": "For an automatic snapshot, the number of days for which ElastiCache retains\nthe snapshot before deleting it.\n\nFor manual snapshots, this field reflects the SnapshotRetentionLimit for\nthe source cluster when the snapshot was created. This field is otherwise\nignored: Manual snapshots do not expire, and can only be deleted using the\nDeleteSnapshot operation.\n\nImportant If the value of SnapshotRetentionLimit is set to zero (0), backups\nare turned off.",
          "format": "int64",
          "type": "integer"
        },
        "snapshotSource": {
          "description": "Indicates whether the snapshot is from an automatic backup (automated) or\nwas created manually (manual).",
          "type": "string"
        },
        "snapshotStatus": {
          "description": "The status of the snapshot. Valid values: creating | available | restoring\n| copying | deleting.",
          "type": "string"
        },
        "snapshotWindow": {
          "description": "The daily time range during which ElastiCache takes daily snapshots of the\nsource cluster.",
          "type": "string"
        },
        "topicARN": {
          "description": "The Amazon Resource Name (ARN) for the topic used by the source cluster for\npublishing notifications.",
          "type": "string"
        },
        "vpcID": {
          "description": "The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet\ngroup for the source cluster.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
