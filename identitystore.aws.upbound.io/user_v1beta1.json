{
  "description": "User is the Schema for the Users API.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "UserSpec defines the desired state of User",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "addresses": {
              "description": "Details about the user's address. At most 1 address is allowed. Detailed below.",
              "items": {
                "properties": {
                  "country": {
                    "description": "The country that this address is in.",
                    "type": "string"
                  },
                  "formatted": {
                    "description": "The name that is typically displayed when the address is shown for display.",
                    "type": "string"
                  },
                  "locality": {
                    "description": "The address locality.",
                    "type": "string"
                  },
                  "postalCode": {
                    "description": "The postal code of the address.",
                    "type": "string"
                  },
                  "primary": {
                    "description": "When true, this is the primary address associated with the user.",
                    "type": "boolean"
                  },
                  "region": {
                    "description": "The region of the address.",
                    "type": "string"
                  },
                  "streetAddress": {
                    "description": "The street of the address.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of address.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "displayName": {
              "description": "The name that is typically displayed when the user is referenced.",
              "type": "string"
            },
            "emails": {
              "description": "Details about the user's email. At most 1 email is allowed. Detailed below.",
              "items": {
                "properties": {
                  "primary": {
                    "description": "When true, this is the primary email associated with the user.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "The type of email.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The email address. This value must be unique across the identity store.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "identityStoreId": {
              "description": "The globally unique identifier for the identity store that this user is in.",
              "type": "string"
            },
            "locale": {
              "description": "The user's geographical region or location.",
              "type": "string"
            },
            "name": {
              "description": "Details about the user's full name. Detailed below.",
              "items": {
                "properties": {
                  "familyName": {
                    "description": "The family name of the user.",
                    "type": "string"
                  },
                  "formatted": {
                    "description": "The name that is typically displayed when the name is shown for display.",
                    "type": "string"
                  },
                  "givenName": {
                    "description": "The given name of the user.",
                    "type": "string"
                  },
                  "honorificPrefix": {
                    "description": "The honorific prefix of the user.",
                    "type": "string"
                  },
                  "honorificSuffix": {
                    "description": "The honorific suffix of the user.",
                    "type": "string"
                  },
                  "middleName": {
                    "description": "The middle name of the user.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "nickname": {
              "description": "An alternate name for the user.",
              "type": "string"
            },
            "phoneNumbers": {
              "description": "Details about the user's phone number. At most 1 phone number is allowed. Detailed below.",
              "items": {
                "properties": {
                  "primary": {
                    "description": "When true, this is the primary phone number associated with the user.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "The type of phone number.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The user's phone number.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "preferredLanguage": {
              "description": "The preferred language of the user.",
              "type": "string"
            },
            "profileUrl": {
              "description": "An URL that may be associated with the user.",
              "type": "string"
            },
            "region": {
              "description": "The region of the address.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "timezone": {
              "description": "The user's time zone.",
              "type": "string"
            },
            "title": {
              "description": "The user's title.",
              "type": "string"
            },
            "userName": {
              "description": "A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.",
              "type": "string"
            },
            "userType": {
              "description": "The user type.",
              "type": "string"
            }
          },
          "required": [
            "identityStoreId",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "addresses": {
              "description": "Details about the user's address. At most 1 address is allowed. Detailed below.",
              "items": {
                "properties": {
                  "country": {
                    "description": "The country that this address is in.",
                    "type": "string"
                  },
                  "formatted": {
                    "description": "The name that is typically displayed when the address is shown for display.",
                    "type": "string"
                  },
                  "locality": {
                    "description": "The address locality.",
                    "type": "string"
                  },
                  "postalCode": {
                    "description": "The postal code of the address.",
                    "type": "string"
                  },
                  "primary": {
                    "description": "When true, this is the primary address associated with the user.",
                    "type": "boolean"
                  },
                  "streetAddress": {
                    "description": "The street of the address.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of address.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "displayName": {
              "description": "The name that is typically displayed when the user is referenced.",
              "type": "string"
            },
            "emails": {
              "description": "Details about the user's email. At most 1 email is allowed. Detailed below.",
              "items": {
                "properties": {
                  "primary": {
                    "description": "When true, this is the primary email associated with the user.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "The type of email.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The email address. This value must be unique across the identity store.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "locale": {
              "description": "The user's geographical region or location.",
              "type": "string"
            },
            "name": {
              "description": "Details about the user's full name. Detailed below.",
              "items": {
                "properties": {
                  "familyName": {
                    "description": "The family name of the user.",
                    "type": "string"
                  },
                  "formatted": {
                    "description": "The name that is typically displayed when the name is shown for display.",
                    "type": "string"
                  },
                  "givenName": {
                    "description": "The given name of the user.",
                    "type": "string"
                  },
                  "honorificPrefix": {
                    "description": "The honorific prefix of the user.",
                    "type": "string"
                  },
                  "honorificSuffix": {
                    "description": "The honorific suffix of the user.",
                    "type": "string"
                  },
                  "middleName": {
                    "description": "The middle name of the user.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "nickname": {
              "description": "An alternate name for the user.",
              "type": "string"
            },
            "phoneNumbers": {
              "description": "Details about the user's phone number. At most 1 phone number is allowed. Detailed below.",
              "items": {
                "properties": {
                  "primary": {
                    "description": "When true, this is the primary phone number associated with the user.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "The type of phone number.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The user's phone number.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "preferredLanguage": {
              "description": "The preferred language of the user.",
              "type": "string"
            },
            "profileUrl": {
              "description": "An URL that may be associated with the user.",
              "type": "string"
            },
            "timezone": {
              "description": "The user's time zone.",
              "type": "string"
            },
            "title": {
              "description": "The user's title.",
              "type": "string"
            },
            "userName": {
              "description": "A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.",
              "type": "string"
            },
            "userType": {
              "description": "The user type.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.displayName is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))"
        },
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        },
        {
          "message": "spec.forProvider.userName is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.userName) || (has(self.initProvider) && has(self.initProvider.userName))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "UserStatus defines the observed state of User.",
      "properties": {
        "atProvider": {
          "properties": {
            "addresses": {
              "description": "Details about the user's address. At most 1 address is allowed. Detailed below.",
              "items": {
                "properties": {
                  "country": {
                    "description": "The country that this address is in.",
                    "type": "string"
                  },
                  "formatted": {
                    "description": "The name that is typically displayed when the address is shown for display.",
                    "type": "string"
                  },
                  "locality": {
                    "description": "The address locality.",
                    "type": "string"
                  },
                  "postalCode": {
                    "description": "The postal code of the address.",
                    "type": "string"
                  },
                  "primary": {
                    "description": "When true, this is the primary address associated with the user.",
                    "type": "boolean"
                  },
                  "region": {
                    "description": "The region of the address.",
                    "type": "string"
                  },
                  "streetAddress": {
                    "description": "The street of the address.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of address.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "displayName": {
              "description": "The name that is typically displayed when the user is referenced.",
              "type": "string"
            },
            "emails": {
              "description": "Details about the user's email. At most 1 email is allowed. Detailed below.",
              "items": {
                "properties": {
                  "primary": {
                    "description": "When true, this is the primary email associated with the user.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "The type of email.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The email address. This value must be unique across the identity store.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "externalIds": {
              "description": "A list of identifiers issued to this resource by an external identity provider.",
              "items": {
                "properties": {
                  "id": {
                    "description": "The identifier issued to this resource by an external identity provider.",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "The issuer for an external identifier.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "id": {
              "description": "The identifier issued to this resource by an external identity provider.",
              "type": "string"
            },
            "identityStoreId": {
              "description": "The globally unique identifier for the identity store that this user is in.",
              "type": "string"
            },
            "locale": {
              "description": "The user's geographical region or location.",
              "type": "string"
            },
            "name": {
              "description": "Details about the user's full name. Detailed below.",
              "items": {
                "properties": {
                  "familyName": {
                    "description": "The family name of the user.",
                    "type": "string"
                  },
                  "formatted": {
                    "description": "The name that is typically displayed when the name is shown for display.",
                    "type": "string"
                  },
                  "givenName": {
                    "description": "The given name of the user.",
                    "type": "string"
                  },
                  "honorificPrefix": {
                    "description": "The honorific prefix of the user.",
                    "type": "string"
                  },
                  "honorificSuffix": {
                    "description": "The honorific suffix of the user.",
                    "type": "string"
                  },
                  "middleName": {
                    "description": "The middle name of the user.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "nickname": {
              "description": "An alternate name for the user.",
              "type": "string"
            },
            "phoneNumbers": {
              "description": "Details about the user's phone number. At most 1 phone number is allowed. Detailed below.",
              "items": {
                "properties": {
                  "primary": {
                    "description": "When true, this is the primary phone number associated with the user.",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "The type of phone number.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The user's phone number.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "preferredLanguage": {
              "description": "The preferred language of the user.",
              "type": "string"
            },
            "profileUrl": {
              "description": "An URL that may be associated with the user.",
              "type": "string"
            },
            "timezone": {
              "description": "The user's time zone.",
              "type": "string"
            },
            "title": {
              "description": "The user's title.",
              "type": "string"
            },
            "userId": {
              "description": "The identifier for this user in the identity store.",
              "type": "string"
            },
            "userName": {
              "description": "A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.",
              "type": "string"
            },
            "userType": {
              "description": "The user type.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
