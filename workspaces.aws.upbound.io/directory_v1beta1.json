{
  "description": "Directory is the Schema for the Directorys API. Provides a WorkSpaces directory in AWS WorkSpaces Service.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DirectorySpec defines the desired state of Directory",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "directoryId": {
              "description": "The directory identifier for registration in WorkSpaces service.",
              "type": "string"
            },
            "directoryIdRef": {
              "description": "Reference to a Directory in ds to populate directoryId.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "directoryIdSelector": {
              "description": "Selector for a Directory in ds to populate directoryId.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "ipGroupIds": {
              "description": "The identifiers of the IP access control groups associated with the directory.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "ipGroupIdsRefs": {
              "description": "References to IPGroup in workspaces to populate ipGroupIds.",
              "items": {
                "description": "A Reference to a named object.",
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "properties": {
                      "resolution": {
                        "default": "Required",
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "enum": [
                          "Required",
                          "Optional"
                        ],
                        "type": "string"
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "ipGroupIdsSelector": {
              "description": "Selector for a list of IPGroup in workspaces to populate ipGroupIds.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "samlProperties": {
              "description": "\u2013  Configuration of SAML authentication integration. Defined below.",
              "items": {
                "properties": {
                  "relayStateParameterName": {
                    "description": "The relay state parameter name supported by the SAML 2.0 identity provider (IdP). Default RelayState.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of SAML 2.0 authentication. Default DISABLED.",
                    "type": "string"
                  },
                  "userAccessUrl": {
                    "description": "The SAML 2.0 identity provider (IdP) user access URL.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "selfServicePermissions": {
              "description": "service capabilities. Defined below.",
              "items": {
                "properties": {
                  "changeComputeType": {
                    "description": "\u2013  Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.",
                    "type": "boolean"
                  },
                  "increaseVolumeSize": {
                    "description": "\u2013  Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.",
                    "type": "boolean"
                  },
                  "rebuildWorkspace": {
                    "description": "\u2013  Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.",
                    "type": "boolean"
                  },
                  "restartWorkspace": {
                    "description": "\u2013  Whether WorkSpaces directory users can restart their workspace. Default true.",
                    "type": "boolean"
                  },
                  "switchRunningMode": {
                    "description": "\u2013  Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIdRefs": {
              "description": "References to Subnet in ec2 to populate subnetIds.",
              "items": {
                "description": "A Reference to a named object.",
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "properties": {
                      "resolution": {
                        "default": "Required",
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "enum": [
                          "Required",
                          "Optional"
                        ],
                        "type": "string"
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIdSelector": {
              "description": "Selector for a list of Subnet in ec2 to populate subnetIds.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "subnetIds": {
              "description": "The identifiers of the subnets where the directory resides.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "workspaceAccessProperties": {
              "description": "\u2013  Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.",
              "items": {
                "properties": {
                  "deviceTypeAndroid": {
                    "description": "\u2013  Indicates whether users can use Android devices to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeChromeos": {
                    "description": "\u2013  Indicates whether users can use Chromebooks to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeIos": {
                    "description": "\u2013  Indicates whether users can use iOS devices to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeLinux": {
                    "description": "\u2013  Indicates whether users can use Linux clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeOsx": {
                    "description": "\u2013  Indicates whether users can use macOS clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeWeb": {
                    "description": "\u2013  Indicates whether users can access their WorkSpaces through a web browser.",
                    "type": "string"
                  },
                  "deviceTypeWindows": {
                    "description": "\u2013  Indicates whether users can use Windows clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeZeroclient": {
                    "description": "\u2013  Indicates whether users can use zero client devices to access their WorkSpaces.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "workspaceCreationProperties": {
              "description": "\u2013  Default properties that are used for creating WorkSpaces. Defined below.",
              "items": {
                "properties": {
                  "customSecurityGroupId": {
                    "description": "\u2013  The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.",
                    "type": "string"
                  },
                  "customSecurityGroupIdRef": {
                    "description": "Reference to a SecurityGroup in ec2 to populate customSecurityGroupId.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "customSecurityGroupIdSelector": {
                    "description": "Selector for a SecurityGroup in ec2 to populate customSecurityGroupId.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "defaultOu": {
                    "description": "\u2013  The default organizational unit (OU) for your WorkSpace directories. Should conform \"OU=<value>,DC=<value>,...,DC=<value>\" pattern.",
                    "type": "string"
                  },
                  "enableInternetAccess": {
                    "description": "\u2013  Indicates whether internet access is enabled for your WorkSpaces.",
                    "type": "boolean"
                  },
                  "enableMaintenanceMode": {
                    "description": "\u2013  Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..",
                    "type": "boolean"
                  },
                  "userEnabledAsLocalAdministrator": {
                    "description": "\u2013  Indicates whether users are local administrators of their WorkSpaces.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "directoryId": {
              "description": "The directory identifier for registration in WorkSpaces service.",
              "type": "string"
            },
            "directoryIdRef": {
              "description": "Reference to a Directory in ds to populate directoryId.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "directoryIdSelector": {
              "description": "Selector for a Directory in ds to populate directoryId.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "ipGroupIds": {
              "description": "The identifiers of the IP access control groups associated with the directory.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "ipGroupIdsRefs": {
              "description": "References to IPGroup in workspaces to populate ipGroupIds.",
              "items": {
                "description": "A Reference to a named object.",
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "properties": {
                      "resolution": {
                        "default": "Required",
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "enum": [
                          "Required",
                          "Optional"
                        ],
                        "type": "string"
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "ipGroupIdsSelector": {
              "description": "Selector for a list of IPGroup in workspaces to populate ipGroupIds.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "samlProperties": {
              "description": "\u2013  Configuration of SAML authentication integration. Defined below.",
              "items": {
                "properties": {
                  "relayStateParameterName": {
                    "description": "The relay state parameter name supported by the SAML 2.0 identity provider (IdP). Default RelayState.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of SAML 2.0 authentication. Default DISABLED.",
                    "type": "string"
                  },
                  "userAccessUrl": {
                    "description": "The SAML 2.0 identity provider (IdP) user access URL.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "selfServicePermissions": {
              "description": "service capabilities. Defined below.",
              "items": {
                "properties": {
                  "changeComputeType": {
                    "description": "\u2013  Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.",
                    "type": "boolean"
                  },
                  "increaseVolumeSize": {
                    "description": "\u2013  Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.",
                    "type": "boolean"
                  },
                  "rebuildWorkspace": {
                    "description": "\u2013  Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.",
                    "type": "boolean"
                  },
                  "restartWorkspace": {
                    "description": "\u2013  Whether WorkSpaces directory users can restart their workspace. Default true.",
                    "type": "boolean"
                  },
                  "switchRunningMode": {
                    "description": "\u2013  Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIdRefs": {
              "description": "References to Subnet in ec2 to populate subnetIds.",
              "items": {
                "description": "A Reference to a named object.",
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "properties": {
                      "resolution": {
                        "default": "Required",
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "enum": [
                          "Required",
                          "Optional"
                        ],
                        "type": "string"
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIdSelector": {
              "description": "Selector for a list of Subnet in ec2 to populate subnetIds.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "subnetIds": {
              "description": "The identifiers of the subnets where the directory resides.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "workspaceAccessProperties": {
              "description": "\u2013  Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.",
              "items": {
                "properties": {
                  "deviceTypeAndroid": {
                    "description": "\u2013  Indicates whether users can use Android devices to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeChromeos": {
                    "description": "\u2013  Indicates whether users can use Chromebooks to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeIos": {
                    "description": "\u2013  Indicates whether users can use iOS devices to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeLinux": {
                    "description": "\u2013  Indicates whether users can use Linux clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeOsx": {
                    "description": "\u2013  Indicates whether users can use macOS clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeWeb": {
                    "description": "\u2013  Indicates whether users can access their WorkSpaces through a web browser.",
                    "type": "string"
                  },
                  "deviceTypeWindows": {
                    "description": "\u2013  Indicates whether users can use Windows clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeZeroclient": {
                    "description": "\u2013  Indicates whether users can use zero client devices to access their WorkSpaces.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "workspaceCreationProperties": {
              "description": "\u2013  Default properties that are used for creating WorkSpaces. Defined below.",
              "items": {
                "properties": {
                  "customSecurityGroupId": {
                    "description": "\u2013  The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.",
                    "type": "string"
                  },
                  "customSecurityGroupIdRef": {
                    "description": "Reference to a SecurityGroup in ec2 to populate customSecurityGroupId.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "customSecurityGroupIdSelector": {
                    "description": "Selector for a SecurityGroup in ec2 to populate customSecurityGroupId.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "defaultOu": {
                    "description": "\u2013  The default organizational unit (OU) for your WorkSpace directories. Should conform \"OU=<value>,DC=<value>,...,DC=<value>\" pattern.",
                    "type": "string"
                  },
                  "enableInternetAccess": {
                    "description": "\u2013  Indicates whether internet access is enabled for your WorkSpaces.",
                    "type": "boolean"
                  },
                  "enableMaintenanceMode": {
                    "description": "\u2013  Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..",
                    "type": "boolean"
                  },
                  "userEnabledAsLocalAdministrator": {
                    "description": "\u2013  Indicates whether users are local administrators of their WorkSpaces.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DirectoryStatus defines the observed state of Directory.",
      "properties": {
        "atProvider": {
          "properties": {
            "alias": {
              "description": "The directory alias.",
              "type": "string"
            },
            "customerUserName": {
              "description": "The user name for the service account.",
              "type": "string"
            },
            "directoryId": {
              "description": "The directory identifier for registration in WorkSpaces service.",
              "type": "string"
            },
            "directoryName": {
              "description": "The name of the directory.",
              "type": "string"
            },
            "directoryType": {
              "description": "The directory type.",
              "type": "string"
            },
            "dnsIpAddresses": {
              "description": "The IP addresses of the DNS servers for the directory.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "iamRoleId": {
              "description": "The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.",
              "type": "string"
            },
            "id": {
              "description": "The WorkSpaces directory identifier.",
              "type": "string"
            },
            "ipGroupIds": {
              "description": "The identifiers of the IP access control groups associated with the directory.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "registrationCode": {
              "description": "The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.",
              "type": "string"
            },
            "samlProperties": {
              "description": "\u2013  Configuration of SAML authentication integration. Defined below.",
              "items": {
                "properties": {
                  "relayStateParameterName": {
                    "description": "The relay state parameter name supported by the SAML 2.0 identity provider (IdP). Default RelayState.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of SAML 2.0 authentication. Default DISABLED.",
                    "type": "string"
                  },
                  "userAccessUrl": {
                    "description": "The SAML 2.0 identity provider (IdP) user access URL.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "selfServicePermissions": {
              "description": "service capabilities. Defined below.",
              "items": {
                "properties": {
                  "changeComputeType": {
                    "description": "\u2013  Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default false.",
                    "type": "boolean"
                  },
                  "increaseVolumeSize": {
                    "description": "\u2013  Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default false.",
                    "type": "boolean"
                  },
                  "rebuildWorkspace": {
                    "description": "\u2013  Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default false.",
                    "type": "boolean"
                  },
                  "restartWorkspace": {
                    "description": "\u2013  Whether WorkSpaces directory users can restart their workspace. Default true.",
                    "type": "boolean"
                  },
                  "switchRunningMode": {
                    "description": "\u2013  Whether WorkSpaces directory users can switch the running mode of their workspace. Default false.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIds": {
              "description": "The identifiers of the subnets where the directory resides.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "workspaceAccessProperties": {
              "description": "\u2013  Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.",
              "items": {
                "properties": {
                  "deviceTypeAndroid": {
                    "description": "\u2013  Indicates whether users can use Android devices to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeChromeos": {
                    "description": "\u2013  Indicates whether users can use Chromebooks to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeIos": {
                    "description": "\u2013  Indicates whether users can use iOS devices to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeLinux": {
                    "description": "\u2013  Indicates whether users can use Linux clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeOsx": {
                    "description": "\u2013  Indicates whether users can use macOS clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeWeb": {
                    "description": "\u2013  Indicates whether users can access their WorkSpaces through a web browser.",
                    "type": "string"
                  },
                  "deviceTypeWindows": {
                    "description": "\u2013  Indicates whether users can use Windows clients to access their WorkSpaces.",
                    "type": "string"
                  },
                  "deviceTypeZeroclient": {
                    "description": "\u2013  Indicates whether users can use zero client devices to access their WorkSpaces.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "workspaceCreationProperties": {
              "description": "\u2013  Default properties that are used for creating WorkSpaces. Defined below.",
              "items": {
                "properties": {
                  "customSecurityGroupId": {
                    "description": "\u2013  The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.",
                    "type": "string"
                  },
                  "defaultOu": {
                    "description": "\u2013  The default organizational unit (OU) for your WorkSpace directories. Should conform \"OU=<value>,DC=<value>,...,DC=<value>\" pattern.",
                    "type": "string"
                  },
                  "enableInternetAccess": {
                    "description": "\u2013  Indicates whether internet access is enabled for your WorkSpaces.",
                    "type": "boolean"
                  },
                  "enableMaintenanceMode": {
                    "description": "\u2013  Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see WorkSpace Maintenance..",
                    "type": "boolean"
                  },
                  "userEnabledAsLocalAdministrator": {
                    "description": "\u2013  Indicates whether users are local administrators of their WorkSpaces.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "workspaceSecurityGroupId": {
              "description": "The identifier of the security group that is assigned to new WorkSpaces.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
