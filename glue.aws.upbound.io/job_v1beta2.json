{
  "description": "Job is the Schema for the Jobs API. Provides an Glue Job resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "JobSpec defines the desired state of Job",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "command": {
              "description": "\u2013  The command of the job. Defined below.",
              "properties": {
                "name": {
                  "description": "\u2013  The name you assign to this job. It must be unique in your account.",
                  "type": "string"
                },
                "pythonVersion": {
                  "description": "The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.",
                  "type": "string"
                },
                "runtime": {
                  "description": "In Ray jobs, runtime is used to specify the versions of Ray, Python and additional libraries available in your environment. This field is not used in other job types. For supported runtime environment values, see Working with Ray jobs in the Glue Developer Guide.",
                  "type": "string"
                },
                "scriptLocation": {
                  "description": "Specifies the S3 path to a script that executes a job.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "connections": {
              "description": "\u2013  The list of connections used for this job.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "defaultArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "description": {
              "description": "\u2013  Description of the job.",
              "type": "string"
            },
            "executionClass": {
              "description": "Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: FLEX, STANDARD.",
              "type": "string"
            },
            "executionProperty": {
              "description": "\u2013  Execution property of the job. Defined below.",
              "properties": {
                "maxConcurrentRuns": {
                  "description": "The maximum number of concurrent runs allowed for a job. The default is 1.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "glueVersion": {
              "description": "The version of glue to use, for example \"1.0\". Ray jobs should set this to 4.0 or greater. For information about available versions, see the AWS Glue Release Notes.",
              "type": "string"
            },
            "jobRunQueuingEnabled": {
              "description": "Specifies whether job run queuing is enabled for the job runs for this job. A value of true means job run queuing is enabled for the job runs. If false or not populated, the job runs will not be considered for queueing.",
              "type": "boolean"
            },
            "maintenanceWindow": {
              "description": "\u2013  Specifies the day of the week and hour for the maintenance window for streaming jobs.",
              "type": "string"
            },
            "maxCapacity": {
              "description": "\u2013  The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.",
              "type": "number"
            },
            "maxRetries": {
              "description": "\u2013  The maximum number of times to retry this job if it fails.",
              "type": "number"
            },
            "nonOverridableArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "overridable arguments for this job, specified as name-value pairs.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "notificationProperty": {
              "description": "Notification property of the job. Defined below.",
              "properties": {
                "notifyDelayAfter": {
                  "description": "After a job run starts, the number of minutes to wait before sending a job run delay notification.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "numberOfWorkers": {
              "description": "The number of workers of a defined workerType that are allocated when a job runs.",
              "type": "number"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "roleArn": {
              "description": "\u2013  The ARN of the IAM role associated with this job.",
              "type": "string"
            },
            "roleArnRef": {
              "description": "Reference to a Role in iam to populate roleArn.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "roleArnSelector": {
              "description": "Selector for a Role in iam to populate roleArn.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityConfiguration": {
              "description": "The name of the Security Configuration to be associated with the job.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "\u2013  The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimited) for gluestreaming jobs.",
              "type": "number"
            },
            "workerType": {
              "description": "The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X for Spark jobs. Accepts the value Z.2X for Ray jobs.",
              "type": "string"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "command": {
              "description": "\u2013  The command of the job. Defined below.",
              "properties": {
                "name": {
                  "description": "\u2013  The name you assign to this job. It must be unique in your account.",
                  "type": "string"
                },
                "pythonVersion": {
                  "description": "The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.",
                  "type": "string"
                },
                "runtime": {
                  "description": "In Ray jobs, runtime is used to specify the versions of Ray, Python and additional libraries available in your environment. This field is not used in other job types. For supported runtime environment values, see Working with Ray jobs in the Glue Developer Guide.",
                  "type": "string"
                },
                "scriptLocation": {
                  "description": "Specifies the S3 path to a script that executes a job.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "connections": {
              "description": "\u2013  The list of connections used for this job.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "defaultArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "description": {
              "description": "\u2013  Description of the job.",
              "type": "string"
            },
            "executionClass": {
              "description": "Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: FLEX, STANDARD.",
              "type": "string"
            },
            "executionProperty": {
              "description": "\u2013  Execution property of the job. Defined below.",
              "properties": {
                "maxConcurrentRuns": {
                  "description": "The maximum number of concurrent runs allowed for a job. The default is 1.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "glueVersion": {
              "description": "The version of glue to use, for example \"1.0\". Ray jobs should set this to 4.0 or greater. For information about available versions, see the AWS Glue Release Notes.",
              "type": "string"
            },
            "jobRunQueuingEnabled": {
              "description": "Specifies whether job run queuing is enabled for the job runs for this job. A value of true means job run queuing is enabled for the job runs. If false or not populated, the job runs will not be considered for queueing.",
              "type": "boolean"
            },
            "maintenanceWindow": {
              "description": "\u2013  Specifies the day of the week and hour for the maintenance window for streaming jobs.",
              "type": "string"
            },
            "maxCapacity": {
              "description": "\u2013  The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.",
              "type": "number"
            },
            "maxRetries": {
              "description": "\u2013  The maximum number of times to retry this job if it fails.",
              "type": "number"
            },
            "nonOverridableArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "overridable arguments for this job, specified as name-value pairs.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "notificationProperty": {
              "description": "Notification property of the job. Defined below.",
              "properties": {
                "notifyDelayAfter": {
                  "description": "After a job run starts, the number of minutes to wait before sending a job run delay notification.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "numberOfWorkers": {
              "description": "The number of workers of a defined workerType that are allocated when a job runs.",
              "type": "number"
            },
            "roleArn": {
              "description": "\u2013  The ARN of the IAM role associated with this job.",
              "type": "string"
            },
            "roleArnRef": {
              "description": "Reference to a Role in iam to populate roleArn.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "roleArnSelector": {
              "description": "Selector for a Role in iam to populate roleArn.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityConfiguration": {
              "description": "The name of the Security Configuration to be associated with the job.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "\u2013  The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimited) for gluestreaming jobs.",
              "type": "number"
            },
            "workerType": {
              "description": "The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X for Spark jobs. Accepts the value Z.2X for Ray jobs.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.command is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.command) || (has(self.initProvider) && has(self.initProvider.command))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "JobStatus defines the observed state of Job.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "Amazon Resource Name (ARN) of Glue Job",
              "type": "string"
            },
            "command": {
              "description": "\u2013  The command of the job. Defined below.",
              "properties": {
                "name": {
                  "description": "\u2013  The name you assign to this job. It must be unique in your account.",
                  "type": "string"
                },
                "pythonVersion": {
                  "description": "The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.",
                  "type": "string"
                },
                "runtime": {
                  "description": "In Ray jobs, runtime is used to specify the versions of Ray, Python and additional libraries available in your environment. This field is not used in other job types. For supported runtime environment values, see Working with Ray jobs in the Glue Developer Guide.",
                  "type": "string"
                },
                "scriptLocation": {
                  "description": "Specifies the S3 path to a script that executes a job.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "connections": {
              "description": "\u2013  The list of connections used for this job.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "defaultArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the Calling AWS Glue APIs in Python topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the Special Parameters Used by AWS Glue topic in the developer guide.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "description": {
              "description": "\u2013  Description of the job.",
              "type": "string"
            },
            "executionClass": {
              "description": "Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: FLEX, STANDARD.",
              "type": "string"
            },
            "executionProperty": {
              "description": "\u2013  Execution property of the job. Defined below.",
              "properties": {
                "maxConcurrentRuns": {
                  "description": "The maximum number of concurrent runs allowed for a job. The default is 1.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "glueVersion": {
              "description": "The version of glue to use, for example \"1.0\". Ray jobs should set this to 4.0 or greater. For information about available versions, see the AWS Glue Release Notes.",
              "type": "string"
            },
            "id": {
              "description": "Job name",
              "type": "string"
            },
            "jobRunQueuingEnabled": {
              "description": "Specifies whether job run queuing is enabled for the job runs for this job. A value of true means job run queuing is enabled for the job runs. If false or not populated, the job runs will not be considered for queueing.",
              "type": "boolean"
            },
            "maintenanceWindow": {
              "description": "\u2013  Specifies the day of the week and hour for the maintenance window for streaming jobs.",
              "type": "string"
            },
            "maxCapacity": {
              "description": "\u2013  The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. Required when pythonshell is set, accept either 0.0625 or 1.0. Use number_of_workers and worker_type arguments instead with glue_version 2.0 and above.",
              "type": "number"
            },
            "maxRetries": {
              "description": "\u2013  The maximum number of times to retry this job if it fails.",
              "type": "number"
            },
            "nonOverridableArguments": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "overridable arguments for this job, specified as name-value pairs.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "notificationProperty": {
              "description": "Notification property of the job. Defined below.",
              "properties": {
                "notifyDelayAfter": {
                  "description": "After a job run starts, the number of minutes to wait before sending a job run delay notification.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "numberOfWorkers": {
              "description": "The number of workers of a defined workerType that are allocated when a job runs.",
              "type": "number"
            },
            "roleArn": {
              "description": "\u2013  The ARN of the IAM role associated with this job.",
              "type": "string"
            },
            "securityConfiguration": {
              "description": "The name of the Security Configuration to be associated with the job.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "\u2013  The job timeout in minutes. The default is 2880 minutes (48 hours) for glueetl and pythonshell jobs, and null (unlimited) for gluestreaming jobs.",
              "type": "number"
            },
            "workerType": {
              "description": "The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X for Spark jobs. Accepts the value Z.2X for Ray jobs.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
