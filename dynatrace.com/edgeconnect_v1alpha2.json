{
  "description": "EdgeConnect is the Schema for the EdgeConnect API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EdgeConnectSpec defines the desired state of EdgeConnect.",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Adds additional annotations to the EdgeConnect pods",
          "type": "object"
        },
        "apiServer": {
          "description": "Location of the Dynatrace API to connect to, including your specific environment UUID",
          "type": "string"
        },
        "autoUpdate": {
          "description": "Enables automatic restarts of EdgeConnect pods in case a new version is available (the default...",
          "type": "boolean"
        },
        "caCertsRef": {
          "description": "Adds custom root certificate from a configmap.",
          "type": "string"
        },
        "customPullSecret": {
          "description": "Pull secret for your private registry",
          "type": "string"
        },
        "env": {
          "description": "Adds additional environment variables to the EdgeConnect pods",
          "items": {
            "description": "EnvVar represents an environment variable present in a Container.",
            "properties": {
              "name": {
                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                "type": "string"
              },
              "value": {
                "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in...",
                "type": "string"
              },
              "valueFrom": {
                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                "properties": {
                  "configMapKeyRef": {
                    "description": "Selects a key of a ConfigMap.",
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "default": "",
                        "description": "Name of the referent.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "fieldRef": {
                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.",
                    "properties": {
                      "apiVersion": {
                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "Path of the field to select in the specified API version.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "fieldPath"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "resourceFieldRef": {
                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.",
                    "properties": {
                      "containerName": {
                        "description": "Container name: required for volumes, optional for env vars",
                        "type": "string"
                      },
                      "divisor": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "resource": {
                        "description": "Required: resource to select",
                        "type": "string"
                      }
                    },
                    "required": [
                      "resource"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "secretKeyRef": {
                    "description": "Selects a key of a secret in the pod's namespace",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "default": "",
                        "description": "Name of the referent.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "hostPatterns": {
          "description": "Host patterns to be set in the tenant, only considered when provisioning is enabled.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "hostRestrictions": {
          "description": "Restrict outgoing HTTP requests to your internal resources to specified hosts",
          "example": "internal.example.org,*.dev.example.org",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "imageRef": {
          "description": "Overrides the default image",
          "properties": {
            "repository": {
              "description": "Custom image repository",
              "example": "docker.io/dynatrace/image-name",
              "type": "string"
            },
            "tag": {
              "description": "Indicates a tag of the image to use",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "kubernetesAutomation": {
          "description": "KubernetesAutomation enables Kubernetes Automation for Workflows",
          "properties": {
            "enabled": {
              "description": "Enables Kubernetes Automation for Workflows",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Adds additional labels to the EdgeConnect pods",
          "type": "object"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Node selector to control the selection of nodes for the EdgeConnect pods",
          "type": "object"
        },
        "oauth": {
          "description": "EdgeConnect uses the OAuth client to authenticate itself with the Dynatrace platform.",
          "properties": {
            "clientSecret": {
              "description": "Name of the secret that holds oauth clientId/secret",
              "type": "string"
            },
            "endpoint": {
              "description": "Token endpoint URL of Dynatrace SSO",
              "type": "string"
            },
            "provisioner": {
              "description": "Determines if the operator will create the EdgeConnect and light OAuth client on the cluster using...",
              "type": "boolean"
            },
            "resource": {
              "description": "URN identifying your account. You get the URN when creating the OAuth client",
              "type": "string"
            }
          },
          "required": [
            "clientSecret",
            "endpoint",
            "resource"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "proxy": {
          "description": "General configurations for proxy settings.",
          "properties": {
            "authRef": {
              "description": "Secret name which contains the username and password used for authentication with the proxy, using...",
              "type": "string"
            },
            "host": {
              "description": "Server address (hostname or IP address) of the proxy.",
              "type": "string"
            },
            "noProxy": {
              "description": "NoProxy represents the NO_PROXY or no_proxy environment\nvariable.",
              "type": "string"
            },
            "port": {
              "description": "Port of the proxy.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "replicas": {
          "description": "Amount of replicas for your EdgeConnect (the default value is: 1)",
          "format": "int32",
          "type": "integer"
        },
        "resources": {
          "description": "Defines resources requests and limits for single pods",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.",
                    "type": "string"
                  },
                  "request": {
                    "description": "Request is the name chosen for a request in the referenced claim.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "serviceAccountName": {
          "description": "ServiceAccountName that allows EdgeConnect to access the Kubernetes API",
          "type": "string"
        },
        "tolerations": {
          "description": "Sets tolerations for the EdgeConnect pods",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple...",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute,...",
                "format": "int64",
                "type": "integer"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Sets topology spread constraints for the EdgeConnect pods",
          "items": {
            "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
            "properties": {
              "labelSelector": {
                "description": "LabelSelector is used to find matching pods.",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that...",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "matchLabelKeys": {
                "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be...",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-kubernetes-list-type": "atomic"
              },
              "maxSkew": {
                "description": "MaxSkew describes the degree to which pods may be unevenly distributed.",
                "format": "int32",
                "type": "integer"
              },
              "minDomains": {
                "description": "MinDomains indicates a minimum number of eligible domains.",
                "format": "int32",
                "type": "integer"
              },
              "nodeAffinityPolicy": {
                "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod...",
                "type": "string"
              },
              "nodeTaintsPolicy": {
                "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew.",
                "type": "string"
              },
              "topologyKey": {
                "description": "TopologyKey is the key of node labels.",
                "type": "string"
              },
              "whenUnsatisfiable": {
                "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.",
                "type": "string"
              }
            },
            "required": [
              "maxSkew",
              "topologyKey",
              "whenUnsatisfiable"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "apiServer",
        "oauth"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "EdgeConnectStatus defines the observed state of EdgeConnect.",
      "properties": {
        "conditions": {
          "description": "Conditions includes status about the current state of the instance",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "kubeSystemUID": {
          "description": "kube-system namespace uid",
          "type": "string"
        },
        "phase": {
          "description": "Defines the current state (Running, Updating, Error, ...)",
          "type": "string"
        },
        "updatedTimestamp": {
          "description": "Indicates when the resource was last updated",
          "format": "date-time",
          "type": "string"
        },
        "version": {
          "description": "Version used for the Edgeconnect image",
          "properties": {
            "imageID": {
              "description": "Image ID",
              "type": "string"
            },
            "lastProbeTimestamp": {
              "description": "Indicates when the last check for a new version was performed",
              "format": "date-time",
              "type": "string"
            },
            "source": {
              "description": "Source of the image (tenant-registry, public-registry, ...)",
              "type": "string"
            },
            "type": {
              "description": "Image type",
              "type": "string"
            },
            "version": {
              "description": "Image version",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
