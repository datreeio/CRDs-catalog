{
  "description": "ReplicationGroup is the Schema for the ReplicationGroups API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ReplicationGroupSpec defines the desired state of ReplicationGroup. \n Contains all of the attributes of a specific Redis replication group.",
      "properties": {
        "atRestEncryptionEnabled": {
          "description": "A flag that enables encryption at rest when set to true. \n You cannot modify the value of AtRestEncryptionEnabled after the replication group is created. To enable encryption at rest on a replication group you must set AtRestEncryptionEnabled to true when you create the replication group. \n Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. \n Default: false",
          "type": "boolean"
        },
        "authToken": {
          "description": "Reserved parameter. The password used to access a password protected server. \n AuthToken can be specified only on replication groups where TransitEncryptionEnabled is true. \n For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup. \n Password constraints: \n - Must be only printable ASCII characters. \n - Must be at least 16 characters and no more than 128 characters in length. \n - The only permitted printable special characters are !, &, #, $, ^, <, >, and -. Other printable special characters cannot be used in the AUTH token. \n For more information, see AUTH password (http://redis.io/commands/AUTH) at http://redis.io/commands/AUTH.",
          "properties": {
            "key": {
              "description": "Key is the key within the secret",
              "type": "string"
            },
            "name": {
              "description": "name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "automaticFailoverEnabled": {
          "description": "Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails. \n AutomaticFailoverEnabled must be enabled for Redis (cluster mode enabled) replication groups. \n Default: false",
          "type": "boolean"
        },
        "cacheNodeType": {
          "description": "The compute and memory capacity of the nodes in the node group (shard). \n The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts. \n - General purpose: Current generation: M6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward): cache.m6g.large, cache.m6g.xlarge, cache.m6g.2xlarge, cache.m6g.4xlarge, cache.m6g.8xlarge, cache.m6g.12xlarge, cache.m6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) M5 node types: cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge, cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge M4 node types: cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge T4g node types (available only for Redis engine version 5.0.6 onward and Memcached engine version 1.5.16 onward): cache.t4g.micro, cache.t4g.small, cache.t4g.medium T3 node types: cache.t3.micro, cache.t3.small, cache.t3.medium T2 node types: cache.t2.micro, cache.t2.small, cache.t2.medium Previous generation: (not recommended. Existing clusters are still supported but creation of new clusters is not supported for these types.) T1 node types: cache.t1.micro M1 node types: cache.m1.small, cache.m1.medium, cache.m1.large, cache.m1.xlarge M3 node types: cache.m3.medium, cache.m3.large, cache.m3.xlarge, cache.m3.2xlarge \n - Compute optimized: Previous generation: (not recommended. Existing clusters are still supported but creation of new clusters is not supported for these types.) C1 node types: cache.c1.xlarge \n - Memory optimized with data tiering: Current generation: R6gd node types (available only for Redis engine version 6.2 onward). cache.r6gd.xlarge, cache.r6gd.2xlarge, cache.r6gd.4xlarge, cache.r6gd.8xlarge, cache.r6gd.12xlarge, cache.r6gd.16xlarge \n - Memory optimized: Current generation: R6g node types (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward). cache.r6g.large, cache.r6g.xlarge, cache.r6g.2xlarge, cache.r6g.4xlarge, cache.r6g.8xlarge, cache.r6g.12xlarge, cache.r6g.16xlarge For region availability, see Supported Node Types (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion) R5 node types: cache.r5.large, cache.r5.xlarge, cache.r5.2xlarge, cache.r5.4xlarge, cache.r5.12xlarge, cache.r5.24xlarge R4 node types: cache.r4.large, cache.r4.xlarge, cache.r4.2xlarge, cache.r4.4xlarge, cache.r4.8xlarge, cache.r4.16xlarge Previous generation: (not recommended. Existing clusters are still supported but creation of new clusters is not supported for these types.) M2 node types: cache.m2.xlarge, cache.m2.2xlarge, cache.m2.4xlarge R3 node types: cache.r3.large, cache.r3.xlarge, cache.r3.2xlarge, cache.r3.4xlarge, cache.r3.8xlarge \n Additional node type info \n - All current generation instance types are created in Amazon VPC by default. \n - Redis append-only files (AOF) are not supported for T1 or T2 instances. \n - Redis Multi-AZ with automatic failover is not supported on T1 instances. \n - Redis configuration variables appendonly and appendfsync are not supported on Redis version 2.8.22 and later.",
          "type": "string"
        },
        "cacheParameterGroupName": {
          "description": "The name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. \n If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. \n - To create a Redis (cluster mode disabled) replication group, use CacheParameterGroupName=default.redis3.2. \n - To create a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on.",
          "type": "string"
        },
        "cacheParameterGroupRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "cacheSecurityGroupNames": {
          "description": "A list of cache security group names to associate with this replication group.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cacheSubnetGroupName": {
          "description": "The name of the cache subnet group to be used for the replication group. \n If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see Subnets and Subnet Groups (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).",
          "type": "string"
        },
        "cacheSubnetGroupRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dataTieringEnabled": {
          "description": "Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes. For more information, see Data tiering (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html).",
          "type": "boolean"
        },
        "description": {
          "description": "A user-created description for the replication group.",
          "type": "string"
        },
        "engine": {
          "description": "The name of the cache engine to be used for the clusters in this replication group. Must be Redis.",
          "type": "string"
        },
        "engineVersion": {
          "description": "The version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation. \n Important: You can upgrade to a newer engine version (see Selecting a Cache Engine and Version (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)) in the ElastiCache User Guide, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version.",
          "type": "string"
        },
        "kmsKeyID": {
          "description": "The ID of the KMS key used to encrypt the disk in the cluster.",
          "type": "string"
        },
        "logDeliveryConfigurations": {
          "description": "Specifies the destination, format and type of the logs.",
          "items": {
            "description": "Specifies the destination, format and type of the logs.",
            "properties": {
              "destinationDetails": {
                "description": "Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.",
                "properties": {
                  "cloudWatchLogsDetails": {
                    "description": "The configuration details of the CloudWatch Logs destination.",
                    "properties": {
                      "logGroup": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "kinesisFirehoseDetails": {
                    "description": "The configuration details of the Kinesis Data Firehose destination.",
                    "properties": {
                      "deliveryStream": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "destinationType": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "logFormat": {
                "type": "string"
              },
              "logType": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "multiAZEnabled": {
          "description": "A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see Minimizing Downtime: Multi-AZ (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html).",
          "type": "boolean"
        },
        "nodeGroupConfiguration": {
          "description": "A list of node group (shard) configuration options. Each node group (shard) configuration has the following members: PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount, and Slots. \n If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter. However, it is required when seeding a Redis (cluster mode enabled) cluster from a S3 rdb file. You must configure each node group (shard) using this parameter because you must specify the slots for each node group.",
          "items": {
            "description": "Node group (shard) configuration options. Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount.",
            "properties": {
              "nodeGroupID": {
                "type": "string"
              },
              "primaryAvailabilityZone": {
                "type": "string"
              },
              "primaryOutpostARN": {
                "type": "string"
              },
              "replicaAvailabilityZones": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "replicaCount": {
                "format": "int64",
                "type": "integer"
              },
              "replicaOutpostARNs": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "slots": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "notificationTopicARN": {
          "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent. \n The Amazon SNS topic owner must be the same as the cluster owner.",
          "type": "string"
        },
        "numNodeGroups": {
          "description": "An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1. \n Default: 1",
          "format": "int64",
          "type": "integer"
        },
        "port": {
          "description": "The port number on which each member of the replication group accepts connections.",
          "format": "int64",
          "type": "integer"
        },
        "preferredCacheClusterAZs": {
          "description": "A list of EC2 Availability Zones in which the replication group's clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list. \n This parameter is not used if there is more than one node group (shard). You should use NodeGroupConfiguration instead. \n If you are creating your replication group in an Amazon VPC (recommended), you can only locate clusters in Availability Zones associated with the subnets in the selected subnet group. \n The number of Availability Zones listed must equal the value of NumCacheClusters. \n Default: system chosen Availability Zones.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "preferredMaintenanceWindow": {
          "description": "Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for ddd are: \n Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. \n Valid values for ddd are: \n - sun \n - mon \n - tue \n - wed \n - thu \n - fri \n - sat \n Example: sun:23:00-mon:01:30",
          "type": "string"
        },
        "primaryClusterID": {
          "description": "The identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of available. \n This parameter is not required if NumCacheClusters, NumNodeGroups, or ReplicasPerNodeGroup is specified.",
          "type": "string"
        },
        "replicasPerNodeGroup": {
          "description": "An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.",
          "format": "int64",
          "type": "integer"
        },
        "replicationGroupID": {
          "description": "The replication group identifier. This parameter is stored as a lowercase string. \n Constraints: \n - A name must contain from 1 to 40 alphanumeric characters or hyphens. \n - The first character must be a letter. \n - A name cannot end with a hyphen or contain two consecutive hyphens.",
          "type": "string"
        },
        "securityGroupIDs": {
          "description": "One or more Amazon VPC security groups associated with this replication group. \n Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud (Amazon VPC).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "securityGroupRefs": {
          "items": {
            "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
            "properties": {
              "from": {
                "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "snapshotARNs": {
          "description": "A list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter NumNodeGroups or the number of node groups configured by NodeGroupConfiguration regardless of the number of ARNs specified here. \n Example of an Amazon S3 ARN: arn:aws:s3:::my_bucket/snapshot1.rdb",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "snapshotName": {
          "description": "The name of a snapshot from which to restore data into the new replication group. The snapshot status changes to restoring while the new replication group is being created.",
          "type": "string"
        },
        "snapshotRetentionLimit": {
          "description": "The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted. \n Default: 0 (i.e., automatic backups are disabled for this cluster).",
          "format": "int64",
          "type": "integer"
        },
        "snapshotWindow": {
          "description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard). \n Example: 05:00-09:00 \n If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags to be added to this resource. Tags are comma-separated key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include multiple tags as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey, Value=mySecondKeyValue. Tags on replication groups will be replicated to all nodes.",
          "items": {
            "description": "A tag that can be added to an ElastiCache cluster or replication group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. A tag with a null Value is permitted.",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "transitEncryptionEnabled": {
          "description": "A flag that enables in-transit encryption when set to true. \n You cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster. \n This parameter is valid only if the Engine parameter is redis, the EngineVersion parameter is 3.2.6, 4.x or later, and the cluster is being created in an Amazon VPC. \n If you enable in-transit encryption, you must also specify a value for CacheSubnetGroup. \n Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6, 4.x or later. \n Default: false \n For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup.",
          "type": "boolean"
        },
        "userGroupIDs": {
          "description": "The user group to associate with the replication group.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "description",
        "replicationGroupID"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ReplicationGroupStatus defines the observed state of ReplicationGroup",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "allowedScaleDownModifications": {
          "description": "A string list, each element of which specifies a cache node type which you can use to scale your cluster or replication group. When scaling down a Redis cluster or replication group using ModifyCacheCluster or ModifyReplicationGroup, use a value from this list for the CacheNodeType parameter.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowedScaleUpModifications": {
          "description": "A string list, each element of which specifies a cache node type which you can use to scale your cluster or replication group. \n When scaling up a Redis cluster or replication group using ModifyCacheCluster or ModifyReplicationGroup, use a value from this list for the CacheNodeType parameter.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "authTokenEnabled": {
          "description": "A flag that enables using an AuthToken (password) when issuing Redis commands. \n Default: false",
          "type": "boolean"
        },
        "authTokenLastModifiedDate": {
          "description": "The date the auth token was last modified",
          "format": "date-time",
          "type": "string"
        },
        "autoMinorVersionUpgrade": {
          "description": "If you are running Redis engine version 6.0 or later, set this parameter to yes if you want to opt-in to the next auto minor version upgrade campaign. This parameter is disabled for previous versions.",
          "type": "boolean"
        },
        "automaticFailover": {
          "description": "Indicates the status of automatic failover for this Redis replication group.",
          "type": "string"
        },
        "clusterEnabled": {
          "description": "A flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups). \n Valid values: true | false",
          "type": "boolean"
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "configurationEndpoint": {
          "description": "The configuration endpoint for this replication group. Use the configuration endpoint to connect to this replication group.",
          "properties": {
            "address": {
              "type": "string"
            },
            "port": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dataTiering": {
          "description": "Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes. For more information, see Data tiering (https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/data-tiering.html).",
          "type": "string"
        },
        "events": {
          "description": "A list of events. Each element in the list contains detailed information about one event.",
          "items": {
            "description": "Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node.",
            "properties": {
              "date": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "sourceIdentifier": {
                "type": "string"
              },
              "sourceType": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "globalReplicationGroupInfo": {
          "description": "The name of the Global datastore and role of this replication group in the Global datastore.",
          "properties": {
            "globalReplicationGroupID": {
              "type": "string"
            },
            "globalReplicationGroupMemberRole": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "logDeliveryConfigurations": {
          "description": "Returns the destination, format and type of the logs.",
          "items": {
            "description": "Returns the destination, format and type of the logs.",
            "properties": {
              "destinationDetails": {
                "description": "Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.",
                "properties": {
                  "cloudWatchLogsDetails": {
                    "description": "The configuration details of the CloudWatch Logs destination.",
                    "properties": {
                      "logGroup": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "kinesisFirehoseDetails": {
                    "description": "The configuration details of the Kinesis Data Firehose destination.",
                    "properties": {
                      "deliveryStream": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "destinationType": {
                "type": "string"
              },
              "logFormat": {
                "type": "string"
              },
              "logType": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "memberClusters": {
          "description": "The names of all the cache clusters that are part of this replication group.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memberClustersOutpostARNs": {
          "description": "The outpost ARNs of the replication group's member clusters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "multiAZ": {
          "description": "A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see Minimizing Downtime: Multi-AZ (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html)",
          "type": "string"
        },
        "nodeGroups": {
          "description": "A list of node groups in this replication group. For Redis (cluster mode disabled) replication groups, this is a single-element list. For Redis (cluster mode enabled) replication groups, the list contains an entry for each node group (shard).",
          "items": {
            "description": "Represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes.",
            "properties": {
              "nodeGroupID": {
                "type": "string"
              },
              "nodeGroupMembers": {
                "items": {
                  "description": "Represents a single node within a node group (shard).",
                  "properties": {
                    "cacheClusterID": {
                      "type": "string"
                    },
                    "cacheNodeID": {
                      "type": "string"
                    },
                    "currentRole": {
                      "type": "string"
                    },
                    "preferredAvailabilityZone": {
                      "type": "string"
                    },
                    "preferredOutpostARN": {
                      "type": "string"
                    },
                    "readEndpoint": {
                      "description": "Represents the information required for client programs to connect to a cache node.",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "port": {
                          "format": "int64",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "primaryEndpoint": {
                "description": "Represents the information required for client programs to connect to a cache node.",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "readerEndpoint": {
                "description": "Represents the information required for client programs to connect to a cache node.",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "slots": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "pendingModifiedValues": {
          "description": "A group of settings to be applied to the replication group, either immediately or during the next maintenance window.",
          "properties": {
            "authTokenStatus": {
              "type": "string"
            },
            "automaticFailoverStatus": {
              "type": "string"
            },
            "logDeliveryConfigurations": {
              "items": {
                "description": "The log delivery configurations being modified",
                "properties": {
                  "destinationDetails": {
                    "description": "Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.",
                    "properties": {
                      "cloudWatchLogsDetails": {
                        "description": "The configuration details of the CloudWatch Logs destination.",
                        "properties": {
                          "logGroup": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "kinesisFirehoseDetails": {
                        "description": "The configuration details of the Kinesis Data Firehose destination.",
                        "properties": {
                          "deliveryStream": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "destinationType": {
                    "type": "string"
                  },
                  "logFormat": {
                    "type": "string"
                  },
                  "logType": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "primaryClusterID": {
              "type": "string"
            },
            "resharding": {
              "description": "The status of an online resharding operation.",
              "properties": {
                "slotMigration": {
                  "description": "Represents the progress of an online resharding operation.",
                  "properties": {
                    "progressPercentage": {
                      "type": "number"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "userGroups": {
              "description": "The status of the user group update.",
              "properties": {
                "userGroupIDsToAdd": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "userGroupIDsToRemove": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "replicationGroupCreateTime": {
          "description": "The date and time when the cluster was created.",
          "format": "date-time",
          "type": "string"
        },
        "snapshottingClusterID": {
          "description": "The cluster ID that is used as the daily snapshot source for the replication group.",
          "type": "string"
        },
        "status": {
          "description": "The current state of this replication group - creating, available, modifying, deleting, create-failed, snapshotting.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
