{
  "description": "ImageRecipe is the Schema for the ImageRecipes API. Manage an Image Builder Image Recipe",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ImageRecipeSpec defines the desired state of ImageRecipe",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "blockDeviceMapping": {
              "description": "Configuration block(s) with block device mappings for the image recipe. Detailed below.",
              "items": {
                "properties": {
                  "deviceName": {
                    "description": "Name of the device. For example, /dev/sda or /dev/xvdb.",
                    "type": "string"
                  },
                  "ebs": {
                    "description": "Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.",
                    "items": {
                      "properties": {
                        "deleteOnTermination": {
                          "description": "Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.",
                          "type": "string"
                        },
                        "encrypted": {
                          "description": "Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.",
                          "type": "string"
                        },
                        "iops": {
                          "description": "Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.",
                          "type": "number"
                        },
                        "kmsKeyId": {
                          "description": "Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.",
                          "type": "string"
                        },
                        "snapshotId": {
                          "description": "Identifier of the EC2 Volume Snapshot.",
                          "type": "string"
                        },
                        "throughput": {
                          "description": "For GP3 volumes only. The throughput in MiB/s that the volume supports.",
                          "type": "number"
                        },
                        "volumeSize": {
                          "description": "Size of the volume, in GiB.",
                          "type": "number"
                        },
                        "volumeType": {
                          "description": "Type of the volume. For example, gp2 or io2.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "noDevice": {
                    "description": "Set to true to remove a mapping from the parent image.",
                    "type": "boolean"
                  },
                  "virtualName": {
                    "description": "Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "component": {
              "description": "Ordered configuration block(s) with components for the image recipe. Detailed below.",
              "items": {
                "properties": {
                  "componentArn": {
                    "description": "Amazon Resource Name (ARN) of the Image Builder Component to associate.",
                    "type": "string"
                  },
                  "componentArnRef": {
                    "description": "Reference to a Component in imagebuilder to populate componentArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "componentArnSelector": {
                    "description": "Selector for a Component in imagebuilder to populate componentArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "parameter": {
                    "description": "Configuration block(s) for parameters to configure the component. Detailed below.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "The name of the component parameter.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value for the named component parameter.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "description": {
              "description": "Description of the image recipe.",
              "type": "string"
            },
            "name": {
              "description": "Name of the image recipe.",
              "type": "string"
            },
            "parentImage": {
              "description": "The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "systemsManagerAgent": {
              "description": "Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.",
              "items": {
                "properties": {
                  "uninstallAfterBuild": {
                    "description": "Whether to remove the Systems Manager Agent after the image has been built. Defaults to false.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "userDataBase64": {
              "description": "Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.",
              "type": "string"
            },
            "version": {
              "description": "The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.",
              "type": "string"
            },
            "workingDirectory": {
              "description": "The working directory to be used during build and test workflows.",
              "type": "string"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "properties": {
            "blockDeviceMapping": {
              "description": "Configuration block(s) with block device mappings for the image recipe. Detailed below.",
              "items": {
                "properties": {
                  "deviceName": {
                    "description": "Name of the device. For example, /dev/sda or /dev/xvdb.",
                    "type": "string"
                  },
                  "ebs": {
                    "description": "Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.",
                    "items": {
                      "properties": {
                        "deleteOnTermination": {
                          "description": "Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.",
                          "type": "string"
                        },
                        "encrypted": {
                          "description": "Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.",
                          "type": "string"
                        },
                        "iops": {
                          "description": "Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.",
                          "type": "number"
                        },
                        "kmsKeyId": {
                          "description": "Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.",
                          "type": "string"
                        },
                        "snapshotId": {
                          "description": "Identifier of the EC2 Volume Snapshot.",
                          "type": "string"
                        },
                        "throughput": {
                          "description": "For GP3 volumes only. The throughput in MiB/s that the volume supports.",
                          "type": "number"
                        },
                        "volumeSize": {
                          "description": "Size of the volume, in GiB.",
                          "type": "number"
                        },
                        "volumeType": {
                          "description": "Type of the volume. For example, gp2 or io2.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "noDevice": {
                    "description": "Set to true to remove a mapping from the parent image.",
                    "type": "boolean"
                  },
                  "virtualName": {
                    "description": "Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "component": {
              "description": "Ordered configuration block(s) with components for the image recipe. Detailed below.",
              "items": {
                "properties": {
                  "componentArn": {
                    "description": "Amazon Resource Name (ARN) of the Image Builder Component to associate.",
                    "type": "string"
                  },
                  "componentArnRef": {
                    "description": "Reference to a Component in imagebuilder to populate componentArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "componentArnSelector": {
                    "description": "Selector for a Component in imagebuilder to populate componentArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "parameter": {
                    "description": "Configuration block(s) for parameters to configure the component. Detailed below.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "The name of the component parameter.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value for the named component parameter.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "description": {
              "description": "Description of the image recipe.",
              "type": "string"
            },
            "name": {
              "description": "Name of the image recipe.",
              "type": "string"
            },
            "parentImage": {
              "description": "The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.",
              "type": "string"
            },
            "systemsManagerAgent": {
              "description": "Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.",
              "items": {
                "properties": {
                  "uninstallAfterBuild": {
                    "description": "Whether to remove the Systems Manager Agent after the image has been built. Defaults to false.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "userDataBase64": {
              "description": "Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.",
              "type": "string"
            },
            "version": {
              "description": "The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.",
              "type": "string"
            },
            "workingDirectory": {
              "description": "The working directory to be used during build and test workflows.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.component is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.component) || (has(self.initProvider) && has(self.initProvider.component))"
        },
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        },
        {
          "message": "spec.forProvider.parentImage is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parentImage) || (has(self.initProvider) && has(self.initProvider.parentImage))"
        },
        {
          "message": "spec.forProvider.version is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.version) || (has(self.initProvider) && has(self.initProvider.version))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "ImageRecipeStatus defines the observed state of ImageRecipe.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "Amazon Resource Name (ARN) of the image recipe.",
              "type": "string"
            },
            "blockDeviceMapping": {
              "description": "Configuration block(s) with block device mappings for the image recipe. Detailed below.",
              "items": {
                "properties": {
                  "deviceName": {
                    "description": "Name of the device. For example, /dev/sda or /dev/xvdb.",
                    "type": "string"
                  },
                  "ebs": {
                    "description": "Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.",
                    "items": {
                      "properties": {
                        "deleteOnTermination": {
                          "description": "Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.",
                          "type": "string"
                        },
                        "encrypted": {
                          "description": "Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.",
                          "type": "string"
                        },
                        "iops": {
                          "description": "Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.",
                          "type": "number"
                        },
                        "kmsKeyId": {
                          "description": "Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.",
                          "type": "string"
                        },
                        "snapshotId": {
                          "description": "Identifier of the EC2 Volume Snapshot.",
                          "type": "string"
                        },
                        "throughput": {
                          "description": "For GP3 volumes only. The throughput in MiB/s that the volume supports.",
                          "type": "number"
                        },
                        "volumeSize": {
                          "description": "Size of the volume, in GiB.",
                          "type": "number"
                        },
                        "volumeType": {
                          "description": "Type of the volume. For example, gp2 or io2.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "noDevice": {
                    "description": "Set to true to remove a mapping from the parent image.",
                    "type": "boolean"
                  },
                  "virtualName": {
                    "description": "Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "component": {
              "description": "Ordered configuration block(s) with components for the image recipe. Detailed below.",
              "items": {
                "properties": {
                  "componentArn": {
                    "description": "Amazon Resource Name (ARN) of the Image Builder Component to associate.",
                    "type": "string"
                  },
                  "parameter": {
                    "description": "Configuration block(s) for parameters to configure the component. Detailed below.",
                    "items": {
                      "properties": {
                        "name": {
                          "description": "The name of the component parameter.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value for the named component parameter.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "dateCreated": {
              "description": "Date the image recipe was created.",
              "type": "string"
            },
            "description": {
              "description": "Description of the image recipe.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "description": "Name of the image recipe.",
              "type": "string"
            },
            "owner": {
              "description": "Owner of the image recipe.",
              "type": "string"
            },
            "parentImage": {
              "description": "The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.",
              "type": "string"
            },
            "platform": {
              "description": "Platform of the image recipe.",
              "type": "string"
            },
            "systemsManagerAgent": {
              "description": "Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.",
              "items": {
                "properties": {
                  "uninstallAfterBuild": {
                    "description": "Whether to remove the Systems Manager Agent after the image has been built. Defaults to false.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "userDataBase64": {
              "description": "Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.",
              "type": "string"
            },
            "version": {
              "description": "The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.",
              "type": "string"
            },
            "workingDirectory": {
              "description": "The working directory to be used during build and test workflows.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
