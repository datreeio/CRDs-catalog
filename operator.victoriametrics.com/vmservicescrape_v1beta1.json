{
  "description": "VMServiceScrape is scrape configuration for endpoints associated with kubernetes service, it generates scrape configuration for vmagent based on selectors. result config will scrape service endpoints",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VMServiceScrapeSpec defines the desired state of VMServiceScrape",
      "properties": {
        "discoveryRole": {
          "description": "DiscoveryRole - defines kubernetes_sd role for objects discovery. by default, its endpoints. can be changed to service or endpointslices. note, that with service setting, you have to use port: \"name\" and cannot use targetPort for endpoints.",
          "enum": [
            "endpoints",
            "service",
            "endpointslices"
          ],
          "type": "string"
        },
        "endpoints": {
          "description": "A list of endpoints allowed as part of this ServiceScrape.",
          "items": {
            "description": "Endpoint defines a scrapeable endpoint serving Prometheus metrics.",
            "properties": {
              "attach_metadata": {
                "description": "AttachMetadata configures metadata attaching from service discovery",
                "properties": {
                  "node": {
                    "description": "Node instructs vmagent to add node specific metadata from service discovery Valid for roles: pod, endpoints, endpointslice.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "authorization": {
                "description": "Authorization with http header Authorization",
                "properties": {
                  "credentials": {
                    "description": "Reference to the secret with value for authorization",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "credentialsFile": {
                    "description": "File with value for authorization",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of authorization, default to bearer",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "basicAuth": {
                "description": "BasicAuth allow an endpoint to authenticate over basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints",
                "properties": {
                  "password": {
                    "description": "The secret in the service scrape namespace that contains the password for authentication. It must be at them same namespace as CRD",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "password_file": {
                    "description": "PasswordFile defines path to password file at disk",
                    "type": "string"
                  },
                  "username": {
                    "description": "The secret in the service scrape namespace that contains the username for authentication. It must be at them same namespace as CRD",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "bearerTokenFile": {
                "description": "File to read bearer token for scraping targets.",
                "type": "string"
              },
              "bearerTokenSecret": {
                "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the service scrape and accessible by the victoria-metrics operator.",
                "nullable": true,
                "properties": {
                  "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                    "type": "string"
                  },
                  "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": "boolean"
                  }
                },
                "required": [
                  "key"
                ],
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "follow_redirects": {
                "description": "FollowRedirects controls redirects for scraping.",
                "type": "boolean"
              },
              "honorLabels": {
                "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
                "type": "boolean"
              },
              "honorTimestamps": {
                "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
                "type": "boolean"
              },
              "interval": {
                "description": "Interval at which metrics should be scraped",
                "type": "string"
              },
              "metricRelabelConfigs": {
                "description": "MetricRelabelConfigs to apply to samples before ingestion.",
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                  "properties": {
                    "action": {
                      "description": "Action to perform based on regex matching. Default is 'replace'",
                      "type": "string"
                    },
                    "if": {
                      "description": "If represents metricsQL match expression: '{__name__=~\"foo_.*\"}'",
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels is used together with Match for `action: graphite`",
                      "type": "object"
                    },
                    "match": {
                      "description": "Match is used together with Labels for `action: graphite`",
                      "type": "string"
                    },
                    "modulus": {
                      "description": "Modulus to take of the hash of the source label values.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "regex": {
                      "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                      "type": "string"
                    },
                    "replacement": {
                      "description": "Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'",
                      "type": "string"
                    },
                    "separator": {
                      "description": "Separator placed between concatenated source label values. default is ';'.",
                      "type": "string"
                    },
                    "source_labels": {
                      "description": "UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "sourceLabels": {
                      "description": "The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "target_label": {
                      "description": "UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131",
                      "type": "string"
                    },
                    "targetLabel": {
                      "description": "Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "oauth2": {
                "description": "OAuth2 defines auth configuration",
                "properties": {
                  "client_id": {
                    "description": "The secret or configmap containing the OAuth2 client id",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "client_secret": {
                    "description": "The secret containing the OAuth2 client secret",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "client_secret_file": {
                    "description": "ClientSecretFile defines path for client secret file.",
                    "type": "string"
                  },
                  "endpoint_params": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Parameters to append to the token URL",
                    "type": "object"
                  },
                  "scopes": {
                    "description": "OAuth2 scopes used for the token request",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "token_url": {
                    "description": "The URL to fetch the token from",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "client_id",
                  "token_url"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "params": {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "description": "Optional HTTP URL parameters",
                "type": "object"
              },
              "path": {
                "description": "HTTP path to scrape for metrics.",
                "type": "string"
              },
              "port": {
                "description": "Name of the service port this endpoint refers to. Mutually exclusive with targetPort.",
                "type": "string"
              },
              "proxyURL": {
                "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
                "type": "string"
              },
              "relabelConfigs": {
                "description": "RelabelConfigs to apply to samples before scraping. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                  "properties": {
                    "action": {
                      "description": "Action to perform based on regex matching. Default is 'replace'",
                      "type": "string"
                    },
                    "if": {
                      "description": "If represents metricsQL match expression: '{__name__=~\"foo_.*\"}'",
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels is used together with Match for `action: graphite`",
                      "type": "object"
                    },
                    "match": {
                      "description": "Match is used together with Labels for `action: graphite`",
                      "type": "string"
                    },
                    "modulus": {
                      "description": "Modulus to take of the hash of the source label values.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "regex": {
                      "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                      "type": "string"
                    },
                    "replacement": {
                      "description": "Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'",
                      "type": "string"
                    },
                    "separator": {
                      "description": "Separator placed between concatenated source label values. default is ';'.",
                      "type": "string"
                    },
                    "source_labels": {
                      "description": "UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "sourceLabels": {
                      "description": "The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "target_label": {
                      "description": "UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131",
                      "type": "string"
                    },
                    "targetLabel": {
                      "description": "Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "sampleLimit": {
                "description": "SampleLimit defines per-endpoint limit on number of scraped samples that will be accepted.",
                "format": "int64",
                "type": "integer"
              },
              "scheme": {
                "description": "HTTP scheme to use for scraping.",
                "type": "string"
              },
              "scrape_interval": {
                "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
                "type": "string"
              },
              "scrapeTimeout": {
                "description": "Timeout after which the scrape is ended",
                "type": "string"
              },
              "targetPort": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Name or number of the pod port this endpoint refers to. Mutually exclusive with port.",
                "x-kubernetes-int-or-string": true
              },
              "tlsConfig": {
                "description": "TLSConfig configuration to use when scraping the endpoint",
                "properties": {
                  "ca": {
                    "description": "Stuct containing the CA cert to use for the targets.",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "caFile": {
                    "description": "Path to the CA cert in the container to use for the targets.",
                    "type": "string"
                  },
                  "cert": {
                    "description": "Struct containing the client cert file for the targets.",
                    "properties": {
                      "configMap": {
                        "description": "ConfigMap containing data to use for the targets.",
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secret": {
                        "description": "Secret containing data to use for the targets.",
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "certFile": {
                    "description": "Path to the client cert file in the container for the targets.",
                    "type": "string"
                  },
                  "insecureSkipVerify": {
                    "description": "Disable target certificate validation.",
                    "type": "boolean"
                  },
                  "keyFile": {
                    "description": "Path to the client key file in the container for the targets.",
                    "type": "string"
                  },
                  "keySecret": {
                    "description": "Secret containing the client key file for the targets.",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "serverName": {
                    "description": "Used to verify the hostname for the targets.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "vm_scrape_params": {
                "description": "VMScrapeParams defines VictoriaMetrics specific scrape parametrs",
                "properties": {
                  "disable_compression": {
                    "type": "boolean"
                  },
                  "disable_keep_alive": {
                    "type": "boolean"
                  },
                  "headers": {
                    "description": "Headers allows sending custom headers to scrape targets must be in of semicolon separated header with it's value eg: headerName: headerValue vmagent supports since 1.79.0 version",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metric_relabel_debug": {
                    "type": "boolean"
                  },
                  "no_stale_markers": {
                    "type": "boolean"
                  },
                  "proxy_client_config": {
                    "description": "ProxyClientConfig configures proxy auth settings for scraping See feature description https://docs.victoriametrics.com/vmagent.html#scraping-targets-via-a-proxy",
                    "properties": {
                      "basic_auth": {
                        "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
                        "properties": {
                          "password": {
                            "description": "The secret in the service scrape namespace that contains the password for authentication. It must be at them same namespace as CRD",
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "password_file": {
                            "description": "PasswordFile defines path to password file at disk",
                            "type": "string"
                          },
                          "username": {
                            "description": "The secret in the service scrape namespace that contains the username for authentication. It must be at them same namespace as CRD",
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "bearer_token": {
                        "description": "SecretKeySelector selects a key of a Secret.",
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "bearer_token_file": {
                        "type": "string"
                      },
                      "tls_config": {
                        "description": "TLSConfig specifies TLSConfig configuration parameters.",
                        "properties": {
                          "ca": {
                            "description": "Stuct containing the CA cert to use for the targets.",
                            "properties": {
                              "configMap": {
                                "description": "ConfigMap containing data to use for the targets.",
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "key"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "secret": {
                                "description": "Secret containing data to use for the targets.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "key"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "caFile": {
                            "description": "Path to the CA cert in the container to use for the targets.",
                            "type": "string"
                          },
                          "cert": {
                            "description": "Struct containing the client cert file for the targets.",
                            "properties": {
                              "configMap": {
                                "description": "ConfigMap containing data to use for the targets.",
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "key"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "secret": {
                                "description": "Secret containing data to use for the targets.",
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "key"
                                ],
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "certFile": {
                            "description": "Path to the client cert file in the container for the targets.",
                            "type": "string"
                          },
                          "insecureSkipVerify": {
                            "description": "Disable target certificate validation.",
                            "type": "boolean"
                          },
                          "keyFile": {
                            "description": "Path to the client key file in the container for the targets.",
                            "type": "string"
                          },
                          "keySecret": {
                            "description": "Secret containing the client key file for the targets.",
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "serverName": {
                            "description": "Used to verify the hostname for the targets.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "relabel_debug": {
                    "type": "boolean"
                  },
                  "scrape_align_interval": {
                    "type": "string"
                  },
                  "scrape_offset": {
                    "type": "string"
                  },
                  "stream_parse": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "jobLabel": {
          "description": "The label to use to retrieve the job name from.",
          "type": "string"
        },
        "namespaceSelector": {
          "description": "Selector to select which namespaces the Endpoints objects are discovered from.",
          "properties": {
            "any": {
              "description": "Boolean describing whether all namespaces are selected in contrast to a list restricting them.",
              "type": "boolean"
            },
            "matchNames": {
              "description": "List of namespace names.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "podTargetLabels": {
          "description": "PodTargetLabels transfers labels on the Kubernetes Pod onto the target.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "format": "int64",
          "type": "integer"
        },
        "selector": {
          "description": "Selector to select Endpoints objects by corresponding Service labels.",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "targetLabels": {
          "description": "TargetLabels transfers labels on the Kubernetes Service onto the target.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "endpoints"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "VMServiceScrapeStatus defines the observed state of VMServiceScrape",
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
