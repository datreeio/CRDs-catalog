{
    "description": "ImageStreamImage represents an Image that is retrieved by image name from an ImageStream. User interfaces and regular users can use this resource to access the metadata details of a tagged image in the image stream history for viewing, since Image resources are not directly accessible to end users. A not found error will be returned if no such image is referenced by a tag within the ImageStream. Images are created when spec tags are set on an image stream that represent an image in an external registry, when pushing to the integrated registry, or when tagging an existing image from one image stream to another. The name of an image stream image is in the form \"<STREAM>@<DIGEST>\", where the digest is the content addressible identifier for the image (sha256:xxxxx...). You can use ImageStreamImages as the from.kind of an image stream spec tag to reference an image exactly. The only operations supported on the imagestreamimage endpoint are retrieving the image. \n Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
    "properties": {
        "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
        },
        "image": {
            "description": "Image associated with the ImageStream and image name.",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                    "type": "string"
                },
                "dockerImageConfig": {
                    "description": "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2. Will not be set when the image represents a manifest list.",
                    "type": "string"
                },
                "dockerImageLayers": {
                    "description": "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data or if the image represents a manifest list.",
                    "items": {
                        "description": "ImageLayer represents a single layer of the image. Some images may have multiple layers. Some may have none.",
                        "properties": {
                            "mediaType": {
                                "description": "MediaType of the referenced object.",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of the layer as defined by the underlying store.",
                                "type": "string"
                            },
                            "size": {
                                "description": "Size of the layer in bytes as defined by the underlying store.",
                                "format": "int64",
                                "type": "integer",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            }
                        },
                        "required": [
                            "mediaType",
                            "name",
                            "size"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array"
                },
                "dockerImageManifest": {
                    "description": "DockerImageManifest is the raw JSON of the manifest",
                    "type": "string"
                },
                "dockerImageManifestMediaType": {
                    "description": "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2.",
                    "type": "string"
                },
                "dockerImageManifests": {
                    "description": "DockerImageManifests holds information about sub-manifests when the image represents a manifest list. When this field is present, no DockerImageLayers should be specified.",
                    "items": {
                        "description": "ImageManifest represents sub-manifests of a manifest list. The Digest field points to a regular Image object.",
                        "properties": {
                            "architecture": {
                                "description": "Architecture specifies the supported CPU architecture, for example `amd64` or `ppc64le`.",
                                "type": "string"
                            },
                            "digest": {
                                "description": "Digest is the unique identifier for the manifest. It refers to an Image object.",
                                "type": "string"
                            },
                            "manifestSize": {
                                "description": "ManifestSize represents the size of the raw object contents, in bytes.",
                                "format": "int64",
                                "type": "integer",
                                "minimum": -9223372036854776000,
                                "maximum": 9223372036854776000
                            },
                            "mediaType": {
                                "description": "MediaType defines the type of the manifest, possible values are application/vnd.oci.image.manifest.v1+json, application/vnd.docker.distribution.manifest.v2+json or application/vnd.docker.distribution.manifest.v1+json.",
                                "type": "string"
                            },
                            "os": {
                                "description": "OS specifies the operating system, for example `linux`.",
                                "type": "string"
                            },
                            "variant": {
                                "description": "Variant is an optional field repreenting a variant of the CPU, for example v6 to specify a particular CPU variant of the ARM CPU.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "architecture",
                            "digest",
                            "manifestSize",
                            "mediaType",
                            "os"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array"
                },
                "dockerImageMetadata": {
                    "description": "DockerImageMetadata contains metadata about this image",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                },
                "dockerImageMetadataVersion": {
                    "description": "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\"",
                    "type": "string"
                },
                "dockerImageReference": {
                    "description": "DockerImageReference is the string that can be used to pull this image.",
                    "type": "string"
                },
                "dockerImageSignatures": {
                    "description": "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1.",
                    "items": {
                        "format": "byte",
                        "type": "string",
                        "pattern": "^[\\w\\d+\\/=]*$"
                    },
                    "type": "array"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "metadata": {
                    "description": "metadata is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                    "type": "object"
                },
                "signatures": {
                    "description": "Signatures holds all signatures of the image.",
                    "items": {
                        "description": "ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature's content by the server. They serve just an informative purpose. \n Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
                        "properties": {
                            "apiVersion": {
                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                "type": "string"
                            },
                            "conditions": {
                                "description": "Conditions represent the latest available observations of a signature's current state.",
                                "items": {
                                    "description": "SignatureCondition describes an image signature condition of particular kind at particular probe time.",
                                    "properties": {
                                        "lastProbeTime": {
                                            "description": "Last time the condition was checked.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "lastTransitionTime": {
                                            "description": "Last time the condition transit from one status to another.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Human readable message indicating details about last transition.",
                                            "type": "string"
                                        },
                                        "reason": {
                                            "description": "(brief) reason for the condition's last transition.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "Status of the condition, one of True, False, Unknown.",
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "Type of signature condition, Complete or Failed.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "type"
                                    ],
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "type": "array"
                            },
                            "content": {
                                "description": "Required: An opaque binary string which is an image's signature.",
                                "format": "byte",
                                "type": "string",
                                "pattern": "^[\\w\\d+\\/=]*$"
                            },
                            "created": {
                                "description": "If specified, it is the time of signature's creation.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "imageIdentity": {
                                "description": "A human readable string representing image's identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\").",
                                "type": "string"
                            },
                            "issuedBy": {
                                "description": "If specified, it holds information about an issuer of signing certificate or key (a person or entity who signed the signing certificate or key).",
                                "properties": {
                                    "commonName": {
                                        "description": "Common name (e.g. openshift-signing-service).",
                                        "type": "string"
                                    },
                                    "organization": {
                                        "description": "Organization name.",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "issuedTo": {
                                "description": "If specified, it holds information about a subject of signing certificate or key (a person or entity who signed the image).",
                                "properties": {
                                    "commonName": {
                                        "description": "Common name (e.g. openshift-signing-service).",
                                        "type": "string"
                                    },
                                    "organization": {
                                        "description": "Organization name.",
                                        "type": "string"
                                    },
                                    "publicKeyID": {
                                        "description": "If present, it is a human readable key id of public key belonging to the subject used to verify image signature. It should contain at least 64 lowest bits of public key's fingerprint (e.g. 0x685ebe62bf278440).",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "publicKeyID"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "kind": {
                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                            },
                            "metadata": {
                                "description": "metadata is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                "type": "object"
                            },
                            "signedClaims": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Contains claims from the signature.",
                                "type": "object"
                            },
                            "type": {
                                "description": "Required: Describes a type of stored blob.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "content",
                            "type"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "additionalProperties": false
        },
        "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
        },
        "metadata": {
            "type": "object"
        }
    },
    "required": [
        "image"
    ],
    "type": "object",
    "additionalProperties": false,
    "$schema": "http://json-schema.org/draft-04/schema#"
}
