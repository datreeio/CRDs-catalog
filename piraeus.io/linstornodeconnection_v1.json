{
  "description": "LinstorNodeConnection is the Schema for the linstornodeconnections API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LinstorNodeConnectionSpec defines the desired state of LinstorNodeConnection",
      "properties": {
        "paths": {
          "description": "Paths configure the network path used when connecting two nodes.",
          "items": {
            "properties": {
              "interface": {
                "description": "Interface to use on both nodes.",
                "type": "string"
              },
              "name": {
                "description": "Name of the path.",
                "type": "string"
              }
            },
            "required": [
              "interface",
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "properties": {
          "description": "Properties to apply for the node connection.\n\nUse to create default settings for DRBD that should apply to all resources connections between a set of\ncluster nodes.",
          "items": {
            "properties": {
              "name": {
                "description": "Name of the property to set.",
                "minLength": 1,
                "type": "string"
              },
              "value": {
                "description": "Value to set the property to.",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "selector": {
          "description": "Selector selects which pair of Satellites the connection should apply to.\nIf not given, the connection will be applied to all connections.",
          "items": {
            "description": "SelectorTerm matches pairs of nodes by checking that the nodes match all specified requirements.",
            "properties": {
              "matchLabels": {
                "description": "MatchLabels is a list of match expressions that the node pairs must meet.",
                "items": {
                  "properties": {
                    "key": {
                      "description": "Key is the name of a node label.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "op": {
                      "default": "Exists",
                      "description": "Op to apply to the label.\nExists (default) checks for the presence of the label on both nodes in the pair.\nDoesNotExist checks that the label is not present on either node in the pair.\nIn checks for the presence of the label value given by Values on both nodes in the pair.\nNotIn checks that both nodes in the pair do not have any of the label values given by Values.\nSame checks that the label value is equal in the node pair.\nNotSame checks that the label value is not equal in the node pair.",
                      "enum": [
                        "Exists",
                        "DoesNotExist",
                        "In",
                        "NotIn",
                        "Same",
                        "NotSame"
                      ],
                      "type": "string"
                    },
                    "values": {
                      "description": "Values to match on, using the provided Op.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "required": [
              "matchLabels"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "additionalProperties": false
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "LinstorNodeConnectionStatus defines the observed state of LinstorNodeConnection",
      "properties": {
        "conditions": {
          "description": "Current LINSTOR Node Connection state",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
