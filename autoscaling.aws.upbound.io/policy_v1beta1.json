{
  "description": "Policy is the Schema for the Policys API. Provides an AutoScaling Scaling Group resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PolicySpec defines the desired state of Policy",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "adjustmentType": {
              "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
              "type": "string"
            },
            "autoscalingGroupName": {
              "description": "Name of the autoscaling group.",
              "type": "string"
            },
            "autoscalingGroupNameRef": {
              "description": "Reference to a AutoscalingGroup in autoscaling to populate autoscalingGroupName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "autoscalingGroupNameSelector": {
              "description": "Selector for a AutoscalingGroup in autoscaling to populate autoscalingGroupName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "cooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
              "type": "number"
            },
            "enabled": {
              "description": "Whether the scaling policy is enabled or disabled. Default: true.",
              "type": "boolean"
            },
            "estimatedInstanceWarmup": {
              "description": "Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.",
              "type": "number"
            },
            "metricAggregationType": {
              "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
              "type": "string"
            },
            "minAdjustmentMagnitude": {
              "description": "Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.",
              "type": "number"
            },
            "policyType": {
              "description": "Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
              "type": "string"
            },
            "predictiveScalingConfiguration": {
              "description": "Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.",
              "items": {
                "properties": {
                  "maxCapacityBreachBehavior": {
                    "description": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.",
                    "type": "string"
                  },
                  "maxCapacityBuffer": {
                    "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.",
                    "type": "string"
                  },
                  "metricSpecification": {
                    "description": "This structure includes the metrics and target utilization to use for predictive scaling.",
                    "items": {
                      "properties": {
                        "customizedCapacityMetricSpecification": {
                          "description": "Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom capacity metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "customizedLoadMetricSpecification": {
                          "description": "Customized load metric specification.",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom load metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "customizedScalingMetricSpecification": {
                          "description": "Customized scaling metric specification.",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedLoadMetricSpecification": {
                          "description": "Predefined load metric specification.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type. Valid values are ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut, or ALBTargetGroupRequestCount.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedMetricPairSpecification": {
                          "description": "Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is ASGCPUUtilization, the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric. Valid values are ASGCPUUtilization, ASGNetworkIn, ASGNetworkOut, or ALBRequestCount.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedScalingMetricSpecification": {
                          "description": "Predefined scaling metric specification.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "targetValue": {
                          "description": "Target value for the metric.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "mode": {
                    "description": "Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.",
                    "type": "string"
                  },
                  "schedulingBufferTime": {
                    "description": "Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "scalingAdjustment": {
              "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
              "type": "number"
            },
            "stepAdjustment": {
              "description": "Set of adjustments that manage group scaling. These have the following structure:",
              "items": {
                "properties": {
                  "metricIntervalLowerBound": {
                    "description": "Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.",
                    "type": "string"
                  },
                  "metricIntervalUpperBound": {
                    "description": "Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as positive infinity. The upper bound must be greater than the lower bound.",
                    "type": "string"
                  },
                  "scalingAdjustment": {
                    "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "targetTrackingConfiguration": {
              "description": "Target tracking policy. These have the following structure:",
              "items": {
                "properties": {
                  "customizedMetricSpecification": {
                    "description": "Customized metric. Conflicts with predefined_metric_specification.",
                    "items": {
                      "properties": {
                        "metricDimension": {
                          "description": "Dimensions of the metric.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the dimension.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "metricName": {
                          "description": "Name of the metric.",
                          "type": "string"
                        },
                        "metrics": {
                          "description": "Metrics to include, as a metric data query.",
                          "items": {
                            "properties": {
                              "expression": {
                                "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Short name for the metric used in predictive scaling policy.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Human-readable label for this metric or expression.",
                                "type": "string"
                              },
                              "metricStat": {
                                "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                "items": {
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "items": {
                                        "properties": {
                                          "dimensions": {
                                            "description": "Dimensions of the metric.",
                                            "items": {
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the policy.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the dimension.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "metricName": {
                                            "description": "Name of the metric.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "returnData": {
                                "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "namespace": {
                          "description": "Namespace of the metric.",
                          "type": "string"
                        },
                        "statistic": {
                          "description": "Statistic of the metric.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Unit of the metric.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "disableScaleIn": {
                    "description": "Whether scale in by the target tracking policy is disabled.",
                    "type": "boolean"
                  },
                  "predefinedMetricSpecification": {
                    "description": "Predefined metric. Conflicts with customized_metric_specification.",
                    "items": {
                      "properties": {
                        "predefinedMetricType": {
                          "description": "Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.",
                          "type": "string"
                        },
                        "resourceLabel": {
                          "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "targetValue": {
                    "description": "Target value for the metric.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "properties": {
            "adjustmentType": {
              "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
              "type": "string"
            },
            "cooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
              "type": "number"
            },
            "enabled": {
              "description": "Whether the scaling policy is enabled or disabled. Default: true.",
              "type": "boolean"
            },
            "estimatedInstanceWarmup": {
              "description": "Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.",
              "type": "number"
            },
            "metricAggregationType": {
              "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
              "type": "string"
            },
            "minAdjustmentMagnitude": {
              "description": "Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.",
              "type": "number"
            },
            "policyType": {
              "description": "Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
              "type": "string"
            },
            "predictiveScalingConfiguration": {
              "description": "Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.",
              "items": {
                "properties": {
                  "maxCapacityBreachBehavior": {
                    "description": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.",
                    "type": "string"
                  },
                  "maxCapacityBuffer": {
                    "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.",
                    "type": "string"
                  },
                  "metricSpecification": {
                    "description": "This structure includes the metrics and target utilization to use for predictive scaling.",
                    "items": {
                      "properties": {
                        "customizedCapacityMetricSpecification": {
                          "description": "Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom capacity metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "customizedLoadMetricSpecification": {
                          "description": "Customized load metric specification.",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom load metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "customizedScalingMetricSpecification": {
                          "description": "Customized scaling metric specification.",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedLoadMetricSpecification": {
                          "description": "Predefined load metric specification.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type. Valid values are ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut, or ALBTargetGroupRequestCount.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedMetricPairSpecification": {
                          "description": "Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is ASGCPUUtilization, the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric. Valid values are ASGCPUUtilization, ASGNetworkIn, ASGNetworkOut, or ALBRequestCount.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedScalingMetricSpecification": {
                          "description": "Predefined scaling metric specification.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "targetValue": {
                          "description": "Target value for the metric.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "mode": {
                    "description": "Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.",
                    "type": "string"
                  },
                  "schedulingBufferTime": {
                    "description": "Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "scalingAdjustment": {
              "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
              "type": "number"
            },
            "stepAdjustment": {
              "description": "Set of adjustments that manage group scaling. These have the following structure:",
              "items": {
                "properties": {
                  "metricIntervalLowerBound": {
                    "description": "Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.",
                    "type": "string"
                  },
                  "metricIntervalUpperBound": {
                    "description": "Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as positive infinity. The upper bound must be greater than the lower bound.",
                    "type": "string"
                  },
                  "scalingAdjustment": {
                    "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "targetTrackingConfiguration": {
              "description": "Target tracking policy. These have the following structure:",
              "items": {
                "properties": {
                  "customizedMetricSpecification": {
                    "description": "Customized metric. Conflicts with predefined_metric_specification.",
                    "items": {
                      "properties": {
                        "metricDimension": {
                          "description": "Dimensions of the metric.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the dimension.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "metricName": {
                          "description": "Name of the metric.",
                          "type": "string"
                        },
                        "metrics": {
                          "description": "Metrics to include, as a metric data query.",
                          "items": {
                            "properties": {
                              "expression": {
                                "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Short name for the metric used in predictive scaling policy.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Human-readable label for this metric or expression.",
                                "type": "string"
                              },
                              "metricStat": {
                                "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                "items": {
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "items": {
                                        "properties": {
                                          "dimensions": {
                                            "description": "Dimensions of the metric.",
                                            "items": {
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the policy.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the dimension.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "metricName": {
                                            "description": "Name of the metric.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "returnData": {
                                "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "namespace": {
                          "description": "Namespace of the metric.",
                          "type": "string"
                        },
                        "statistic": {
                          "description": "Statistic of the metric.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Unit of the metric.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "disableScaleIn": {
                    "description": "Whether scale in by the target tracking policy is disabled.",
                    "type": "boolean"
                  },
                  "predefinedMetricSpecification": {
                    "description": "Predefined metric. Conflicts with customized_metric_specification.",
                    "items": {
                      "properties": {
                        "predefinedMetricType": {
                          "description": "Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.",
                          "type": "string"
                        },
                        "resourceLabel": {
                          "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "targetValue": {
                    "description": "Target value for the metric.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "PolicyStatus defines the observed state of Policy.",
      "properties": {
        "atProvider": {
          "properties": {
            "adjustmentType": {
              "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
              "type": "string"
            },
            "arn": {
              "description": "ARN assigned by AWS to the scaling policy.",
              "type": "string"
            },
            "autoscalingGroupName": {
              "description": "Name of the autoscaling group.",
              "type": "string"
            },
            "cooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
              "type": "number"
            },
            "enabled": {
              "description": "Whether the scaling policy is enabled or disabled. Default: true.",
              "type": "boolean"
            },
            "estimatedInstanceWarmup": {
              "description": "Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.",
              "type": "number"
            },
            "id": {
              "description": "Short name for the metric used in predictive scaling policy.",
              "type": "string"
            },
            "metricAggregationType": {
              "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
              "type": "string"
            },
            "minAdjustmentMagnitude": {
              "description": "Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.",
              "type": "number"
            },
            "policyType": {
              "description": "Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
              "type": "string"
            },
            "predictiveScalingConfiguration": {
              "description": "Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.",
              "items": {
                "properties": {
                  "maxCapacityBreachBehavior": {
                    "description": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.",
                    "type": "string"
                  },
                  "maxCapacityBuffer": {
                    "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.",
                    "type": "string"
                  },
                  "metricSpecification": {
                    "description": "This structure includes the metrics and target utilization to use for predictive scaling.",
                    "items": {
                      "properties": {
                        "customizedCapacityMetricSpecification": {
                          "description": "Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom capacity metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "customizedLoadMetricSpecification": {
                          "description": "Customized load metric specification.",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom load metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "customizedScalingMetricSpecification": {
                          "description": "Customized scaling metric specification.",
                          "items": {
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "items": {
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in predictive scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "items": {
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "items": {
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "items": {
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedLoadMetricSpecification": {
                          "description": "Predefined load metric specification.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type. Valid values are ASGTotalCPUUtilization, ASGTotalNetworkIn, ASGTotalNetworkOut, or ALBTargetGroupRequestCount.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedMetricPairSpecification": {
                          "description": "Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Which metrics to use. There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is ASGCPUUtilization, the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric. Valid values are ASGCPUUtilization, ASGNetworkIn, ASGNetworkOut, or ALBRequestCount.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "predefinedScalingMetricSpecification": {
                          "description": "Predefined scaling metric specification.",
                          "items": {
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "targetValue": {
                          "description": "Target value for the metric.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "mode": {
                    "description": "Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.",
                    "type": "string"
                  },
                  "schedulingBufferTime": {
                    "description": "Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "scalingAdjustment": {
              "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
              "type": "number"
            },
            "stepAdjustment": {
              "description": "Set of adjustments that manage group scaling. These have the following structure:",
              "items": {
                "properties": {
                  "metricIntervalLowerBound": {
                    "description": "Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.",
                    "type": "string"
                  },
                  "metricIntervalUpperBound": {
                    "description": "Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as positive infinity. The upper bound must be greater than the lower bound.",
                    "type": "string"
                  },
                  "scalingAdjustment": {
                    "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "targetTrackingConfiguration": {
              "description": "Target tracking policy. These have the following structure:",
              "items": {
                "properties": {
                  "customizedMetricSpecification": {
                    "description": "Customized metric. Conflicts with predefined_metric_specification.",
                    "items": {
                      "properties": {
                        "metricDimension": {
                          "description": "Dimensions of the metric.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the dimension.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "metricName": {
                          "description": "Name of the metric.",
                          "type": "string"
                        },
                        "metrics": {
                          "description": "Metrics to include, as a metric data query.",
                          "items": {
                            "properties": {
                              "expression": {
                                "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Short name for the metric used in predictive scaling policy.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Human-readable label for this metric or expression.",
                                "type": "string"
                              },
                              "metricStat": {
                                "description": "Structure that defines CloudWatch metric to be used in predictive scaling policy. You must specify either expression or metric_stat, but not both.",
                                "items": {
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "items": {
                                        "properties": {
                                          "dimensions": {
                                            "description": "Dimensions of the metric.",
                                            "items": {
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the policy.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the dimension.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "metricName": {
                                            "description": "Name of the metric.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "returnData": {
                                "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "namespace": {
                          "description": "Namespace of the metric.",
                          "type": "string"
                        },
                        "statistic": {
                          "description": "Statistic of the metric.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Unit of the metric.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "disableScaleIn": {
                    "description": "Whether scale in by the target tracking policy is disabled.",
                    "type": "boolean"
                  },
                  "predefinedMetricSpecification": {
                    "description": "Predefined metric. Conflicts with customized_metric_specification.",
                    "items": {
                      "properties": {
                        "predefinedMetricType": {
                          "description": "Describes a scaling metric for a predictive scaling policy. Valid values are ASGAverageCPUUtilization, ASGAverageNetworkIn, ASGAverageNetworkOut, or ALBRequestCountPerTarget.",
                          "type": "string"
                        },
                        "resourceLabel": {
                          "description": "Label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). Refer to PredefinedMetricSpecification for more information.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "targetValue": {
                    "description": "Target value for the metric.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
