{
  "description": "IP is the Schema for the ips API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IPSpec defines the desired state of IP",
      "properties": {
        "address": {
          "description": "IP address (omit if type is dynamic)",
          "type": "string"
        },
        "interval": {
          "description": "Interval at which a dynamic IP should be checked",
          "type": "string"
        },
        "ipSources": {
          "description": "IPSources can be configured to get an IP from an external source (e.g. an API or public IP echo service)",
          "items": {
            "properties": {
              "insecureSkipVerify": {
                "description": "InsecureSkipVerify defines whether to skip TLS certificate verification",
                "type": "boolean"
              },
              "postProcessingRegex": {
                "description": "PostProcessingRegex defines the regular expression to be used to extract the IP from the response or a JQ filter result",
                "type": "string"
              },
              "requestBody": {
                "description": "RequestBody to be sent to the URL",
                "type": "string"
              },
              "requestHeaders": {
                "description": "RequestHeaders to be sent to the URL",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "requestHeadersSecretRef": {
                "description": "RequestHeadersSecretRef is a secret reference to the headers to be sent to the URL (e.g. for authentication)\nwhere the key is the header name and the value is the header value",
                "properties": {
                  "name": {
                    "description": "name is unique within a namespace to reference a secret resource.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "namespace defines the space within which the secret name must be unique.",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "requestMethod": {
                "description": "RequestMethod defines the HTTP method to be used",
                "enum": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE"
                ],
                "type": "string"
              },
              "responseJQFilter": {
                "description": "ResponseJQFilter applies a JQ filter to the response to extract the IP",
                "type": "string"
              },
              "url": {
                "description": "URL of the IP source (e.g. https://checkip.amazonaws.com)",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "type": {
          "default": "static",
          "description": "IP address type (static or dynamic)",
          "enum": [
            "static",
            "dynamic"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "IPStatus defines the observed state of IP",
      "properties": {
        "conditions": {
          "description": "Conditions contains the different condition statuses for the IP object.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "lastObservedIP": {
          "description": "LastObservedIP contains the IP address observed at the last interval (used to determine whether the IP has changed)",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
