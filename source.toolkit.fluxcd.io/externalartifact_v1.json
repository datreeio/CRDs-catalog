{
  "description": "ExternalArtifact is the Schema for the external artifacts API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ExternalArtifactSpec defines the desired state of ExternalArtifact",
      "properties": {
        "sourceRef": {
          "description": "SourceRef points to the Kubernetes custom resource for\nwhich the artifact is generated.",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent, if not specified the Kubernetes preferred version will be used.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent, when not specified it acts as LocalObjectReference.",
              "type": "string"
            }
          },
          "required": [
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ExternalArtifactStatus defines the observed state of ExternalArtifact",
      "properties": {
        "artifact": {
          "description": "Artifact represents the output of an ExternalArtifact reconciliation.",
          "properties": {
            "digest": {
              "description": "Digest is the digest of the file in the form of '<algorithm>:<checksum>'.",
              "pattern": "^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$",
              "type": "string"
            },
            "lastUpdateTime": {
              "description": "LastUpdateTime is the timestamp corresponding to the last update of the\nArtifact.",
              "format": "date-time",
              "type": "string"
            },
            "metadata": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Metadata holds upstream information such as OCI annotations.",
              "type": "object"
            },
            "path": {
              "description": "Path is the relative file path of the Artifact. It can be used to locate\nthe file in the root of the Artifact storage on the local file system of\nthe controller managing the Source.",
              "type": "string"
            },
            "revision": {
              "description": "Revision is a human-readable identifier traceable in the origin source\nsystem. It can be a Git commit SHA, Git tag, a Helm chart version, etc.",
              "type": "string"
            },
            "size": {
              "description": "Size is the number of bytes in the file.",
              "format": "int64",
              "type": "integer"
            },
            "url": {
              "description": "URL is the HTTP address of the Artifact as exposed by the controller\nmanaging the Source. It can be used to retrieve the Artifact for\nconsumption, e.g. by another controller applying the Artifact contents.",
              "type": "string"
            }
          },
          "required": [
            "digest",
            "lastUpdateTime",
            "path",
            "revision",
            "url"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions holds the conditions for the ExternalArtifact.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
