{
  "description": "ReindexRequest is the Schema for the reindexrequests API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ReindexRequestSpec defines the desired state of ReindexRequest",
      "properties": {
        "conflicts": {
          "description": "Indicates to OpenSearch what should happen if the delete by query operation runs into a version conflict.",
          "enum": [
            "abort",
            "proceed"
          ],
          "type": "string"
        },
        "connection": {
          "description": "OpenSearch URI with this format <scheme>://<user>:<password>@<hostname>:<port> from a key of a secret in the local namespace.",
          "properties": {
            "secretKeyRef": {
              "description": "SecretKeySelector selects a key of a Secret.",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            }
          },
          "required": [
            "secretKeyRef"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "dest": {
          "description": "Defines information about the destination Index.",
          "properties": {
            "index": {
              "description": "Name of the destination index.",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9-_\\.]+$",
              "type": "string"
            },
            "opType": {
              "description": "Controls reindex copy behavior when documents are missing in the destination Index.",
              "enum": [
                "create",
                "index"
              ],
              "type": "string"
            }
          },
          "required": [
            "index"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "source": {
          "description": "Defines information about the source Index.",
          "properties": {
            "index": {
              "description": "The name of the source index to copy data from.",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9-_\\.]+$",
              "type": "string"
            },
            "slice": {
              "description": "Defines manual slicing of the reindex operation, for executing in parallel.",
              "properties": {
                "id": {
                  "description": "The ID to associate with manual slicing.",
                  "type": "string"
                },
                "max": {
                  "description": "Maximum number of slices.",
                  "type": "integer"
                }
              },
              "required": [
                "id",
                "max"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            }
          },
          "required": [
            "index"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "connection",
        "dest",
        "source"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ReindexRequestStatus defines the observed state of ReindexRequest",
      "properties": {
        "conditions": {
          "description": "Conditions represents the observations of the ReindexRequest's current state. Known .status.conditions.type are: \"Complete\" and \"Degraded\"",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "task": {
          "description": "Details of the task within OpenSearch.",
          "properties": {
            "action": {
              "type": "string"
            },
            "cancellable": {
              "type": "boolean"
            },
            "cancelled": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "node": {
              "type": "string"
            },
            "running_time_in_nanos": {
              "format": "int64",
              "type": "integer"
            },
            "start_time_in_millis": {
              "format": "int64",
              "type": "integer"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "action",
            "cancellable",
            "cancelled",
            "description",
            "id",
            "node",
            "running_time_in_nanos",
            "start_time_in_millis",
            "type"
          ],
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "taskID": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "description": "The ID of a task within OpenSearch.",
          "x-kubernetes-int-or-string": true
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
