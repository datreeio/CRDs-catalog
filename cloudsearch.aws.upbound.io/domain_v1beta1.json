{
  "description": "Domain is the Schema for the Domains API. Provides an CloudSearch domain resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DomainSpec defines the desired state of Domain",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "endpointOptions": {
              "description": "Domain endpoint options. Documented below.",
              "items": {
                "properties": {
                  "enforceHttps": {
                    "description": "Enables or disables the requirement that all requests to the domain arrive over HTTPS.",
                    "type": "boolean"
                  },
                  "tlsSecurityPolicy": {
                    "description": "The minimum required TLS version. See the AWS documentation for valid values.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "indexField": {
              "description": "The index fields for documents added to the domain. Documented below.",
              "items": {
                "properties": {
                  "analysisScheme": {
                    "description": "The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.",
                    "type": "string"
                  },
                  "defaultValue": {
                    "description": "The default value for the field. This value is used when no value is specified for the field in the document data.",
                    "type": "string"
                  },
                  "facet": {
                    "description": "You can get facet information by enabling this.",
                    "type": "boolean"
                  },
                  "highlight": {
                    "description": "You can highlight information.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name of the CloudSearch domain.",
                    "type": "string"
                  },
                  "return": {
                    "description": "You can enable returning the value of all searchable fields.",
                    "type": "boolean"
                  },
                  "search": {
                    "description": "You can set whether this index should be searchable or not.",
                    "type": "boolean"
                  },
                  "sort": {
                    "description": "You can enable the property to be sortable.",
                    "type": "boolean"
                  },
                  "sourceFields": {
                    "description": "A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "multiAz": {
              "description": "Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.",
              "type": "boolean"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "scalingParameters": {
              "description": "Domain scaling parameters. Documented below.",
              "items": {
                "properties": {
                  "desiredInstanceType": {
                    "description": "The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.",
                    "type": "string"
                  },
                  "desiredPartitionCount": {
                    "description": "The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.",
                    "type": "number"
                  },
                  "desiredReplicationCount": {
                    "description": "The number of replicas you want to preconfigure for each index partition.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "properties": {
            "endpointOptions": {
              "description": "Domain endpoint options. Documented below.",
              "items": {
                "properties": {
                  "enforceHttps": {
                    "description": "Enables or disables the requirement that all requests to the domain arrive over HTTPS.",
                    "type": "boolean"
                  },
                  "tlsSecurityPolicy": {
                    "description": "The minimum required TLS version. See the AWS documentation for valid values.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "indexField": {
              "description": "The index fields for documents added to the domain. Documented below.",
              "items": {
                "properties": {
                  "analysisScheme": {
                    "description": "The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.",
                    "type": "string"
                  },
                  "defaultValue": {
                    "description": "The default value for the field. This value is used when no value is specified for the field in the document data.",
                    "type": "string"
                  },
                  "facet": {
                    "description": "You can get facet information by enabling this.",
                    "type": "boolean"
                  },
                  "highlight": {
                    "description": "You can highlight information.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name of the CloudSearch domain.",
                    "type": "string"
                  },
                  "return": {
                    "description": "You can enable returning the value of all searchable fields.",
                    "type": "boolean"
                  },
                  "search": {
                    "description": "You can set whether this index should be searchable or not.",
                    "type": "boolean"
                  },
                  "sort": {
                    "description": "You can enable the property to be sortable.",
                    "type": "boolean"
                  },
                  "sourceFields": {
                    "description": "A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "multiAz": {
              "description": "Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.",
              "type": "boolean"
            },
            "scalingParameters": {
              "description": "Domain scaling parameters. Documented below.",
              "items": {
                "properties": {
                  "desiredInstanceType": {
                    "description": "The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.",
                    "type": "string"
                  },
                  "desiredPartitionCount": {
                    "description": "The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.",
                    "type": "number"
                  },
                  "desiredReplicationCount": {
                    "description": "The number of replicas you want to preconfigure for each index partition.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DomainStatus defines the observed state of Domain.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "The domain's ARN.",
              "type": "string"
            },
            "documentServiceEndpoint": {
              "description": "The service endpoint for updating documents in a search domain.",
              "type": "string"
            },
            "domainId": {
              "description": "An internally generated unique identifier for the domain.",
              "type": "string"
            },
            "endpointOptions": {
              "description": "Domain endpoint options. Documented below.",
              "items": {
                "properties": {
                  "enforceHttps": {
                    "description": "Enables or disables the requirement that all requests to the domain arrive over HTTPS.",
                    "type": "boolean"
                  },
                  "tlsSecurityPolicy": {
                    "description": "The minimum required TLS version. See the AWS documentation for valid values.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "id": {
              "type": "string"
            },
            "indexField": {
              "description": "The index fields for documents added to the domain. Documented below.",
              "items": {
                "properties": {
                  "analysisScheme": {
                    "description": "The analysis scheme you want to use for a text field. The analysis scheme specifies the language-specific text processing options that are used during indexing.",
                    "type": "string"
                  },
                  "defaultValue": {
                    "description": "The default value for the field. This value is used when no value is specified for the field in the document data.",
                    "type": "string"
                  },
                  "facet": {
                    "description": "You can get facet information by enabling this.",
                    "type": "boolean"
                  },
                  "highlight": {
                    "description": "You can highlight information.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name of the CloudSearch domain.",
                    "type": "string"
                  },
                  "return": {
                    "description": "You can enable returning the value of all searchable fields.",
                    "type": "boolean"
                  },
                  "search": {
                    "description": "You can set whether this index should be searchable or not.",
                    "type": "boolean"
                  },
                  "sort": {
                    "description": "You can enable the property to be sortable.",
                    "type": "boolean"
                  },
                  "sourceFields": {
                    "description": "A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The field type. Valid values: date, date-array, double, double-array, int, int-array, literal, literal-array, text, text-array.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "multiAz": {
              "description": "Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.",
              "type": "boolean"
            },
            "scalingParameters": {
              "description": "Domain scaling parameters. Documented below.",
              "items": {
                "properties": {
                  "desiredInstanceType": {
                    "description": "The instance type that you want to preconfigure for your domain. See the AWS documentation for valid values.",
                    "type": "string"
                  },
                  "desiredPartitionCount": {
                    "description": "The number of partitions you want to preconfigure for your domain. Only valid when you select search.2xlarge as the instance type.",
                    "type": "number"
                  },
                  "desiredReplicationCount": {
                    "description": "The number of replicas you want to preconfigure for each index partition.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "searchServiceEndpoint": {
              "description": "The service endpoint for requesting search results from a search domain.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
