{
  "description": "Cassandra is the Schema for the cassandras API.\nInfo \"Exposes secret keys\": `CASSANDRA_HOST`, `CASSANDRA_PORT`, `CASSANDRA_USER`, `CASSANDRA_PASSWORD`, `CASSANDRA_URI`, `CASSANDRA_HOSTS`, `CASSANDRA_CA_CERT`",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CassandraSpec defines the desired state of Cassandra",
      "properties": {
        "authSecretRef": {
          "description": "Authentication reference to Aiven token in a secret",
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "cloudName": {
          "description": "Cloud the service runs in.",
          "maxLength": 256,
          "type": "string"
        },
        "connInfoSecretTarget": {
          "description": "Secret configuration.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations added to the secret",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels added to the secret",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "name": {
              "description": "Name of the secret resource to be created. By default, it is equal to the resource name",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "prefix": {
              "description": "Prefix for the secret's keys.\nAdded \"as is\" without any transformations.\nBy default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "connInfoSecretTargetDisabled": {
          "description": "When true, the secret containing connection information will not be created, defaults to false. This field cannot be changed after resource creation.",
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "message": "connInfoSecretTargetDisabled is immutable.",
              "rule": "self == oldSelf"
            }
          ]
        },
        "disk_space": {
          "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project.\nReducing will result in the service re-balancing.\nThe removal of this field does not change the value.",
          "pattern": "(?i)^[1-9][0-9]*(GiB|G)?$",
          "type": "string"
        },
        "maintenanceWindowDow": {
          "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "type": "string"
        },
        "maintenanceWindowTime": {
          "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
          "maxLength": 8,
          "type": "string"
        },
        "plan": {
          "description": "Subscription plan.",
          "maxLength": 128,
          "type": "string"
        },
        "project": {
          "description": "Identifies the project this resource belongs to",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVPCRef": {
          "description": "ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically",
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "projectVpcId": {
          "description": "Identifier of the VPC the service should be in, if any.",
          "maxLength": 36,
          "type": "string"
        },
        "serviceIntegrations": {
          "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
          "items": {
            "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
            "properties": {
              "integrationType": {
                "enum": [
                  "read_replica"
                ],
                "type": "string"
              },
              "sourceServiceName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "maxItems": 1,
          "type": "array",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are key-value pairs that allow you to categorize services.",
          "type": "object"
        },
        "technicalEmails": {
          "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.",
          "items": {
            "properties": {
              "email": {
                "description": "Email address.",
                "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "maxItems": 10,
          "type": "array"
        },
        "terminationProtection": {
          "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.",
          "type": "boolean"
        },
        "userConfig": {
          "description": "Cassandra specific user configuration options",
          "properties": {
            "additional_backup_regions": {
              "description": "Deprecated. Additional Cloud Regions for Backup Replication",
              "items": {
                "type": "string"
              },
              "maxItems": 1,
              "type": "array"
            },
            "backup_hour": {
              "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "maximum": 23,
              "minimum": 0,
              "type": "integer"
            },
            "backup_minute": {
              "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "maximum": 59,
              "minimum": 0,
              "type": "integer"
            },
            "cassandra": {
              "description": "cassandra configuration values",
              "properties": {
                "batch_size_fail_threshold_in_kb": {
                  "description": "Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default.",
                  "maximum": 1000000,
                  "minimum": 1,
                  "type": "integer"
                },
                "batch_size_warn_threshold_in_kb": {
                  "description": "Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability.",
                  "maximum": 1000000,
                  "minimum": 1,
                  "type": "integer"
                },
                "datacenter": {
                  "description": "Name of the datacenter to which nodes of this service belong. Can be set only when creating the service.",
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "cassandra_version": {
              "description": "Cassandra version",
              "enum": [
                "4",
                "4.1"
              ],
              "pattern": "^[0-9]+(\\.[0-9]+)?$",
              "type": "string"
            },
            "ip_filter": {
              "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
              "items": {
                "description": "CIDR address block, either as a string, or in a dict with an optional description field",
                "properties": {
                  "description": {
                    "description": "Description for IP filter list entry",
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "network": {
                    "description": "CIDR address block",
                    "maxLength": 43,
                    "type": "string"
                  }
                },
                "required": [
                  "network"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "maxItems": 1024,
              "type": "array"
            },
            "migrate_sstableloader": {
              "description": "Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.",
              "type": "boolean"
            },
            "private_access": {
              "description": "Allow access to selected service ports from private networks",
              "properties": {
                "prometheus": {
                  "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "project_to_fork_from": {
              "description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "maxLength": 63,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "public_access": {
              "description": "Allow access to selected service ports from the public Internet",
              "properties": {
                "prometheus": {
                  "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "service_log": {
              "description": "Store logs for the service so that they are available in the HTTP API and console.",
              "type": "boolean"
            },
            "service_to_fork_from": {
              "description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "maxLength": 64,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "service_to_join_with": {
              "description": "When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.",
              "maxLength": 64,
              "pattern": "^[a-z][-a-z0-9]{0,63}$",
              "type": "string"
            },
            "static_ips": {
              "description": "Use static public IP addresses",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "plan",
        "project"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "connInfoSecretTargetDisabled can only be set during resource creation.",
          "rule": "has(oldSelf.connInfoSecretTargetDisabled) == has(self.connInfoSecretTargetDisabled)"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "ServiceStatus defines the observed state of service",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of a service state",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "state": {
          "description": "Service state",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
