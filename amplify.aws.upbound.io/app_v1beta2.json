{
  "description": "App is the Schema for the Apps API. Provides an Amplify App resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AppSpec defines the desired state of App",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "accessTokenSecretRef": {
              "description": "Personal access token for a third-party source control system for an Amplify app. This token must have write access to the relevant repo to create a webhook and a read-only deploy key for the Amplify project. The token is not stored, so after applying this attribute can be removed and the setup token deleted.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "autoBranchCreationConfig": {
              "description": "Automated branch creation configuration for an Amplify app. See auto_branch_creation_config Block for details.",
              "properties": {
                "basicAuthCredentialsSecretRef": {
                  "description": "Basic authorization credentials for the autocreated branch.",
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "buildSpec": {
                  "description": "Build specification (build spec) for the autocreated branch.",
                  "type": "string"
                },
                "enableAutoBuild": {
                  "description": "Enables auto building for the autocreated branch.",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": "Enables basic authorization for the autocreated branch.",
                  "type": "boolean"
                },
                "enablePerformanceMode": {
                  "description": "Enables performance mode for the branch.",
                  "type": "boolean"
                },
                "enablePullRequestPreview": {
                  "description": "Enables pull request previews for the autocreated branch.",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Environment variables for the autocreated branch.",
                  "type": "object",
                  "x-kubernetes-map-type": "granular"
                },
                "framework": {
                  "description": "Framework for the autocreated branch.",
                  "type": "string"
                },
                "pullRequestEnvironmentName": {
                  "description": "Amplify environment name for the pull request.",
                  "type": "string"
                },
                "stage": {
                  "description": "Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "autoBranchCreationPatterns": {
              "description": "Automated branch creation glob patterns for an Amplify app.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "basicAuthCredentialsSecretRef": {
              "description": "Credentials for basic authorization for an Amplify app.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "buildSpec": {
              "description": "The build specification (build spec) for an Amplify app.",
              "type": "string"
            },
            "cacheConfig": {
              "description": "Cache configuration for the Amplify app. See cache_config Block for details.",
              "properties": {
                "type": {
                  "description": "Type of cache configuration to use for an Amplify app. Valid values: AMPLIFY_MANAGED, AMPLIFY_MANAGED_NO_COOKIES.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "customHeaders": {
              "description": "The custom HTTP headers for an Amplify app.",
              "type": "string"
            },
            "customRule": {
              "description": "Custom rewrite and redirect rules for an Amplify app. See custom_rule Block for details.",
              "items": {
                "properties": {
                  "condition": {
                    "description": "Condition for a URL rewrite or redirect rule, such as a country code.",
                    "type": "string"
                  },
                  "source": {
                    "description": "Source pattern for a URL rewrite or redirect rule.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.",
                    "type": "string"
                  },
                  "target": {
                    "description": "Target pattern for a URL rewrite or redirect rule.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "description": {
              "description": "Description for an Amplify app.",
              "type": "string"
            },
            "enableAutoBranchCreation": {
              "description": "Enables automated branch creation for an Amplify app.",
              "type": "boolean"
            },
            "enableBasicAuth": {
              "description": "Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.",
              "type": "boolean"
            },
            "enableBranchAutoBuild": {
              "description": "Enables auto-building of branches for the Amplify App.",
              "type": "boolean"
            },
            "enableBranchAutoDeletion": {
              "description": "Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.",
              "type": "boolean"
            },
            "environmentVariables": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Environment variables map for an Amplify app.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "iamServiceRoleArn": {
              "description": "AWS Identity and Access Management (IAM) service role for an Amplify app.",
              "type": "string"
            },
            "iamServiceRoleArnRef": {
              "description": "Reference to a Role in iam to populate iamServiceRoleArn.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "iamServiceRoleArnSelector": {
              "description": "Selector for a Role in iam to populate iamServiceRoleArn.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name for an Amplify app.",
              "type": "string"
            },
            "oauthTokenSecretRef": {
              "description": "OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "platform": {
              "description": "Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "repository": {
              "description": "Repository for an Amplify app.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "accessTokenSecretRef": {
              "description": "Personal access token for a third-party source control system for an Amplify app. This token must have write access to the relevant repo to create a webhook and a read-only deploy key for the Amplify project. The token is not stored, so after applying this attribute can be removed and the setup token deleted.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "autoBranchCreationConfig": {
              "description": "Automated branch creation configuration for an Amplify app. See auto_branch_creation_config Block for details.",
              "properties": {
                "basicAuthCredentialsSecretRef": {
                  "description": "Basic authorization credentials for the autocreated branch.",
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "buildSpec": {
                  "description": "Build specification (build spec) for the autocreated branch.",
                  "type": "string"
                },
                "enableAutoBuild": {
                  "description": "Enables auto building for the autocreated branch.",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": "Enables basic authorization for the autocreated branch.",
                  "type": "boolean"
                },
                "enablePerformanceMode": {
                  "description": "Enables performance mode for the branch.",
                  "type": "boolean"
                },
                "enablePullRequestPreview": {
                  "description": "Enables pull request previews for the autocreated branch.",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Environment variables for the autocreated branch.",
                  "type": "object",
                  "x-kubernetes-map-type": "granular"
                },
                "framework": {
                  "description": "Framework for the autocreated branch.",
                  "type": "string"
                },
                "pullRequestEnvironmentName": {
                  "description": "Amplify environment name for the pull request.",
                  "type": "string"
                },
                "stage": {
                  "description": "Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "autoBranchCreationPatterns": {
              "description": "Automated branch creation glob patterns for an Amplify app.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "basicAuthCredentialsSecretRef": {
              "description": "Credentials for basic authorization for an Amplify app.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "buildSpec": {
              "description": "The build specification (build spec) for an Amplify app.",
              "type": "string"
            },
            "cacheConfig": {
              "description": "Cache configuration for the Amplify app. See cache_config Block for details.",
              "properties": {
                "type": {
                  "description": "Type of cache configuration to use for an Amplify app. Valid values: AMPLIFY_MANAGED, AMPLIFY_MANAGED_NO_COOKIES.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "customHeaders": {
              "description": "The custom HTTP headers for an Amplify app.",
              "type": "string"
            },
            "customRule": {
              "description": "Custom rewrite and redirect rules for an Amplify app. See custom_rule Block for details.",
              "items": {
                "properties": {
                  "condition": {
                    "description": "Condition for a URL rewrite or redirect rule, such as a country code.",
                    "type": "string"
                  },
                  "source": {
                    "description": "Source pattern for a URL rewrite or redirect rule.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.",
                    "type": "string"
                  },
                  "target": {
                    "description": "Target pattern for a URL rewrite or redirect rule.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "description": {
              "description": "Description for an Amplify app.",
              "type": "string"
            },
            "enableAutoBranchCreation": {
              "description": "Enables automated branch creation for an Amplify app.",
              "type": "boolean"
            },
            "enableBasicAuth": {
              "description": "Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.",
              "type": "boolean"
            },
            "enableBranchAutoBuild": {
              "description": "Enables auto-building of branches for the Amplify App.",
              "type": "boolean"
            },
            "enableBranchAutoDeletion": {
              "description": "Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.",
              "type": "boolean"
            },
            "environmentVariables": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Environment variables map for an Amplify app.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "iamServiceRoleArn": {
              "description": "AWS Identity and Access Management (IAM) service role for an Amplify app.",
              "type": "string"
            },
            "iamServiceRoleArnRef": {
              "description": "Reference to a Role in iam to populate iamServiceRoleArn.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "iamServiceRoleArnSelector": {
              "description": "Selector for a Role in iam to populate iamServiceRoleArn.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name for an Amplify app.",
              "type": "string"
            },
            "oauthTokenSecretRef": {
              "description": "OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.",
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "platform": {
              "description": "Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.",
              "type": "string"
            },
            "repository": {
              "description": "Repository for an Amplify app.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "AppStatus defines the observed state of App.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "ARN of the Amplify app.",
              "type": "string"
            },
            "autoBranchCreationConfig": {
              "description": "Automated branch creation configuration for an Amplify app. See auto_branch_creation_config Block for details.",
              "properties": {
                "buildSpec": {
                  "description": "Build specification (build spec) for the autocreated branch.",
                  "type": "string"
                },
                "enableAutoBuild": {
                  "description": "Enables auto building for the autocreated branch.",
                  "type": "boolean"
                },
                "enableBasicAuth": {
                  "description": "Enables basic authorization for the autocreated branch.",
                  "type": "boolean"
                },
                "enablePerformanceMode": {
                  "description": "Enables performance mode for the branch.",
                  "type": "boolean"
                },
                "enablePullRequestPreview": {
                  "description": "Enables pull request previews for the autocreated branch.",
                  "type": "boolean"
                },
                "environmentVariables": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Environment variables for the autocreated branch.",
                  "type": "object",
                  "x-kubernetes-map-type": "granular"
                },
                "framework": {
                  "description": "Framework for the autocreated branch.",
                  "type": "string"
                },
                "pullRequestEnvironmentName": {
                  "description": "Amplify environment name for the pull request.",
                  "type": "string"
                },
                "stage": {
                  "description": "Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "autoBranchCreationPatterns": {
              "description": "Automated branch creation glob patterns for an Amplify app.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "buildSpec": {
              "description": "The build specification (build spec) for an Amplify app.",
              "type": "string"
            },
            "cacheConfig": {
              "description": "Cache configuration for the Amplify app. See cache_config Block for details.",
              "properties": {
                "type": {
                  "description": "Type of cache configuration to use for an Amplify app. Valid values: AMPLIFY_MANAGED, AMPLIFY_MANAGED_NO_COOKIES.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "customHeaders": {
              "description": "The custom HTTP headers for an Amplify app.",
              "type": "string"
            },
            "customRule": {
              "description": "Custom rewrite and redirect rules for an Amplify app. See custom_rule Block for details.",
              "items": {
                "properties": {
                  "condition": {
                    "description": "Condition for a URL rewrite or redirect rule, such as a country code.",
                    "type": "string"
                  },
                  "source": {
                    "description": "Source pattern for a URL rewrite or redirect rule.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.",
                    "type": "string"
                  },
                  "target": {
                    "description": "Target pattern for a URL rewrite or redirect rule.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "defaultDomain": {
              "description": "Default domain for the Amplify app.",
              "type": "string"
            },
            "description": {
              "description": "Description for an Amplify app.",
              "type": "string"
            },
            "enableAutoBranchCreation": {
              "description": "Enables automated branch creation for an Amplify app.",
              "type": "boolean"
            },
            "enableBasicAuth": {
              "description": "Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.",
              "type": "boolean"
            },
            "enableBranchAutoBuild": {
              "description": "Enables auto-building of branches for the Amplify App.",
              "type": "boolean"
            },
            "enableBranchAutoDeletion": {
              "description": "Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.",
              "type": "boolean"
            },
            "environmentVariables": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Environment variables map for an Amplify app.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "iamServiceRoleArn": {
              "description": "AWS Identity and Access Management (IAM) service role for an Amplify app.",
              "type": "string"
            },
            "id": {
              "description": "Unique ID of the Amplify app.",
              "type": "string"
            },
            "name": {
              "description": "Name for an Amplify app.",
              "type": "string"
            },
            "platform": {
              "description": "Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.",
              "type": "string"
            },
            "productionBranch": {
              "description": "Describes the information about a production branch for an Amplify app. A production_branch block is documented below.",
              "items": {
                "properties": {
                  "branchName": {
                    "description": "Branch name for the production branch.",
                    "type": "string"
                  },
                  "lastDeployTime": {
                    "description": "Last deploy time of the production branch.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of the production branch.",
                    "type": "string"
                  },
                  "thumbnailUrl": {
                    "description": "Thumbnail URL for the production branch.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "repository": {
              "description": "Repository for an Amplify app.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
