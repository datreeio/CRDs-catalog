{
  "description": "Document is the Schema for the Documents API. Provides an SSM Document resource",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DocumentSpec defines the desired state of Document",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "attachmentsSource": {
              "description": "One or more configuration blocks describing attachments sources to a version of a document. Defined below.",
              "items": {
                "properties": {
                  "key": {
                    "description": "The key describing the location of an attachment to a document. Valid key types include: SourceUrl and S3FileUrl",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document attachment file",
                    "type": "string"
                  },
                  "values": {
                    "description": "The value describing the location of an attachment to a document",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "content": {
              "description": "The JSON or YAML content of the document.",
              "type": "string"
            },
            "documentFormat": {
              "description": "The format of the document. Valid document types include: JSON and YAML",
              "type": "string"
            },
            "documentType": {
              "description": "The type of the document. Valid document types include: Automation, Command, Package, Policy, and Session",
              "type": "string"
            },
            "permissions": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Additional Permissions to attach to the document. See Permissions below for details.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "targetType": {
              "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)",
              "type": "string"
            },
            "versionName": {
              "description": "A field specifying the version of the artifact you are creating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document and cannot be changed for an existing document version.",
              "type": "string"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "properties": {
            "attachmentsSource": {
              "description": "One or more configuration blocks describing attachments sources to a version of a document. Defined below.",
              "items": {
                "properties": {
                  "key": {
                    "description": "The key describing the location of an attachment to a document. Valid key types include: SourceUrl and S3FileUrl",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document attachment file",
                    "type": "string"
                  },
                  "values": {
                    "description": "The value describing the location of an attachment to a document",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "content": {
              "description": "The JSON or YAML content of the document.",
              "type": "string"
            },
            "documentFormat": {
              "description": "The format of the document. Valid document types include: JSON and YAML",
              "type": "string"
            },
            "documentType": {
              "description": "The type of the document. Valid document types include: Automation, Command, Package, Policy, and Session",
              "type": "string"
            },
            "permissions": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Additional Permissions to attach to the document. See Permissions below for details.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "targetType": {
              "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)",
              "type": "string"
            },
            "versionName": {
              "description": "A field specifying the version of the artifact you are creating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document and cannot be changed for an existing document version.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.content is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.content) || (has(self.initProvider) && has(self.initProvider.content))"
        },
        {
          "message": "spec.forProvider.documentType is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.documentType) || (has(self.initProvider) && has(self.initProvider.documentType))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "DocumentStatus defines the observed state of Document.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "type": "string"
            },
            "attachmentsSource": {
              "description": "One or more configuration blocks describing attachments sources to a version of a document. Defined below.",
              "items": {
                "properties": {
                  "key": {
                    "description": "The key describing the location of an attachment to a document. Valid key types include: SourceUrl and S3FileUrl",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document attachment file",
                    "type": "string"
                  },
                  "values": {
                    "description": "The value describing the location of an attachment to a document",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "content": {
              "description": "The JSON or YAML content of the document.",
              "type": "string"
            },
            "createdDate": {
              "description": "The date the document was created.",
              "type": "string"
            },
            "defaultVersion": {
              "description": "The default version of the document.",
              "type": "string"
            },
            "description": {
              "description": "The description of the document.",
              "type": "string"
            },
            "documentFormat": {
              "description": "The format of the document. Valid document types include: JSON and YAML",
              "type": "string"
            },
            "documentType": {
              "description": "The type of the document. Valid document types include: Automation, Command, Package, Policy, and Session",
              "type": "string"
            },
            "documentVersion": {
              "description": "The document version.",
              "type": "string"
            },
            "hash": {
              "description": "The sha1 or sha256 of the document content",
              "type": "string"
            },
            "hashType": {
              "description": "\"Sha1\" \"Sha256\". The hashing algorithm used when hashing the content.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "latestVersion": {
              "description": "The latest version of the document.",
              "type": "string"
            },
            "owner": {
              "description": "The AWS user account of the person who created the document.",
              "type": "string"
            },
            "parameter": {
              "description": "The parameters that are available to this document.",
              "items": {
                "properties": {
                  "defaultValue": {
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of the document.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The permission type for the document. The permission type can be Share.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "permissions": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Additional Permissions to attach to the document. See Permissions below for details.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "platformTypes": {
              "description": "A list of OS platforms compatible with this SSM document, either \"Windows\" or \"Linux\".",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "schemaVersion": {
              "description": "The schema version of the document.",
              "type": "string"
            },
            "status": {
              "description": "\"Creating\", \"Active\" or \"Deleting\". The current status of the document.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "targetType": {
              "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS Resource Types Reference (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)",
              "type": "string"
            },
            "versionName": {
              "description": "A field specifying the version of the artifact you are creating with the document. For example, \"Release 12, Update 6\". This value is unique across all versions of a document and cannot be changed for an existing document version.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
