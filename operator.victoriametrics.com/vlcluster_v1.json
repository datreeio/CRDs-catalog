{
  "description": "VLCluster is fast, cost-effective and scalable logs database.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VLClusterSpec defines the desired state of VLCluster",
      "properties": {
        "clusterDomainName": {
          "description": "ClusterDomainName defines domain name suffix for in-cluster dns addresses\naka .cluster.local\nused by vlinsert and vlselect to build vlstorage address",
          "type": "string"
        },
        "clusterVersion": {
          "description": "ClusterVersion defines default images tag for all components.\nit can be overwritten with component specific image.tag value.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace\nto use for pulling images from registries\nsee https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
            "properties": {
              "name": {
                "default": "",
                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": "string"
              }
            },
            "type": "object",
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false
          },
          "type": "array"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects\ncreated by operator for the given CustomResource",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not\ngoing to be performed, except for delete actions.",
          "type": "boolean"
        },
        "requestsLoadBalancer": {
          "description": "RequestsLoadBalancer configures load-balancing for vlinsert and vlselect requests.\nIt helps to evenly spread load across pods.\nUsually it's not possible with Kubernetes TCP-based services.",
          "properties": {
            "disableInsertBalancing": {
              "type": "boolean"
            },
            "disableSelectBalancing": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "spec": {
              "description": "VMAuthLoadBalancerSpec defines configuration spec for VMAuth used as load-balancer\nfor VMCluster component",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the\nVLSelect, VLInsert and VLStorage Pods.",
          "type": "string"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component\nit restricts disk writes access\nuses non-root user out of the box\ndrops not needed security permissions",
          "type": "boolean"
        },
        "vlinsert": {
          "description": "VLInsert defines vlinsert component configuration at victoria-logs cluster",
          "properties": {
            "affinity": {
              "description": "Affinity If specified, the pod's scheduling constraints.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "configMaps": {
              "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application\nobject, which shall be mounted into the Application container\nat /etc/vm/configs/CONFIGMAP_NAME folder",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "containers": {
              "description": "Containers property allows to inject additions sidecars or to patch existing containers.\nIt can be useful for proxies, backup, etc.",
              "items": {
                "description": "A single application container that you want to run within a pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "disableAutomountServiceAccountToken": {
              "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).\nOperator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.\nFor example, vmagent and vm-config-reloader requires k8s API access.\nOperator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed.\nAnd also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
              "type": "boolean"
            },
            "disableSelfServiceScrape": {
              "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator\nfor the application.\nHas priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
              "type": "boolean"
            },
            "dnsConfig": {
              "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
              "items": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "properties": {
                "nameservers": {
                  "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "options": {
                  "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                  "items": {
                    "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                    "properties": {
                      "name": {
                        "description": "Name is this DNS resolver option's name.\nRequired.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is this DNS resolver option's value.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "searches": {
                  "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "dnsPolicy": {
              "description": "DNSPolicy sets DNS policy for the pod",
              "type": "string"
            },
            "extraArgs": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "ExtraArgs that will be passed to the application container\nfor example remoteWrite.tmpDataPath: /tmp",
              "type": "object"
            },
            "extraEnvs": {
              "description": "ExtraEnvs that will be passed to the application container",
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true,
                "additionalProperties": false
              },
              "type": "array"
            },
            "extraEnvsFrom": {
              "description": "ExtraEnvsFrom defines source of env variables for the application container\ncould either be secret or configmap",
              "items": {
                "description": "EnvFromSource represents the source of a set of ConfigMaps",
                "properties": {
                  "configMapRef": {
                    "description": "The ConfigMap to select from",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap must be defined",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "prefix": {
                    "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "The Secret to select from",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret must be defined",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "host_aliases": {
              "description": "HostAliasesUnderScore provides mapping for ip and hostname,\nthat would be propagated to pod,\ncannot be used with HostNetwork.\nHas Priority over hostAliases field",
              "items": {
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                "properties": {
                  "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "hostAliases": {
              "description": "HostAliases provides mapping for ip and hostname,\nthat would be propagated to pod,\ncannot be used with HostNetwork.",
              "items": {
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                "properties": {
                  "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "hostNetwork": {
              "description": "HostNetwork controls whether the pod may use the node network namespace",
              "type": "boolean"
            },
            "hpa": {
              "description": "Configures horizontal pod autoscaling.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "image": {
              "description": "Image - docker image settings\nif no specified operator uses default version from operator config",
              "properties": {
                "pullPolicy": {
                  "description": "PullPolicy describes how to pull docker image",
                  "type": "string"
                },
                "repository": {
                  "description": "Repository contains name of docker image + it's repository if needed",
                  "type": "string"
                },
                "tag": {
                  "description": "Tag contains desired docker image version",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets An optional list of references to secrets in the same namespace\nto use for pulling images from registries\nsee https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
              "items": {
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                "properties": {
                  "name": {
                    "default": "",
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "type": "array"
            },
            "initContainers": {
              "description": "InitContainers allows adding initContainers to the pod definition.\nAny errors during the execution of an initContainer will lead to a restart of the Pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
              "items": {
                "description": "A single application container that you want to run within a pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "livenessProbe": {
              "description": "LivenessProbe that will be added CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "logFormat": {
              "description": "LogFormat for VLSelect to be configured with.\ndefault or json",
              "enum": [
                "default",
                "json"
              ],
              "type": "string"
            },
            "logLevel": {
              "description": "LogLevel for VLSelect to be configured with.",
              "enum": [
                "INFO",
                "WARN",
                "ERROR",
                "FATAL",
                "PANIC"
              ],
              "type": "string"
            },
            "minReadySeconds": {
              "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod\nif previous in healthy state\nHas no effect for VLogs and VMSingle",
              "format": "int32",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
              "type": "object"
            },
            "paused": {
              "description": "Paused If set to true all actions on the underlying managed objects are not\ngoing to be performed, except for delete actions.",
              "type": "boolean"
            },
            "podDisruptionBudget": {
              "description": "PodDisruptionBudget created by operator",
              "properties": {
                "maxUnavailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
                  "x-kubernetes-int-or-string": true
                },
                "minAvailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\".",
                  "x-kubernetes-int-or-string": true
                },
                "selectorLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "replaces default labels selector generated by operator\nit's useful when you need to create custom budget",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "podMetadata": {
              "description": "PodMetadata configures Labels and Annotations which are propagated to the VLSelect pods.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                  "type": "object"
                },
                "name": {
                  "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "port": {
              "description": "Port listen address",
              "type": "string"
            },
            "priorityClassName": {
              "description": "PriorityClassName class assigned to the Pods",
              "type": "string"
            },
            "readinessGates": {
              "description": "ReadinessGates defines pod readiness gates",
              "items": {
                "description": "PodReadinessGate contains the reference to a pod condition",
                "properties": {
                  "conditionType": {
                    "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                    "type": "string"
                  }
                },
                "required": [
                  "conditionType"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "readinessProbe": {
              "description": "ReadinessProbe that will be added CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "replicaCount": {
              "description": "ReplicaCount is the expected size of the Application.",
              "format": "int32",
              "type": "integer"
            },
            "resources": {
              "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\nif not defined default resources from operator config will be used",
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                        "type": "string"
                      },
                      "request": {
                        "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "revisionHistoryLimitCount": {
              "description": "The number of old ReplicaSets to retain to allow rollback in deployment or\nmaximum number of revisions that will be maintained in the Deployment revision history.\nHas no effect at StatefulSets\nDefaults to 10.",
              "format": "int32",
              "type": "integer"
            },
            "rollingUpdate": {
              "description": "RollingUpdate - overrides deployment update params.",
              "properties": {
                "maxSurge": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.",
                  "x-kubernetes-int-or-string": true
                },
                "maxUnavailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "runtimeClassName": {
              "description": "RuntimeClassName - defines runtime class for kubernetes pod.\nhttps://kubernetes.io/docs/concepts/containers/runtime-class/",
              "type": "string"
            },
            "schedulerName": {
              "description": "SchedulerName - defines kubernetes scheduler name",
              "type": "string"
            },
            "secrets": {
              "description": "Secrets is a list of Secrets in the same namespace as the Application\nobject, which shall be mounted into the Application container\nat /etc/vm/secrets/SECRET_NAME folder",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "securityContext": {
              "description": "SecurityContext holds pod-level security attributes and common container settings.\nThis defaults to the default PodSecurityContext.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "serviceScrapeSpec": {
              "description": "ServiceScrapeSpec that will be added to vlselect VMServiceScrape spec",
              "required": [
                "endpoints"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "serviceSpec": {
              "description": "ServiceSpec that will be added to vlselect service spec",
              "properties": {
                "metadata": {
                  "description": "EmbeddedObjectMetadata defines objectMeta for additional service.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "spec": {
                  "description": "ServiceSpec describes the attributes that a user creates on a service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "useAsDefault": {
                  "description": "UseAsDefault applies changes from given service definition to the main object Service\nChanging from headless service to clusterIP or loadbalancer may break cross-component communication",
                  "type": "boolean"
                }
              },
              "required": [
                "spec"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "startupProbe": {
              "description": "StartupProbe that will be added to CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "syslogSpec": {
              "description": "SyslogSpec defines syslog listener configuration",
              "properties": {
                "tcpListeners": {
                  "description": "TCPListeners defines syslog server TCP listener configuration",
                  "items": {
                    "description": "SyslogTCPListener defines configuration for TCP syslog server listen",
                    "properties": {
                      "compressMethod": {
                        "description": "CompressMethod for syslog messages\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#compression",
                        "pattern": "^(none|zstd|gzip|deflate)$",
                        "type": "string"
                      },
                      "decolorizeFields": {
                        "description": "DecolorizeFields to remove ANSI color codes across logs\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#decolorizing-fields",
                        "type": "string"
                      },
                      "ignoreFields": {
                        "description": "IgnoreFields to ignore at logs\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#dropping-fields",
                        "type": "string"
                      },
                      "listenPort": {
                        "description": "ListenPort defines listen port",
                        "format": "int32",
                        "type": "integer"
                      },
                      "streamFields": {
                        "description": "StreamFields to use as log stream labels\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#stream-fields",
                        "type": "string"
                      },
                      "tenantID": {
                        "description": "TenantID for logs ingested in form of accountID:projectID\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#multiple-configs",
                        "type": "string"
                      },
                      "tlsConfig": {
                        "description": "TLSServerConfig defines VictoriaMetrics TLS configuration for the application's server",
                        "properties": {
                          "certFile": {
                            "description": "CertFile defines path to the pre-mounted file with certificate\nmutually exclusive with CertSecretRef",
                            "type": "string"
                          },
                          "certSecret": {
                            "description": "CertSecretRef defines reference for secret with certificate content under given key\nmutually exclusive with CertFile",
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "default": "",
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "keyFile": {
                            "description": "KeyFile defines path to the pre-mounted file with certificate key\nmutually exclusive with KeySecretRef",
                            "type": "string"
                          },
                          "keySecret": {
                            "description": "Key defines reference for secret with certificate key content under given key\nmutually exclusive with KeyFile",
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "default": "",
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "listenPort"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "udpListeners": {
                  "description": "UDPListeners defines syslog server UDP listener configuration",
                  "items": {
                    "description": "SyslogUDPListener defines configuration for UDP syslog server listen",
                    "properties": {
                      "compressMethod": {
                        "description": "CompressMethod for syslog messages\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#compression",
                        "pattern": "^(none|zstd|gzip|deflate)$",
                        "type": "string"
                      },
                      "decolorizeFields": {
                        "description": "DecolorizeFields to remove ANSI color codes across logs\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#decolorizing-fields",
                        "type": "string"
                      },
                      "ignoreFields": {
                        "description": "IgnoreFields to ignore at logs\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#dropping-fields",
                        "type": "string"
                      },
                      "listenPort": {
                        "description": "ListenPort defines listen port",
                        "format": "int32",
                        "type": "integer"
                      },
                      "streamFields": {
                        "description": "StreamFields to use as log stream labels\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#stream-fields",
                        "type": "string"
                      },
                      "tenantID": {
                        "description": "TenantID for logs ingested in form of accountID:projectID\nsee https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#multiple-configs",
                        "type": "string"
                      }
                    },
                    "required": [
                      "listenPort"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "TerminationGracePeriodSeconds period for container graceful termination",
              "format": "int64",
              "type": "integer"
            },
            "tolerations": {
              "description": "Tolerations If specified, the pod's tolerations.",
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "TopologySpreadConstraints embedded kubernetes pod configuration option,\ncontrols how pods are spread across your cluster among failure-domains\nsuch as regions, zones, nodes, and other user-defined topology domains\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
              "items": {
                "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                "required": [
                  "maxSkew",
                  "topologyKey",
                  "whenUnsatisfiable"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "updateStrategy": {
              "description": "UpdateStrategy - overrides default update strategy.",
              "enum": [
                "Recreate",
                "RollingUpdate"
              ],
              "type": "string"
            },
            "useDefaultResources": {
              "description": "UseDefaultResources controls resource settings\nBy default, operator sets built-in resource requirements",
              "type": "boolean"
            },
            "useStrictSecurity": {
              "description": "UseStrictSecurity enables strict security mode for component\nit restricts disk writes access\nuses non-root user out of the box\ndrops not needed security permissions",
              "type": "boolean"
            },
            "volumeMounts": {
              "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.\nVolumeMounts specified will be appended to other VolumeMounts in the Application container",
              "items": {
                "description": "VolumeMount describes a mounting of a Volume within a container.",
                "properties": {
                  "mountPath": {
                    "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                    "type": "string"
                  },
                  "mountPropagation": {
                    "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                    "type": "string"
                  },
                  "name": {
                    "description": "This must match the Name of a Volume.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                    "type": "boolean"
                  },
                  "recursiveReadOnly": {
                    "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                    "type": "string"
                  },
                  "subPath": {
                    "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                    "type": "string"
                  },
                  "subPathExpr": {
                    "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                    "type": "string"
                  }
                },
                "required": [
                  "mountPath",
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "volumes": {
              "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.\nVolumes specified will be appended to other volumes that are generated.\n/ +optional",
              "items": {
                "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "vlselect": {
          "description": "VLSelect defines vlselect component configuration at victoria-logs cluster",
          "properties": {
            "affinity": {
              "description": "Affinity If specified, the pod's scheduling constraints.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "configMaps": {
              "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application\nobject, which shall be mounted into the Application container\nat /etc/vm/configs/CONFIGMAP_NAME folder",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "containers": {
              "description": "Containers property allows to inject additions sidecars or to patch existing containers.\nIt can be useful for proxies, backup, etc.",
              "items": {
                "description": "A single application container that you want to run within a pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "disableAutomountServiceAccountToken": {
              "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).\nOperator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.\nFor example, vmagent and vm-config-reloader requires k8s API access.\nOperator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed.\nAnd also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
              "type": "boolean"
            },
            "disableSelfServiceScrape": {
              "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator\nfor the application.\nHas priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
              "type": "boolean"
            },
            "dnsConfig": {
              "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
              "items": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "properties": {
                "nameservers": {
                  "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "options": {
                  "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                  "items": {
                    "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                    "properties": {
                      "name": {
                        "description": "Name is this DNS resolver option's name.\nRequired.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is this DNS resolver option's value.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "searches": {
                  "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "dnsPolicy": {
              "description": "DNSPolicy sets DNS policy for the pod",
              "type": "string"
            },
            "extraArgs": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "ExtraArgs that will be passed to the application container\nfor example remoteWrite.tmpDataPath: /tmp",
              "type": "object"
            },
            "extraEnvs": {
              "description": "ExtraEnvs that will be passed to the application container",
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true,
                "additionalProperties": false
              },
              "type": "array"
            },
            "extraEnvsFrom": {
              "description": "ExtraEnvsFrom defines source of env variables for the application container\ncould either be secret or configmap",
              "items": {
                "description": "EnvFromSource represents the source of a set of ConfigMaps",
                "properties": {
                  "configMapRef": {
                    "description": "The ConfigMap to select from",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap must be defined",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "prefix": {
                    "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "The Secret to select from",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret must be defined",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "host_aliases": {
              "description": "HostAliasesUnderScore provides mapping for ip and hostname,\nthat would be propagated to pod,\ncannot be used with HostNetwork.\nHas Priority over hostAliases field",
              "items": {
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                "properties": {
                  "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "hostAliases": {
              "description": "HostAliases provides mapping for ip and hostname,\nthat would be propagated to pod,\ncannot be used with HostNetwork.",
              "items": {
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                "properties": {
                  "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "hostNetwork": {
              "description": "HostNetwork controls whether the pod may use the node network namespace",
              "type": "boolean"
            },
            "hpa": {
              "description": "Configures horizontal pod autoscaling.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "image": {
              "description": "Image - docker image settings\nif no specified operator uses default version from operator config",
              "properties": {
                "pullPolicy": {
                  "description": "PullPolicy describes how to pull docker image",
                  "type": "string"
                },
                "repository": {
                  "description": "Repository contains name of docker image + it's repository if needed",
                  "type": "string"
                },
                "tag": {
                  "description": "Tag contains desired docker image version",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets An optional list of references to secrets in the same namespace\nto use for pulling images from registries\nsee https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
              "items": {
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                "properties": {
                  "name": {
                    "default": "",
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "type": "array"
            },
            "initContainers": {
              "description": "InitContainers allows adding initContainers to the pod definition.\nAny errors during the execution of an initContainer will lead to a restart of the Pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
              "items": {
                "description": "A single application container that you want to run within a pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "livenessProbe": {
              "description": "LivenessProbe that will be added CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "logFormat": {
              "description": "LogFormat for VLSelect to be configured with.\ndefault or json",
              "enum": [
                "default",
                "json"
              ],
              "type": "string"
            },
            "logLevel": {
              "description": "LogLevel for VLSelect to be configured with.",
              "enum": [
                "INFO",
                "WARN",
                "ERROR",
                "FATAL",
                "PANIC"
              ],
              "type": "string"
            },
            "minReadySeconds": {
              "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod\nif previous in healthy state\nHas no effect for VLogs and VMSingle",
              "format": "int32",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
              "type": "object"
            },
            "paused": {
              "description": "Paused If set to true all actions on the underlying managed objects are not\ngoing to be performed, except for delete actions.",
              "type": "boolean"
            },
            "podDisruptionBudget": {
              "description": "PodDisruptionBudget created by operator",
              "properties": {
                "maxUnavailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
                  "x-kubernetes-int-or-string": true
                },
                "minAvailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\".",
                  "x-kubernetes-int-or-string": true
                },
                "selectorLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "replaces default labels selector generated by operator\nit's useful when you need to create custom budget",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "podMetadata": {
              "description": "PodMetadata configures Labels and Annotations which are propagated to the VLSelect pods.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                  "type": "object"
                },
                "name": {
                  "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "port": {
              "description": "Port listen address",
              "type": "string"
            },
            "priorityClassName": {
              "description": "PriorityClassName class assigned to the Pods",
              "type": "string"
            },
            "readinessGates": {
              "description": "ReadinessGates defines pod readiness gates",
              "items": {
                "description": "PodReadinessGate contains the reference to a pod condition",
                "properties": {
                  "conditionType": {
                    "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                    "type": "string"
                  }
                },
                "required": [
                  "conditionType"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "readinessProbe": {
              "description": "ReadinessProbe that will be added CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "replicaCount": {
              "description": "ReplicaCount is the expected size of the Application.",
              "format": "int32",
              "type": "integer"
            },
            "resources": {
              "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\nif not defined default resources from operator config will be used",
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                        "type": "string"
                      },
                      "request": {
                        "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "revisionHistoryLimitCount": {
              "description": "The number of old ReplicaSets to retain to allow rollback in deployment or\nmaximum number of revisions that will be maintained in the Deployment revision history.\nHas no effect at StatefulSets\nDefaults to 10.",
              "format": "int32",
              "type": "integer"
            },
            "rollingUpdate": {
              "description": "RollingUpdate - overrides deployment update params.",
              "properties": {
                "maxSurge": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.",
                  "x-kubernetes-int-or-string": true
                },
                "maxUnavailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "runtimeClassName": {
              "description": "RuntimeClassName - defines runtime class for kubernetes pod.\nhttps://kubernetes.io/docs/concepts/containers/runtime-class/",
              "type": "string"
            },
            "schedulerName": {
              "description": "SchedulerName - defines kubernetes scheduler name",
              "type": "string"
            },
            "secrets": {
              "description": "Secrets is a list of Secrets in the same namespace as the Application\nobject, which shall be mounted into the Application container\nat /etc/vm/secrets/SECRET_NAME folder",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "securityContext": {
              "description": "SecurityContext holds pod-level security attributes and common container settings.\nThis defaults to the default PodSecurityContext.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "serviceScrapeSpec": {
              "description": "ServiceScrapeSpec that will be added to vlselect VMServiceScrape spec",
              "required": [
                "endpoints"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "serviceSpec": {
              "description": "ServiceSpec that will be added to vlselect service spec",
              "properties": {
                "metadata": {
                  "description": "EmbeddedObjectMetadata defines objectMeta for additional service.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "spec": {
                  "description": "ServiceSpec describes the attributes that a user creates on a service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "useAsDefault": {
                  "description": "UseAsDefault applies changes from given service definition to the main object Service\nChanging from headless service to clusterIP or loadbalancer may break cross-component communication",
                  "type": "boolean"
                }
              },
              "required": [
                "spec"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "startupProbe": {
              "description": "StartupProbe that will be added to CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "terminationGracePeriodSeconds": {
              "description": "TerminationGracePeriodSeconds period for container graceful termination",
              "format": "int64",
              "type": "integer"
            },
            "tolerations": {
              "description": "Tolerations If specified, the pod's tolerations.",
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "TopologySpreadConstraints embedded kubernetes pod configuration option,\ncontrols how pods are spread across your cluster among failure-domains\nsuch as regions, zones, nodes, and other user-defined topology domains\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
              "items": {
                "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                "required": [
                  "maxSkew",
                  "topologyKey",
                  "whenUnsatisfiable"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "updateStrategy": {
              "description": "UpdateStrategy - overrides default update strategy.",
              "enum": [
                "Recreate",
                "RollingUpdate"
              ],
              "type": "string"
            },
            "useDefaultResources": {
              "description": "UseDefaultResources controls resource settings\nBy default, operator sets built-in resource requirements",
              "type": "boolean"
            },
            "useStrictSecurity": {
              "description": "UseStrictSecurity enables strict security mode for component\nit restricts disk writes access\nuses non-root user out of the box\ndrops not needed security permissions",
              "type": "boolean"
            },
            "volumeMounts": {
              "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.\nVolumeMounts specified will be appended to other VolumeMounts in the Application container",
              "items": {
                "description": "VolumeMount describes a mounting of a Volume within a container.",
                "properties": {
                  "mountPath": {
                    "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                    "type": "string"
                  },
                  "mountPropagation": {
                    "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                    "type": "string"
                  },
                  "name": {
                    "description": "This must match the Name of a Volume.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                    "type": "boolean"
                  },
                  "recursiveReadOnly": {
                    "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                    "type": "string"
                  },
                  "subPath": {
                    "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                    "type": "string"
                  },
                  "subPathExpr": {
                    "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                    "type": "string"
                  }
                },
                "required": [
                  "mountPath",
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "volumes": {
              "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.\nVolumes specified will be appended to other volumes that are generated.\n/ +optional",
              "items": {
                "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "vlstorage": {
          "description": "VLStorage defines vlstorage component configuration at victoria-logs cluster",
          "properties": {
            "affinity": {
              "description": "Affinity If specified, the pod's scheduling constraints.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "claimTemplates": {
              "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet",
              "items": {
                "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application\nobject, which shall be mounted into the Application container\nat /etc/vm/configs/CONFIGMAP_NAME folder",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "containers": {
              "description": "Containers property allows to inject additions sidecars or to patch existing containers.\nIt can be useful for proxies, backup, etc.",
              "items": {
                "description": "A single application container that you want to run within a pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "disableAutomountServiceAccountToken": {
              "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).\nOperator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.\nFor example, vmagent and vm-config-reloader requires k8s API access.\nOperator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed.\nAnd also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
              "type": "boolean"
            },
            "disableSelfServiceScrape": {
              "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator\nfor the application.\nHas priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
              "type": "boolean"
            },
            "dnsConfig": {
              "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
              "items": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "properties": {
                "nameservers": {
                  "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "options": {
                  "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                  "items": {
                    "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                    "properties": {
                      "name": {
                        "description": "Name is this DNS resolver option's name.\nRequired.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is this DNS resolver option's value.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "searches": {
                  "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "dnsPolicy": {
              "description": "DNSPolicy sets DNS policy for the pod",
              "type": "string"
            },
            "extraArgs": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "ExtraArgs that will be passed to the application container\nfor example remoteWrite.tmpDataPath: /tmp",
              "type": "object"
            },
            "extraEnvs": {
              "description": "ExtraEnvs that will be passed to the application container",
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true,
                "additionalProperties": false
              },
              "type": "array"
            },
            "extraEnvsFrom": {
              "description": "ExtraEnvsFrom defines source of env variables for the application container\ncould either be secret or configmap",
              "items": {
                "description": "EnvFromSource represents the source of a set of ConfigMaps",
                "properties": {
                  "configMapRef": {
                    "description": "The ConfigMap to select from",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap must be defined",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "prefix": {
                    "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "The Secret to select from",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret must be defined",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "futureRetention": {
              "description": "FutureRetention for the stored logs\nLog entries with timestamps bigger than now+futureRetention are rejected during data ingestion; see https://docs.victoriametrics.com/victorialogs/#retention",
              "pattern": "^[0-9]+(h|d|w|y)?$",
              "type": "string"
            },
            "host_aliases": {
              "description": "HostAliasesUnderScore provides mapping for ip and hostname,\nthat would be propagated to pod,\ncannot be used with HostNetwork.\nHas Priority over hostAliases field",
              "items": {
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                "properties": {
                  "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "hostAliases": {
              "description": "HostAliases provides mapping for ip and hostname,\nthat would be propagated to pod,\ncannot be used with HostNetwork.",
              "items": {
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                "properties": {
                  "hostnames": {
                    "description": "Hostnames for the above IP address.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "description": "IP address of the host file entry.",
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "hostNetwork": {
              "description": "HostNetwork controls whether the pod may use the node network namespace",
              "type": "boolean"
            },
            "image": {
              "description": "Image - docker image settings\nif no specified operator uses default version from operator config",
              "properties": {
                "pullPolicy": {
                  "description": "PullPolicy describes how to pull docker image",
                  "type": "string"
                },
                "repository": {
                  "description": "Repository contains name of docker image + it's repository if needed",
                  "type": "string"
                },
                "tag": {
                  "description": "Tag contains desired docker image version",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "imagePullSecrets": {
              "description": "ImagePullSecrets An optional list of references to secrets in the same namespace\nto use for pulling images from registries\nsee https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
              "items": {
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                "properties": {
                  "name": {
                    "default": "",
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "type": "array"
            },
            "initContainers": {
              "description": "InitContainers allows adding initContainers to the pod definition.\nAny errors during the execution of an initContainer will lead to a restart of the Pod.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
              "items": {
                "description": "A single application container that you want to run within a pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "livenessProbe": {
              "description": "LivenessProbe that will be added CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "logFormat": {
              "description": "LogFormat for VLStorage to be configured with.\ndefault or json",
              "enum": [
                "default",
                "json"
              ],
              "type": "string"
            },
            "logIngestedRows": {
              "description": "Whether to log all the ingested log entries; this can be useful for debugging of data ingestion; see https://docs.victoriametrics.com/victorialogs/data-ingestion/",
              "type": "boolean"
            },
            "logLevel": {
              "description": "LogLevel for VLStorage to be configured with.",
              "enum": [
                "INFO",
                "WARN",
                "ERROR",
                "FATAL",
                "PANIC"
              ],
              "type": "string"
            },
            "logNewStreams": {
              "description": "LogNewStreams Whether to log creation of new streams; this can be useful for debugging of high cardinality issues with log streams; see https://docs.victoriametrics.com/victorialogs/keyconcepts/#stream-fields",
              "type": "boolean"
            },
            "maintenanceInsertNodeIDs": {
              "description": "MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.\nlets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3].\nUseful at storage expanding, when you want to rebalance some data at cluster.",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            },
            "maintenanceSelectNodeIDs": {
              "description": "MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.",
              "items": {
                "format": "int32",
                "type": "integer"
              },
              "type": "array"
            },
            "minReadySeconds": {
              "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod\nif previous in healthy state\nHas no effect for VLogs and VMSingle",
              "format": "int32",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
              "type": "object"
            },
            "paused": {
              "description": "Paused If set to true all actions on the underlying managed objects are not\ngoing to be performed, except for delete actions.",
              "type": "boolean"
            },
            "podDisruptionBudget": {
              "description": "PodDisruptionBudget created by operator",
              "properties": {
                "maxUnavailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
                  "x-kubernetes-int-or-string": true
                },
                "minAvailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\".",
                  "x-kubernetes-int-or-string": true
                },
                "selectorLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "replaces default labels selector generated by operator\nit's useful when you need to create custom budget",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "podMetadata": {
              "description": "PodMetadata configures Labels and Annotations which are propagated to the VLStorage pods.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                  "type": "object"
                },
                "name": {
                  "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "port": {
              "description": "Port listen address",
              "type": "string"
            },
            "priorityClassName": {
              "description": "PriorityClassName class assigned to the Pods",
              "type": "string"
            },
            "readinessGates": {
              "description": "ReadinessGates defines pod readiness gates",
              "items": {
                "description": "PodReadinessGate contains the reference to a pod condition",
                "properties": {
                  "conditionType": {
                    "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                    "type": "string"
                  }
                },
                "required": [
                  "conditionType"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "readinessProbe": {
              "description": "ReadinessProbe that will be added CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "replicaCount": {
              "description": "ReplicaCount is the expected size of the Application.",
              "format": "int32",
              "type": "integer"
            },
            "resources": {
              "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\nif not defined default resources from operator config will be used",
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                        "type": "string"
                      },
                      "request": {
                        "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "retentionMaxDiskSpaceUsageBytes": {
              "description": "RetentionMaxDiskSpaceUsageBytes for the stored logs\nVictoriaLogs keeps at least two last days of data in order to guarantee that the logs for the last day can be returned in queries.\nThis means that the total disk space usage may exceed the -retention.maxDiskSpaceUsageBytes,\nif the size of the last two days of data exceeds the -retention.maxDiskSpaceUsageBytes.\nhttps://docs.victoriametrics.com/victorialogs/#retention-by-disk-space-usage",
              "type": "string"
            },
            "retentionPeriod": {
              "description": "RetentionPeriod for the stored logs\nhttps://docs.victoriametrics.com/victorialogs/#retention",
              "pattern": "^[0-9]+(h|d|w|y)?$",
              "type": "string"
            },
            "revisionHistoryLimitCount": {
              "description": "The number of old ReplicaSets to retain to allow rollback in deployment or\nmaximum number of revisions that will be maintained in the Deployment revision history.\nHas no effect at StatefulSets\nDefaults to 10.",
              "format": "int32",
              "type": "integer"
            },
            "rollingUpdateStrategy": {
              "description": "RollingUpdateStrategy defines strategy for application updates\nDefault is OnDelete, in this case operator handles update process\nCan be changed for RollingUpdate",
              "type": "string"
            },
            "runtimeClassName": {
              "description": "RuntimeClassName - defines runtime class for kubernetes pod.\nhttps://kubernetes.io/docs/concepts/containers/runtime-class/",
              "type": "string"
            },
            "schedulerName": {
              "description": "SchedulerName - defines kubernetes scheduler name",
              "type": "string"
            },
            "secrets": {
              "description": "Secrets is a list of Secrets in the same namespace as the Application\nobject, which shall be mounted into the Application container\nat /etc/vm/secrets/SECRET_NAME folder",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "securityContext": {
              "description": "SecurityContext holds pod-level security attributes and common container settings.\nThis defaults to the default PodSecurityContext.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "serviceScrapeSpec": {
              "description": "ServiceScrapeSpec that will be added to vlselect VMServiceScrape spec",
              "required": [
                "endpoints"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "serviceSpec": {
              "description": "ServiceSpec that will be added to vlselect service spec",
              "properties": {
                "metadata": {
                  "description": "EmbeddedObjectMetadata defines objectMeta for additional service.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "spec": {
                  "description": "ServiceSpec describes the attributes that a user creates on a service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "useAsDefault": {
                  "description": "UseAsDefault applies changes from given service definition to the main object Service\nChanging from headless service to clusterIP or loadbalancer may break cross-component communication",
                  "type": "boolean"
                }
              },
              "required": [
                "spec"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "startupProbe": {
              "description": "StartupProbe that will be added to CRD pod",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "storage": {
              "description": "Storage configures persistent volume for VLStorage",
              "properties": {
                "disableMountSubPath": {
                  "description": "Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.\nDisableMountSubPath allows to remove any subPath usage in volume mounts.",
                  "type": "boolean"
                },
                "emptyDir": {
                  "description": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More\ninfo: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
                  "properties": {
                    "medium": {
                      "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                      "type": "string"
                    },
                    "sizeLimit": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "volumeClaimTemplate": {
                  "description": "A PVC spec to be used by the VMAlertManager StatefulSets.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storageDataPath": {
              "description": "StorageDataPath - path to storage data",
              "type": "string"
            },
            "terminationGracePeriodSeconds": {
              "description": "TerminationGracePeriodSeconds period for container graceful termination",
              "format": "int64",
              "type": "integer"
            },
            "tolerations": {
              "description": "Tolerations If specified, the pod's tolerations.",
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "topologySpreadConstraints": {
              "description": "TopologySpreadConstraints embedded kubernetes pod configuration option,\ncontrols how pods are spread across your cluster among failure-domains\nsuch as regions, zones, nodes, and other user-defined topology domains\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
              "items": {
                "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                "required": [
                  "maxSkew",
                  "topologyKey",
                  "whenUnsatisfiable"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            },
            "useDefaultResources": {
              "description": "UseDefaultResources controls resource settings\nBy default, operator sets built-in resource requirements",
              "type": "boolean"
            },
            "useStrictSecurity": {
              "description": "UseStrictSecurity enables strict security mode for component\nit restricts disk writes access\nuses non-root user out of the box\ndrops not needed security permissions",
              "type": "boolean"
            },
            "volumeMounts": {
              "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.\nVolumeMounts specified will be appended to other VolumeMounts in the Application container",
              "items": {
                "description": "VolumeMount describes a mounting of a Volume within a container.",
                "properties": {
                  "mountPath": {
                    "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                    "type": "string"
                  },
                  "mountPropagation": {
                    "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                    "type": "string"
                  },
                  "name": {
                    "description": "This must match the Name of a Volume.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                    "type": "boolean"
                  },
                  "recursiveReadOnly": {
                    "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                    "type": "string"
                  },
                  "subPath": {
                    "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                    "type": "string"
                  },
                  "subPathExpr": {
                    "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                    "type": "string"
                  }
                },
                "required": [
                  "mountPath",
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "volumes": {
              "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.\nVolumes specified will be appended to other volumes that are generated.\n/ +optional",
              "items": {
                "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                "required": [
                  "name"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "VLClusterStatus defines the observed state of VLCluster",
      "properties": {
        "conditions": {
          "description": "Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"",
          "items": {
            "description": "Condition defines status condition of the resource",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "lastUpdateTime": {
                "description": "LastUpdateTime is the last time of given type update.\nThis value is used for status TTL update and removal",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.",
                "maxLength": 316,
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "lastUpdateTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the\nreconcile",
          "format": "int64",
          "type": "integer"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
