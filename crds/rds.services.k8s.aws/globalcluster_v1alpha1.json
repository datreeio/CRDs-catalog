{
  "description": "GlobalCluster is the Schema for the GlobalClusters API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GlobalClusterSpec defines the desired state of GlobalCluster. \n A data type representing an Aurora global database.",
      "properties": {
        "databaseName": {
          "description": "The name for your database of up to 64 alphanumeric characters. If you do not provide a name, Amazon Aurora will not create a database in the global database cluster you are creating.",
          "type": "string"
        },
        "deletionProtection": {
          "description": "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.",
          "type": "boolean"
        },
        "engine": {
          "description": "The name of the database engine to be used for this DB cluster.",
          "type": "string"
        },
        "engineVersion": {
          "description": "The engine version of the Aurora global database.",
          "type": "string"
        },
        "globalClusterIdentifier": {
          "description": "The cluster identifier of the new global database cluster.",
          "type": "string"
        },
        "sourceDBClusterIdentifier": {
          "description": "The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional.",
          "type": "string"
        },
        "storageEncrypted": {
          "description": "The storage encryption setting for the new global database cluster.",
          "type": "boolean"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "GlobalClusterStatus defines the observed state of GlobalCluster",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "failoverState": {
          "description": "A data object containing all properties for the current state of an in-process or pending failover process for this Aurora global database. This object is empty unless the FailoverGlobalCluster API operation has been called on this Aurora global database (GlobalCluster).",
          "properties": {
            "fromDBClusterARN": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "toDBClusterARN": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "globalClusterMembers": {
          "description": "The list of primary and secondary clusters within the global database cluster.",
          "items": {
            "description": "A data structure with information about any primary and secondary clusters associated with an Aurora global database.",
            "properties": {
              "dbClusterARN": {
                "type": "string"
              },
              "globalWriteForwardingStatus": {
                "type": "string"
              },
              "isWriter": {
                "type": "boolean"
              },
              "readers": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "globalClusterResourceID": {
          "description": "The Amazon Web Services Region-unique, immutable identifier for the global database cluster. This identifier is found in Amazon Web Services CloudTrail log entries whenever the Amazon Web Services KMS key for the DB cluster is accessed.",
          "type": "string"
        },
        "status": {
          "description": "Specifies the current state of this global database cluster.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
