{
  "description": "ProcessingJob is the Schema for the ProcessingJobs API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ProcessingJobSpec defines the desired state of ProcessingJob. \n An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see Process Data and Evaluate Models (https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html).",
      "properties": {
        "appSpecification": {
          "description": "Configures the processing job to run a specified Docker container image.",
          "properties": {
            "containerArguments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "containerEntrypoint": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "imageURI": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "environment": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The environment variables to set in the Docker container. Up to 100 key and values entries in the map are supported.",
          "type": "object"
        },
        "experimentConfig": {
          "description": "Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs: \n - CreateProcessingJob \n - CreateTrainingJob \n - CreateTransformJob",
          "properties": {
            "experimentName": {
              "type": "string"
            },
            "trialComponentDisplayName": {
              "type": "string"
            },
            "trialName": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "networkConfig": {
          "description": "Networking options for a processing job, such as whether to allow inbound and outbound network calls to and from processing containers, and the VPC subnets and security groups to use for VPC-enabled processing jobs.",
          "properties": {
            "enableInterContainerTrafficEncryption": {
              "type": "boolean"
            },
            "enableNetworkIsolation": {
              "type": "boolean"
            },
            "vpcConfig": {
              "description": "Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html).",
              "properties": {
                "securityGroupIDs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "subnets": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "processingInputs": {
          "description": "An array of inputs configuring the data to download into the processing container.",
          "items": {
            "description": "The inputs for a processing job. The processing input must specify exactly one of either S3Input or DatasetDefinition types.",
            "properties": {
              "appManaged": {
                "type": "boolean"
              },
              "datasetDefinition": {
                "description": "Configuration for Dataset Definition inputs. The Dataset Definition input must specify exactly one of either AthenaDatasetDefinition or RedshiftDatasetDefinition types.",
                "properties": {
                  "athenaDatasetDefinition": {
                    "description": "Configuration for Athena Dataset Definition input.",
                    "properties": {
                      "catalog": {
                        "description": "The name of the data catalog used in Athena query execution.",
                        "type": "string"
                      },
                      "database": {
                        "description": "The name of the database used in the Athena query execution.",
                        "type": "string"
                      },
                      "kmsKeyID": {
                        "type": "string"
                      },
                      "outputCompression": {
                        "description": "The compression used for Athena query results.",
                        "type": "string"
                      },
                      "outputFormat": {
                        "description": "The data storage format for Athena query results.",
                        "type": "string"
                      },
                      "outputS3URI": {
                        "type": "string"
                      },
                      "queryString": {
                        "description": "The SQL query statements, to be executed.",
                        "type": "string"
                      },
                      "workGroup": {
                        "description": "The name of the workgroup in which the Athena query is being started.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "dataDistributionType": {
                    "type": "string"
                  },
                  "inputMode": {
                    "type": "string"
                  },
                  "localPath": {
                    "type": "string"
                  },
                  "redshiftDatasetDefinition": {
                    "description": "Configuration for Redshift Dataset Definition input.",
                    "properties": {
                      "clusterID": {
                        "description": "The Redshift cluster Identifier.",
                        "type": "string"
                      },
                      "clusterRoleARN": {
                        "type": "string"
                      },
                      "database": {
                        "description": "The name of the Redshift database used in Redshift query execution.",
                        "type": "string"
                      },
                      "dbUser": {
                        "description": "The database user name used in Redshift query execution.",
                        "type": "string"
                      },
                      "kmsKeyID": {
                        "type": "string"
                      },
                      "outputCompression": {
                        "description": "The compression used for Redshift query results.",
                        "type": "string"
                      },
                      "outputFormat": {
                        "description": "The data storage format for Redshift query results.",
                        "type": "string"
                      },
                      "outputS3URI": {
                        "type": "string"
                      },
                      "queryString": {
                        "description": "The SQL query statements to be executed.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "inputName": {
                "type": "string"
              },
              "s3Input": {
                "description": "Configuration for downloading input data from Amazon S3 into the processing container.",
                "properties": {
                  "localPath": {
                    "type": "string"
                  },
                  "s3CompressionType": {
                    "type": "string"
                  },
                  "s3DataDistributionType": {
                    "type": "string"
                  },
                  "s3DataType": {
                    "type": "string"
                  },
                  "s3InputMode": {
                    "type": "string"
                  },
                  "s3URI": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "processingJobName": {
          "description": "The name of the processing job. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.",
          "type": "string"
        },
        "processingOutputConfig": {
          "description": "Output configuration for the processing job.",
          "properties": {
            "kmsKeyID": {
              "type": "string"
            },
            "outputs": {
              "items": {
                "description": "Describes the results of a processing job. The processing output must specify exactly one of either S3Output or FeatureStoreOutput types.",
                "properties": {
                  "appManaged": {
                    "type": "boolean"
                  },
                  "featureStoreOutput": {
                    "description": "Configuration for processing job outputs in Amazon SageMaker Feature Store.",
                    "properties": {
                      "featureGroupName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "outputName": {
                    "type": "string"
                  },
                  "s3Output": {
                    "description": "Configuration for uploading output data to Amazon S3 from the processing container.",
                    "properties": {
                      "localPath": {
                        "type": "string"
                      },
                      "s3URI": {
                        "type": "string"
                      },
                      "s3UploadMode": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "processingResources": {
          "description": "Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.",
          "properties": {
            "clusterConfig": {
              "description": "Configuration for the cluster used to run a processing job.",
              "properties": {
                "instanceCount": {
                  "format": "int64",
                  "type": "integer"
                },
                "instanceType": {
                  "type": "string"
                },
                "volumeKMSKeyID": {
                  "type": "string"
                },
                "volumeSizeInGB": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "roleARN": {
          "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.",
          "type": "string"
        },
        "stoppingCondition": {
          "description": "The time limit for how long the processing job is allowed to run.",
          "properties": {
            "maxRuntimeInSeconds": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "description": "(Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the Amazon Web Services Billing and Cost Management User Guide.",
          "items": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources. \n You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see AddTags. \n For more information on adding metadata to your Amazon Web Services resources with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). For advice on best practices for managing Amazon Web Services resources with tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "appSpecification",
        "processingJobName",
        "processingResources",
        "roleARN"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ProcessingJobStatus defines the observed state of ProcessingJob",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "failureReason": {
          "description": "A string, up to one KB in size, that contains the reason a processing job failed, if it failed.",
          "type": "string"
        },
        "processingJobStatus": {
          "description": "Provides the status of a processing job.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
