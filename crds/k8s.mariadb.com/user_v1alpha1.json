{
  "description": "User is the Schema for the users API.  It is used to define grants as if you were running a 'CREATE USER' statement.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "UserSpec defines the desired state of User",
      "properties": {
        "cleanupPolicy": {
          "description": "CleanupPolicy defines the behavior for cleaning up a SQL resource.",
          "enum": [
            "Skip",
            "Delete"
          ],
          "type": "string"
        },
        "host": {
          "description": "Host related to the User.",
          "maxLength": 255,
          "type": "string"
        },
        "mariaDbRef": {
          "description": "MariaDBRef is a reference to a MariaDB object.",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "waitForIt": {
              "default": true,
              "description": "WaitForIt indicates whether the controller using this reference should wait for MariaDB to be ready.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "maxUserConnections": {
          "default": 10,
          "description": "MaxUserConnections defines the maximum number of simultaneous connections that the User can establish.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "Name overrides the default name provided by metadata.name.",
          "maxLength": 80,
          "type": "string"
        },
        "passwordHashSecretKeyRef": {
          "description": "PasswordHashSecretKeyRef is a reference to the password hash to be used by the User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password hash.",
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "default": "",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "passwordPlugin": {
          "description": "PasswordPlugin is a reference to the password plugin and arguments to be used by the User.",
          "properties": {
            "pluginArgSecretKeyRef": {
              "description": "PluginArgSecretKeyRef is a reference to the arguments to be provided to the authentication plugin for the User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the authentication plugin arguments.",
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "pluginNameSecretKeyRef": {
              "description": "PluginNameSecretKeyRef is a reference to the authentication plugin to be used by the User.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the authentication plugin.",
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "passwordSecretKeyRef": {
          "description": "PasswordSecretKeyRef is a reference to the password to be used by the User.\nIf not provided, the account will be locked and the password will expire.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "default": "",
              "type": "string"
            }
          },
          "required": [
            "key"
          ],
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "requeueInterval": {
          "description": "RequeueInterval is used to perform requeue reconciliations.",
          "type": "string"
        },
        "require": {
          "description": "Require specifies TLS requirements for the user to connect. See: https://mariadb.com/kb/en/securing-connections-for-client-and-server/#requiring-tls.",
          "properties": {
            "issuer": {
              "description": "Issuer indicates that the TLS certificate provided by the user must be issued by a specific issuer.",
              "type": "string"
            },
            "ssl": {
              "description": "SSL indicates that the user must connect via TLS.",
              "type": "boolean"
            },
            "subject": {
              "description": "Subject indicates that the TLS certificate provided by the user must have a specific subject.",
              "type": "string"
            },
            "x509": {
              "description": "X509 indicates that the user must provide a valid x509 certificate to connect.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "retryInterval": {
          "description": "RetryInterval is the interval used to perform retries.",
          "type": "string"
        }
      },
      "required": [
        "mariaDbRef"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "UserStatus defines the observed state of User",
      "properties": {
        "conditions": {
          "description": "Conditions for the User object.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
