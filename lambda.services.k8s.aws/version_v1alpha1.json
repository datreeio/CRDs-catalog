{
  "description": "Version is the Schema for the Versions API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "codeSHA256": {
          "description": "Only publish a version if the hash value matches the value that's specified.\nUse this option to avoid publishing a version if the function code has changed\nsince you last updated it. You can get the hash for the version that you\nuploaded from the output of UpdateFunctionCode.",
          "type": "string"
        },
        "description": {
          "description": "A description for the version to override the description in the function\nconfiguration.",
          "type": "string"
        },
        "functionEventInvokeConfig": {
          "properties": {
            "destinationConfig": {
              "description": "A configuration object that specifies the destination of an event after Lambda\nprocesses it.",
              "properties": {
                "onFailure": {
                  "description": "A destination for events that failed processing.",
                  "properties": {
                    "destination": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "onSuccess": {
                  "description": "A destination for events that were processed successfully.\n\nTo retain records of successful asynchronous invocations (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations),\nyou can configure an Amazon SNS topic, Amazon SQS queue, Lambda function,\nor Amazon EventBridge event bus as the destination.",
                  "properties": {
                    "destination": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "functionName": {
              "type": "string"
            },
            "maximumEventAgeInSeconds": {
              "format": "int64",
              "type": "integer"
            },
            "maximumRetryAttempts": {
              "format": "int64",
              "type": "integer"
            },
            "qualifier": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "functionName": {
          "description": "The name or ARN of the Lambda function.\n\nName formats\n\n  - Function name - MyFunction.\n\n  - Function ARN - arn:aws:lambda:us-west-2:123456789012:function:MyFunction.\n\n  - Partial ARN - 123456789012:function:MyFunction.\n\nThe length constraint applies only to the full ARN. If you specify only the\nfunction name, it is limited to 64 characters in length.",
          "type": "string"
        },
        "functionRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "provisionedConcurrencyConfig": {
          "properties": {
            "functionName": {
              "type": "string"
            },
            "provisionedConcurrentExecutions": {
              "format": "int64",
              "type": "integer"
            },
            "qualifier": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "revisionID": {
          "description": "Only update the function if the revision ID matches the ID that's specified.\nUse this option to avoid publishing a version if the function configuration\nhas changed since you last updated it.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "VersionStatus defines the observed state of Version",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "architectures": {
          "description": "The instruction set architecture that the function supports. Architecture\nis a string array with one of the valid values. The default architecture\nvalue is x86_64.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "codeSize": {
          "description": "The size of the function's deployment package, in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "deadLetterConfig": {
          "description": "The function's dead letter queue.",
          "properties": {
            "targetARN": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "environment": {
          "description": "The function's environment variables (https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html).\nOmitted from CloudTrail logs.",
          "properties": {
            "error": {
              "description": "Error messages for environment variables that couldn't be applied.",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "variables": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ephemeralStorage": {
          "description": "The size of the function's /tmp directory in MB. The default value is 512,\nbut can be any whole number between 512 and 10,240 MB. For more information,\nsee Configuring ephemeral storage (console) (https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-ephemeral-storage).",
          "properties": {
            "size": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "fileSystemConfigs": {
          "description": "Connection settings for an Amazon EFS file system (https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html).",
          "items": {
            "description": "Details about the connection between a Lambda function and an Amazon EFS\nfile system (https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html).",
            "properties": {
              "arn": {
                "type": "string"
              },
              "localMountPath": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "functionARN": {
          "description": "The function's Amazon Resource Name (ARN).",
          "type": "string"
        },
        "handler": {
          "description": "The function that Lambda calls to begin running your function.",
          "type": "string"
        },
        "imageConfigResponse": {
          "description": "The function's image configuration values.",
          "properties": {
            "error": {
              "description": "Error response to GetFunctionConfiguration.",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "imageConfig": {
              "description": "Configuration values that override the container image Dockerfile settings.\nFor more information, see Container image settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).",
              "properties": {
                "command": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "entryPoint": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "workingDirectory": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "kmsKeyARN": {
          "description": "The ARN of the Key Management Service (KMS) customer managed key that's used\nto encrypt the following resources:\n\n   * The function's environment variables (https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption).\n\n   * The function's Lambda SnapStart (https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html)\n   snapshots.\n\n   * When used with SourceKMSKeyArn, the unzipped version of the .zip deployment\n   package that's used for function invocations. For more information, see\n   Specifying a customer managed key for Lambda (https://docs.aws.amazon.com/lambda/latest/dg/encrypt-zip-package.html#enable-zip-custom-encryption).\n\n   * The optimized version of the container image that's used for function\n   invocations. Note that this is not the same key that's used to protect\n   your container image in the Amazon Elastic Container Registry (Amazon\n   ECR). For more information, see Function lifecycle (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-lifecycle).\n\nIf you don't provide a customer managed key, Lambda uses an Amazon Web Services\nowned key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-owned-cmk)\nor an Amazon Web Services managed key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk).",
          "type": "string"
        },
        "lastModified": {
          "description": "The date and time that the function was last updated, in ISO-8601 format\n(https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).",
          "type": "string"
        },
        "lastUpdateStatus": {
          "description": "The status of the last update that was performed on the function. This is\nfirst set to Successful after function creation completes.",
          "type": "string"
        },
        "lastUpdateStatusReason": {
          "description": "The reason for the last update that was performed on the function.",
          "type": "string"
        },
        "lastUpdateStatusReasonCode": {
          "description": "The reason code for the last update that was performed on the function.",
          "type": "string"
        },
        "layers": {
          "description": "The function's layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).",
          "items": {
            "description": "An Lambda layer (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).",
            "properties": {
              "arn": {
                "type": "string"
              },
              "codeSize": {
                "format": "int64",
                "type": "integer"
              },
              "signingJobARN": {
                "type": "string"
              },
              "signingProfileVersionARN": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "masterARN": {
          "description": "For Lambda@Edge functions, the ARN of the main function.",
          "type": "string"
        },
        "memorySize": {
          "description": "The amount of memory available to the function at runtime.",
          "format": "int64",
          "type": "integer"
        },
        "packageType": {
          "description": "The type of deployment package. Set to Image for container image and set\nZip for .zip file archive.",
          "type": "string"
        },
        "qualifier": {
          "description": "The version of the Lambda function.",
          "type": "string"
        },
        "role": {
          "description": "The function's execution role.",
          "type": "string"
        },
        "runtime": {
          "description": "The identifier of the function's runtime (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html).\nRuntime is required if the deployment package is a .zip file archive. Specifying\na runtime results in an error if you're deploying a function using a container\nimage.\n\nThe following list includes deprecated runtimes. Lambda blocks creating new\nfunctions and updating existing functions shortly after each runtime is deprecated.\nFor more information, see Runtime use after deprecation (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-deprecation-levels).\n\nFor a list of all currently supported runtimes, see Supported runtimes (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtimes-supported).",
          "type": "string"
        },
        "signingJobARN": {
          "description": "The ARN of the signing job.",
          "type": "string"
        },
        "signingProfileVersionARN": {
          "description": "The ARN of the signing profile version.",
          "type": "string"
        },
        "snapStart": {
          "description": "Set ApplyOn to PublishedVersions to create a snapshot of the initialized\nexecution environment when you publish a function version. For more information,\nsee Improving startup performance with Lambda SnapStart (https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html).",
          "properties": {
            "applyOn": {
              "type": "string"
            },
            "optimizationStatus": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "state": {
          "description": "The current state of the function. When the state is Inactive, you can reactivate\nthe function by invoking it.",
          "type": "string"
        },
        "stateReason": {
          "description": "The reason for the function's current state.",
          "type": "string"
        },
        "stateReasonCode": {
          "description": "The reason code for the function's current state. When the code is Creating,\nyou can't invoke or modify the function.",
          "type": "string"
        },
        "timeout": {
          "description": "The amount of time in seconds that Lambda allows a function to run before\nstopping it.",
          "format": "int64",
          "type": "integer"
        },
        "tracingConfig": {
          "description": "The function's X-Ray tracing configuration.",
          "properties": {
            "mode": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "version": {
          "description": "The version of the Lambda function.",
          "type": "string"
        },
        "vpcConfig": {
          "description": "The function's networking configuration.",
          "properties": {
            "ipv6AllowedForDualStack": {
              "type": "boolean"
            },
            "securityGroupIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "subnetIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "vpcID": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
