{
  "description": "Route is the Schema for the Routes API. Provides an AWS App Mesh route resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "RouteSpec defines the desired state of Route",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshNameRef": {
              "description": "Reference to a Mesh in appmesh to populate meshName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "meshNameSelector": {
              "description": "Selector for a Mesh in appmesh to populate meshName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "spec": {
              "description": "Route specification to apply.",
              "properties": {
                "grpcRoute": {
                  "description": "GRPC routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "metadata": {
                          "description": "Data to match from the gRPC request.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "methodName": {
                          "description": "Method name to match from the request. If you specify a name, you must also specify a service_name.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "serviceName": {
                          "description": "Fully qualified domain name for the service to match from the request.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "grpcRetryEvents": {
                          "description": "List of gRPC retry events.\nValid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "http2Route": {
                  "description": "HTTP/2 routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "header": {
                          "description": "Client request headers to match on.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "method": {
                          "description": "Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Client request path to match on.",
                          "properties": {
                            "exact": {
                              "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            },
                            "regex": {
                              "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "queryParameter": {
                          "description": "Client request query parameters to match on.",
                          "items": {
                            "properties": {
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "scheme": {
                          "description": "Client request header scheme to match on. Valid values: http, https.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "httpRoute": {
                  "description": "HTTP routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "virtualNodeRef": {
                                "description": "Reference to a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "virtualNodeSelector": {
                                "description": "Selector for a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "header": {
                          "description": "Client request headers to match on.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "method": {
                          "description": "Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Client request path to match on.",
                          "properties": {
                            "exact": {
                              "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            },
                            "regex": {
                              "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "queryParameter": {
                          "description": "Client request query parameters to match on.",
                          "items": {
                            "properties": {
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "scheme": {
                          "description": "Client request header scheme to match on. Valid values: http, https.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "priority": {
                  "description": "Priority for the route, between 0 and 1000.\nRoutes are matched based on the specified value, where 0 is the highest priority.",
                  "type": "number"
                },
                "tcpRoute": {
                  "description": "TCP routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "virtualNodeRef": {
                                "description": "Reference to a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "virtualNodeSelector": {
                                "description": "Selector for a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "virtualRouterName": {
              "description": "Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "virtualRouterNameRef": {
              "description": "Reference to a VirtualRouter in appmesh to populate virtualRouterName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "virtualRouterNameSelector": {
              "description": "Selector for a VirtualRouter in appmesh to populate virtualRouterName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshNameRef": {
              "description": "Reference to a Mesh in appmesh to populate meshName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "meshNameSelector": {
              "description": "Selector for a Mesh in appmesh to populate meshName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "spec": {
              "description": "Route specification to apply.",
              "properties": {
                "grpcRoute": {
                  "description": "GRPC routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "metadata": {
                          "description": "Data to match from the gRPC request.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "methodName": {
                          "description": "Method name to match from the request. If you specify a name, you must also specify a service_name.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "serviceName": {
                          "description": "Fully qualified domain name for the service to match from the request.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "grpcRetryEvents": {
                          "description": "List of gRPC retry events.\nValid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "http2Route": {
                  "description": "HTTP/2 routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "header": {
                          "description": "Client request headers to match on.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "method": {
                          "description": "Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Client request path to match on.",
                          "properties": {
                            "exact": {
                              "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            },
                            "regex": {
                              "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "queryParameter": {
                          "description": "Client request query parameters to match on.",
                          "items": {
                            "properties": {
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "scheme": {
                          "description": "Client request header scheme to match on. Valid values: http, https.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "httpRoute": {
                  "description": "HTTP routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "virtualNodeRef": {
                                "description": "Reference to a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "virtualNodeSelector": {
                                "description": "Selector for a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "header": {
                          "description": "Client request headers to match on.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "method": {
                          "description": "Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Client request path to match on.",
                          "properties": {
                            "exact": {
                              "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            },
                            "regex": {
                              "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "queryParameter": {
                          "description": "Client request query parameters to match on.",
                          "items": {
                            "properties": {
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "scheme": {
                          "description": "Client request header scheme to match on. Valid values: http, https.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "priority": {
                  "description": "Priority for the route, between 0 and 1000.\nRoutes are matched based on the specified value, where 0 is the highest priority.",
                  "type": "number"
                },
                "tcpRoute": {
                  "description": "TCP routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "virtualNodeRef": {
                                "description": "Reference to a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "virtualNodeSelector": {
                                "description": "Selector for a VirtualNode in appmesh to populate virtualNode.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "virtualRouterName": {
              "description": "Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "virtualRouterNameRef": {
              "description": "Reference to a VirtualRouter in appmesh to populate virtualRouterName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "virtualRouterNameSelector": {
              "description": "Selector for a VirtualRouter in appmesh to populate virtualRouterName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        },
        {
          "message": "spec.forProvider.spec is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.spec) || (has(self.initProvider) && has(self.initProvider.spec))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "RouteStatus defines the observed state of Route.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "ARN of the route.",
              "type": "string"
            },
            "createdDate": {
              "description": "Creation date of the route.",
              "type": "string"
            },
            "id": {
              "description": "ID of the route.",
              "type": "string"
            },
            "lastUpdatedDate": {
              "description": "Last update date of the route.",
              "type": "string"
            },
            "meshName": {
              "description": "Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "resourceOwner": {
              "description": "Resource owner's AWS account ID.",
              "type": "string"
            },
            "spec": {
              "description": "Route specification to apply.",
              "properties": {
                "grpcRoute": {
                  "description": "GRPC routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "metadata": {
                          "description": "Data to match from the gRPC request.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "methodName": {
                          "description": "Method name to match from the request. If you specify a name, you must also specify a service_name.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "serviceName": {
                          "description": "Fully qualified domain name for the service to match from the request.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "grpcRetryEvents": {
                          "description": "List of gRPC retry events.\nValid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "http2Route": {
                  "description": "HTTP/2 routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "header": {
                          "description": "Client request headers to match on.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "method": {
                          "description": "Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Client request path to match on.",
                          "properties": {
                            "exact": {
                              "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            },
                            "regex": {
                              "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "queryParameter": {
                          "description": "Client request query parameters to match on.",
                          "items": {
                            "properties": {
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "scheme": {
                          "description": "Client request header scheme to match on. Valid values: http, https.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "httpRoute": {
                  "description": "HTTP routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "header": {
                          "description": "Client request headers to match on.",
                          "items": {
                            "properties": {
                              "invert": {
                                "description": "If true, the match is on the opposite of the match criteria. Default is false.",
                                "type": "boolean"
                              },
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "prefix": {
                                    "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "range": {
                                    "description": "Object that specifies the range of numbers that the value sent by the client must be included in.",
                                    "properties": {
                                      "end": {
                                        "description": "End of the range.",
                                        "type": "number"
                                      },
                                      "start": {
                                        "description": "(Requited) Start of the range.",
                                        "type": "number"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "regex": {
                                    "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  },
                                  "suffix": {
                                    "description": "Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "method": {
                          "description": "Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Client request path to match on.",
                          "properties": {
                            "exact": {
                              "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            },
                            "regex": {
                              "description": "Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        },
                        "prefix": {
                          "description": "Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.",
                          "type": "string"
                        },
                        "queryParameter": {
                          "description": "Client request query parameters to match on.",
                          "items": {
                            "properties": {
                              "match": {
                                "description": "Criteria for determining an gRPC request match.",
                                "properties": {
                                  "exact": {
                                    "description": "Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "description": "Name to use for the route. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "scheme": {
                          "description": "Client request header scheme to match on. Valid values: http, https.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "retryPolicy": {
                      "description": "Retry policy.",
                      "properties": {
                        "httpRetryEvents": {
                          "description": "List of HTTP retry events.\nValid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "maxRetries": {
                          "description": "Maximum number of retries.",
                          "type": "number"
                        },
                        "perRetryTimeout": {
                          "description": "Per-retry timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tcpRetryEvents": {
                          "description": "List of TCP retry events. The only valid value is connection-error.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "perRequest": {
                          "description": "Per request timeout.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "priority": {
                  "description": "Priority for the route, between 0 and 1000.\nRoutes are matched based on the specified value, where 0 is the highest priority.",
                  "type": "number"
                },
                "tcpRoute": {
                  "description": "TCP routing information for the route.",
                  "properties": {
                    "action": {
                      "description": "Action to take if a match is determined.",
                      "properties": {
                        "weightedTarget": {
                          "description": "Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "The port number to match from the request.",
                                "type": "number"
                              },
                              "virtualNode": {
                                "description": "Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "Relative weight of the weighted target. An integer between 0 and 100.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "match": {
                      "description": "Criteria for determining an gRPC request match.",
                      "properties": {
                        "port": {
                          "description": "The port number to match from the request.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "timeout": {
                      "description": "Types of timeouts.",
                      "properties": {
                        "idle": {
                          "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                          "properties": {
                            "unit": {
                              "description": "Unit of time. Valid values: ms, s.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Number of time units. Minimum value of 0.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "virtualRouterName": {
              "description": "Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
