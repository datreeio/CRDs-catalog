{
  "description": "Cluster is the Schema for the Clusters API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClusterSpec defines the desired state of Cluster. \n An object representing an Amazon EKS cluster.",
      "properties": {
        "clientRequestToken": {
          "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.",
          "type": "string"
        },
        "encryptionConfig": {
          "description": "The encryption configuration for the cluster.",
          "items": {
            "description": "The encryption configuration for the cluster.",
            "properties": {
              "provider": {
                "description": "Identifies the Key Management Service (KMS) key used to encrypt the secrets.",
                "properties": {
                  "keyARN": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "resources": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "kubernetesNetworkConfig": {
          "description": "The Kubernetes network configuration for the cluster.",
          "properties": {
            "ipFamily": {
              "type": "string"
            },
            "serviceIPv4CIDR": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "logging": {
          "description": "Enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see Amazon EKS Cluster control plane logs (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html) in the Amazon EKS User Guide . \n CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see CloudWatch Pricing (http://aws.amazon.com/cloudwatch/pricing/).",
          "properties": {
            "clusterLogging": {
              "items": {
                "description": "An object representing the enabled or disabled Kubernetes control plane logs for your cluster.",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "types": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "name": {
          "description": "The unique name to give to your cluster.",
          "type": "string"
        },
        "outpostConfig": {
          "description": "An object representing the configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a local cluster on an Outpost, review Local clusters for Amazon EKS on Amazon Web Services Outposts (https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-overview.html) in the Amazon EKS User Guide. This object isn't available for creating Amazon EKS clusters on the Amazon Web Services cloud.",
          "properties": {
            "controlPlaneInstanceType": {
              "type": "string"
            },
            "controlPlanePlacement": {
              "description": "The placement configuration for all the control plane instances of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more information, see Capacity considerations (https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html) in the Amazon EKS User Guide",
              "properties": {
                "groupName": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "outpostARNs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "resourcesVPCConfig": {
          "description": "The VPC configuration that's used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations (https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and Cluster Security Group Considerations (https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. You must specify at least two subnets. You can specify up to five security groups. However, we recommend that you use a dedicated security group for your cluster control plane.",
          "properties": {
            "endpointPrivateAccess": {
              "type": "boolean"
            },
            "endpointPublicAccess": {
              "type": "boolean"
            },
            "publicAccessCIDRs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "securityGroupIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "securityGroupRefs": {
              "description": "Reference field for SecurityGroupIDs",
              "items": {
                "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
                "properties": {
                  "from": {
                    "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "subnetRefs": {
              "description": "Reference field for SubnetIDs",
              "items": {
                "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
                "properties": {
                  "from": {
                    "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "roleARN": {
          "description": "The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see Amazon EKS Service IAM Role (https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html) in the Amazon EKS User Guide .",
          "type": "string"
        },
        "roleRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.",
          "type": "object"
        },
        "version": {
          "description": "The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used. \n The default version might not be the latest version available.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "resourcesVPCConfig"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterStatus defines the observed state of Cluster",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "certificateAuthority": {
          "description": "The certificate-authority-data for your cluster.",
          "properties": {
            "data": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "connectorConfig": {
          "description": "The configuration used to connect to a cluster for registration.",
          "properties": {
            "activationCode": {
              "type": "string"
            },
            "activationExpiry": {
              "format": "date-time",
              "type": "string"
            },
            "activationID": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            },
            "roleARN": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "createdAt": {
          "description": "The Unix epoch timestamp in seconds for when the cluster was created.",
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "description": "The endpoint for your Kubernetes API server.",
          "type": "string"
        },
        "health": {
          "description": "An object representing the health of your local Amazon EKS cluster on an Amazon Web Services Outpost. This object isn't available for clusters on the Amazon Web Services cloud.",
          "properties": {
            "issues": {
              "items": {
                "description": "An issue with your local Amazon EKS cluster on an Amazon Web Services Outpost. You can't use this API with an Amazon EKS cluster on the Amazon Web Services cloud.",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "resourceIDs": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "The ID of your local Amazon EKS cluster on an Amazon Web Services Outpost. This property isn't available for an Amazon EKS cluster on the Amazon Web Services cloud.",
          "type": "string"
        },
        "identity": {
          "description": "The identity provider information for the cluster.",
          "properties": {
            "oidc": {
              "description": "An object representing the OpenID Connect (https://openid.net/connect/) (OIDC) identity provider information for the cluster.",
              "properties": {
                "issuer": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "platformVersion": {
          "description": "The platform version of your Amazon EKS cluster. For more information, see Platform Versions (https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html) in the Amazon EKS User Guide .",
          "type": "string"
        },
        "status": {
          "description": "The current status of the cluster.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
