{
  "description": "DataQualityJobDefinition is the Schema for the DataQualityJobDefinitions API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DataQualityJobDefinitionSpec defines the desired state of DataQualityJobDefinition.",
      "properties": {
        "dataQualityAppSpecification": {
          "description": "Specifies the container that runs the monitoring job.",
          "properties": {
            "containerArguments": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "containerEntrypoint": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "environment": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "imageURI": {
              "type": "string"
            },
            "postAnalyticsProcessorSourceURI": {
              "type": "string"
            },
            "recordPreprocessorSourceURI": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dataQualityBaselineConfig": {
          "description": "Configures the constraints and baselines for the monitoring job.",
          "properties": {
            "baseliningJobName": {
              "type": "string"
            },
            "constraintsResource": {
              "description": "The constraints resource for a monitoring job.",
              "properties": {
                "s3URI": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "statisticsResource": {
              "description": "The statistics resource for a monitoring job.",
              "properties": {
                "s3URI": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dataQualityJobInput": {
          "description": "A list of inputs for the monitoring job. Currently endpoints are supported as monitoring inputs.",
          "properties": {
            "endpointInput": {
              "description": "Input object for the endpoint",
              "properties": {
                "endTimeOffset": {
                  "type": "string"
                },
                "endpointName": {
                  "type": "string"
                },
                "featuresAttribute": {
                  "type": "string"
                },
                "inferenceAttribute": {
                  "type": "string"
                },
                "localPath": {
                  "type": "string"
                },
                "probabilityAttribute": {
                  "type": "string"
                },
                "probabilityThresholdAttribute": {
                  "type": "number"
                },
                "s3DataDistributionType": {
                  "type": "string"
                },
                "s3InputMode": {
                  "type": "string"
                },
                "startTimeOffset": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dataQualityJobOutputConfig": {
          "description": "The output configuration for monitoring jobs.",
          "properties": {
            "kmsKeyID": {
              "type": "string"
            },
            "monitoringOutputs": {
              "items": {
                "description": "The output object for a monitoring job.",
                "properties": {
                  "s3Output": {
                    "description": "Information about where and how you want to store the results of a monitoring job.",
                    "properties": {
                      "localPath": {
                        "type": "string"
                      },
                      "s3URI": {
                        "type": "string"
                      },
                      "s3UploadMode": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "jobDefinitionName": {
          "description": "The name for the monitoring job definition.",
          "type": "string"
        },
        "jobResources": {
          "description": "Identifies the resources to deploy for a monitoring job.",
          "properties": {
            "clusterConfig": {
              "description": "Configuration for the cluster used to run model monitoring jobs.",
              "properties": {
                "instanceCount": {
                  "format": "int64",
                  "type": "integer"
                },
                "instanceType": {
                  "type": "string"
                },
                "volumeKMSKeyID": {
                  "type": "string"
                },
                "volumeSizeInGB": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "networkConfig": {
          "description": "Specifies networking configuration for the monitoring job.",
          "properties": {
            "enableInterContainerTrafficEncryption": {
              "type": "boolean"
            },
            "enableNetworkIsolation": {
              "type": "boolean"
            },
            "vpcConfig": {
              "description": "Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see Protect Endpoints by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html) and Protect Training Jobs by Using an Amazon Virtual Private Cloud (https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html).",
              "properties": {
                "securityGroupIDs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "subnets": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "roleARN": {
          "description": "The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.",
          "type": "string"
        },
        "stoppingCondition": {
          "description": "A time limit for how long the monitoring job is allowed to run before stopping.",
          "properties": {
            "maxRuntimeInSeconds": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "description": "(Optional) An array of key-value pairs. For more information, see Using Cost Allocation Tags (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL) in the Amazon Web Services Billing and Cost Management User Guide.",
          "items": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources. \n You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see AddTags. \n For more information on adding metadata to your Amazon Web Services resources with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). For advice on best practices for managing Amazon Web Services resources with tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "dataQualityAppSpecification",
        "dataQualityJobInput",
        "dataQualityJobOutputConfig",
        "jobDefinitionName",
        "jobResources",
        "roleARN"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DataQualityJobDefinitionStatus defines the observed state of DataQualityJobDefinition",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
