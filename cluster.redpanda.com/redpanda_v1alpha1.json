{
  "description": "Redpanda defines the CRD for Redpanda clusters.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Defines the desired state of the Redpanda cluster.",
      "properties": {
        "chartRef": {
          "description": "Defines chart details, including the version and repository.",
          "properties": {
            "chartName": {
              "description": "Specifies the name of the chart to deploy.",
              "type": "string"
            },
            "chartVersion": {
              "description": "Defines the version of the Redpanda Helm chart to deploy.",
              "type": "string"
            },
            "helmRepositoryName": {
              "description": "Defines the chart repository to use. Defaults to `redpanda` if not defined.",
              "type": "string"
            },
            "timeout": {
              "description": "Specifies the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during Helm actions. Defaults to `15m0s`.",
              "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$",
              "type": "string"
            },
            "upgrade": {
              "description": "Defines how to handle upgrades, including failures.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "useFlux": {
              "description": "Setting the `useFlux` flag to `false` disables the Helm controller's reconciliation of the Helm chart.\nThis ties the operator to a specific version of the Go-based Redpanda Helm chart, causing all other\nChartRef fields to be ignored.\n\nBefore disabling `useFlux`, ensure that your `chartVersion` is aligned with `5.9.21` or the corresponding\nversion of the Redpanda chart.\n\nNote: When `useFlux` is set to `false`, `RedpandaStatus` may become inaccurate if the HelmRelease is\nmanually deleted.\n\nTo dynamically switch Flux controllers (HelmRelease and HelmRepository), setting `useFlux` to `false`\nwill suspend these resources instead of removing them.\n\nReferences:\n- https://fluxcd.io/flux/components/helm/helmreleases/#suspend\n- https://fluxcd.io/flux/components/source/helmrepositories/#suspend",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "clusterSpec": {
          "description": "Defines the Helm values to use to deploy the cluster.",
          "properties": {
            "affinity": {
              "description": "Affinity constraints for scheduling Pods, can override this for\nStatefulSets and Jobs. For details, see the [Kubernetes\ndocumentation](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity).",
              "properties": {
                "nodeAffinity": {
                  "description": "Describes node affinity scheduling rules for the pod.",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                      "items": {
                        "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                        "properties": {
                          "preference": {
                            "description": "A node selector term, associated with the corresponding weight.",
                            "properties": {
                              "matchExpressions": {
                                "description": "A list of node selector requirements by node's labels.",
                                "items": {
                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "The label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchFields": {
                                "description": "A list of node selector requirements by node's fields.",
                                "items": {
                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "The label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "weight": {
                            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "preference",
                          "weight"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                      "properties": {
                        "nodeSelectorTerms": {
                          "description": "Required. A list of node selector terms. The terms are ORed.",
                          "items": {
                            "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                            "properties": {
                              "matchExpressions": {
                                "description": "A list of node selector requirements by node's labels.",
                                "items": {
                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "The label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchFields": {
                                "description": "A list of node selector requirements by node's fields.",
                                "items": {
                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "The label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "required": [
                        "nodeSelectorTerms"
                      ],
                      "type": "object",
                      "x-kubernetes-map-type": "atomic",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "podAffinity": {
                  "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                      "items": {
                        "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                        "properties": {
                          "podAffinityTerm": {
                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "weight": {
                            "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "podAffinityTerm",
                          "weight"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                      "items": {
                        "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "matchLabelKeys": {
                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "mismatchLabelKeys": {
                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "namespaceSelector": {
                            "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "namespaces": {
                            "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "topologyKey"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "podAntiAffinity": {
                  "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                      "items": {
                        "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                        "properties": {
                          "podAffinityTerm": {
                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "weight": {
                            "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "podAffinityTerm",
                          "weight"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                      "items": {
                        "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "matchLabelKeys": {
                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "mismatchLabelKeys": {
                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "namespaceSelector": {
                            "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "namespaces": {
                            "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "topologyKey"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "auditLogging": {
              "description": "Defines the log level settings.",
              "properties": {
                "clientMaxBufferSize": {
                  "description": "Defines the number of bytes (in bytes) allocated by the internal audit client for audit messages.",
                  "type": "integer"
                },
                "enabled": {
                  "description": "Specifies whether to enable audit logging or not",
                  "type": "boolean"
                },
                "enabledEventTypes": {
                  "description": "Event types that should be captured by audit logs",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "excludedPrincipals": {
                  "description": "List of principals to exclude from auditing",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "excludedTopics": {
                  "description": "List of topics to exclude from auditing",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "listener": {
                  "description": "Kafka external listener name, note that it must have `authenticationMethod` set to sasl",
                  "type": "string"
                },
                "partitions": {
                  "description": "Integer value defining the number of partitions used by a newly created audit topic",
                  "type": "integer"
                },
                "queueDrainIntervalMs": {
                  "description": "In ms, frequency in which per shard audit logs are batched to client for write to audit log.",
                  "type": "integer"
                },
                "queueMaxBufferSizePerShard": {
                  "description": "Defines the maximum amount of memory used (in bytes) by the audit buffer in each shard",
                  "type": "integer"
                },
                "replicationFactor": {
                  "description": "Defines the replication factor for a newly created audit log topic. This configuration applies\nonly to the audit log topic and may be different from the cluster or other topic configurations.\nThis cannot be altered for existing audit log topics. Setting this value is optional. If a value is not provided,\nRedpanda will use the `internal_topic_replication_factor` cluster config value. Default is `null`",
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "auth": {
              "description": "Defines authentication settings for listeners.",
              "properties": {
                "sasl": {
                  "description": "Configures SASL authentication in the Helm values.",
                  "properties": {
                    "bootstrapUser": {
                      "description": "Specifies configuration about the bootstrap user.",
                      "properties": {
                        "mechanism": {
                          "description": "Specifies the authentication mechanism to use for the bootstrap user. Options are `SCRAM-SHA-256` and `SCRAM-SHA-512`.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name specifies the name of the bootstrap user created for the cluster, if unspecified\ndefaults to \"kubernetes-controller\".",
                          "type": "string"
                        },
                        "secretKeyRef": {
                          "description": "Specifies the location where the generated password will be written or a pre-existing\npassword will be read from.",
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "default": "",
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "key"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "enabled": {
                      "description": "Enables SASL authentication. If you enable SASL authentication, you must provide a Secret name in `secretRef`.",
                      "type": "boolean"
                    },
                    "mechanism": {
                      "description": "Specifies the default authentication mechanism to use for superusers. Options are `SCRAM-SHA-256` and `SCRAM-SHA-512`.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "If `users` is empty, `secretRef` specifies the name of the Secret that contains your superuser credentials in the format <username>:<password>:<optional-authentication-mechanism>. Otherwise, `secretRef` specifies the name of the Secret that the chart creates to store the credentials in `users`.",
                      "type": "string"
                    },
                    "users": {
                      "description": "Specifies a list of superuser credentials.",
                      "items": {
                        "description": "UsersItems configures a list of superusers in the Helm values.",
                        "properties": {
                          "mechanism": {
                            "description": "Specifies the authentication mechanism to use for superusers. Overrides the default in `SASL`. Options are `SCRAM-SHA-256` and `SCRAM-SHA-512`.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Specifies the name of the superuser.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Specifies the superuser password.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "clusterDomain": {
              "description": "Customizes the Kubernetes cluster domain. This domain is used to generate the internal domains of the StatefulSet Pods. For details, see https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#stable-network-id. The default is the `cluster.local` domain.",
              "type": "string"
            },
            "commonLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Assigns custom labels to all resources generated by the Redpanda Helm chart. Specify labels as key/value pairs.",
              "type": "object"
            },
            "config": {
              "description": "Defines configuration properties supported by Redpanda that may not work correctly in a Kubernetes cluster. Changing these values from the defaults comes with some risk. Use these properties to customize various Redpanda configurations that are not available in the `RedpandaClusterSpec`. These values have no impact on the configuration or behavior of the Kubernetes objects deployed by Helm, and therefore should not be modified for the purpose of configuring those objects. Instead, these settings get passed directly to the Redpanda binary at startup.",
              "properties": {
                "cluster": {
                  "description": "Specifies cluster configuration properties. See https://docs.redpanda.com/current/reference/cluster-properties/.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "node": {
                  "description": "Specifies broker configuration properties. See https://docs.redpanda.com/current/reference/node-properties/.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "pandaproxy_client": {
                  "description": "Specifies tunable configuration properties. See https://docs.redpanda.com/current/reference/tunable-properties/.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "rpk": {
                  "description": "Specifies cluster configuration properties. See https://docs.redpanda.com/current/reference/cluster-properties/.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "schema_registry_client": {
                  "description": "Specifies tunable configuration properties. See https://docs.redpanda.com/current/reference/tunable-properties/.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "tunable": {
                  "description": "Specifies tunable configuration properties. See https://docs.redpanda.com/current/reference/tunable-properties/.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "connectors": {
              "description": "Defines Redpanda Connector settings.\nDeprecated, ignored, and unused as of v25.1.1",
              "properties": {
                "auth": {
                  "description": "Specifies superuser credentials",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "commonLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Assigns custom labels to all resources generated by the Connector Helm chart. Specify labels as key/value pairs.",
                  "type": "object"
                },
                "connectors": {
                  "description": "Connectors specified manual configurations",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "container": {
                  "description": "Specifies container information",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "deployment": {
                  "description": "Connectors specified manual configurations",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "type": "boolean"
                },
                "fullnameOverride": {
                  "description": "Specifies a full custom name, which overrides the entire naming convention including release name and chart name.",
                  "type": "string"
                },
                "image": {
                  "description": "Defines the container image settings to use for the Redpanda cluster.",
                  "properties": {
                    "pullPolicy": {
                      "description": "Specifies the strategy used for pulling images from the repository. For available values, see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy.",
                      "type": "string"
                    },
                    "repository": {
                      "description": "Specifies the image repository to pull from.",
                      "type": "string"
                    },
                    "tag": {
                      "description": "Specifies the image tag.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "imagePullSecrets": {
                  "description": "Specifies credentials for a private image repository. For details, see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/.",
                  "items": {
                    "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                    "properties": {
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "logging": {
                  "description": "Specifies logging details",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "monitoring": {
                  "description": "Specifies monitoring resources",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Adds custom Annotations to the ServiceMonitor resource.",
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Specifies whether to create a ServiceMonitor that can be used by Prometheus Operator or VictoriaMetrics Operator to scrape the metrics.",
                      "type": "boolean"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Adds custom labels to the ServiceMonitor resource.",
                      "type": "object"
                    },
                    "namespaceSelector": {
                      "description": "Adds custom namespaceSelector to monitoring resources",
                      "properties": {
                        "any": {
                          "description": "Boolean describing whether all namespaces are selected in contrast to a\nlist restricting them.",
                          "type": "boolean"
                        },
                        "matchNames": {
                          "description": "List of namespace names to select from.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true,
                      "additionalProperties": false
                    },
                    "scrapeInterval": {
                      "description": "Specifies how often to scrape metrics.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "nameOverride": {
                  "description": "Specifies a custom name for the Redpanda Console resources, overriding the default naming convention.",
                  "type": "string"
                },
                "service": {
                  "description": "Specifies service details",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "serviceAccount": {
                  "description": "Specifies service account details",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "storage": {
                  "description": "Specifies storage information",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "test": {
                  "description": "Specifies whether to create Helm tests.",
                  "properties": {
                    "create": {
                      "description": "Specifies whether to create the resource.",
                      "type": "boolean"
                    },
                    "enabled": {
                      "description": "Deprecated: this field exists for storage backwards compatibility and is\nnever used. Prefer Create.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tolerations": {
                  "description": "Applies tolerations to allow Pods to be scheduled on nodes with matching taints, enabling control over where Pods can run.",
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": "string"
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "console": {
              "description": "Defines Redpanda Console settings.",
              "properties": {
                "affinity": {
                  "description": "Defines affinity rules for Pod assignment.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "annotations": {
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "automountServiceAccountToken": {
                  "description": "Automount API credentials for the Service Account into the pod.",
                  "type": "boolean"
                },
                "autoscaling": {
                  "description": "Configures Horizontal Pod Autoscaling (HPA) for Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "commonLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "config": {
                  "description": "Configures custom settings for Redpanda Console.\n`config` is available in Console chart version after v0.7.31 semver",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "configMap": {
                  "description": "Specifies whether a ConfigMap should be created for Redpanda Console.",
                  "properties": {
                    "create": {
                      "description": "Indicates whether the corresponding Kubernetes object (ConfigMap, Secret, or Deployment) should be created.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "configmap": {
                  "description": "Deprecated: this field exists for storage backwards compatibility and is\nnever used. Prefer ConfigMap (configmap).",
                  "properties": {
                    "create": {
                      "description": "Indicates whether the corresponding Kubernetes object (ConfigMap, Secret, or Deployment) should be created.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "console": {
                  "description": "Deprecated: Use `config` instead\n`console` is available in Console chart version earlier or equal to v0.7.31",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "deployment": {
                  "description": "Specifies whether a Deployment should be created for Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Specifies whether the Redpanda Console subchart should be deployed.",
                  "type": "boolean"
                },
                "enterprise": {
                  "description": "Deprecated: Use `licenseSecretRef` instead.\n`enterprise` is available in Console chart version earlier or equal to v0.7.31",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "extraContainers": {
                  "description": "Adds extra containers to the Pods that run Redpanda Console.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "extraEnv": {
                  "description": "Adds extra environment variables to the Pods that run Redpanda Console.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "extraEnvFrom": {
                  "description": "Allows you to add extra environment variables from external resources to the Pods that run Redpanda Console.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "extraVolumeMounts": {
                  "description": "Mounts additional volumes inside the containers that run Redpanda Console.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "extraVolumes": {
                  "description": "Adds extra volumes to the Pods that run Redpanda Console.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "fullnameOverride": {
                  "description": "Specifies a full custom name, which overrides the entire naming convention including release name and chart name.",
                  "type": "string"
                },
                "image": {
                  "description": "Defines the container image for the Redpanda Console, including the repository, name, and tag.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "imagePullSecrets": {
                  "description": "Defines Secrets used to pull the container images from a private registry.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "ingress": {
                  "description": "Configures the Kubernetes Ingress resource for Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "initContainers": {
                  "description": "Specifies init containers for the Pods that run Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "licenseSecretRef": {
                  "description": "Defines a reference to Kubernetes Secret that points to a Redpanda Enterprise license.\nPlease consider use Enterprise in RedpandaClusterSpec type.\n`licenseSecretRef` is available in Console chart version after v0.7.31 semver",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "livenessProbe": {
                  "description": "Settings for console's Deployment's liveness probe.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Sets the number of consecutive failures required to consider a Pod as not live.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "Specifies the time in seconds to wait before the first probe is initiated.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "Determines the frequency in seconds of performing the probe.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "nameOverride": {
                  "description": "Specifies a custom name for the Redpanda Console resources, overriding the default naming convention.",
                  "type": "string"
                },
                "nodeSelector": {
                  "description": "Specifies Node labels for Pod assignment.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "podAnnotations": {
                  "description": "Adds custom annotations to the Pods that run Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "podLabels": {
                  "description": "Adds custom labels to the Pods that run Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "podSecurityContext": {
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "priorityClassName": {
                  "description": "Specifies the priority class name for the Pods that run Redpanda Console.",
                  "type": "string"
                },
                "readinessProbe": {
                  "description": "Settings for console's Deployment's readiness probe.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Defines the threshold for how many times the probe can fail before the Pod is marked Unready.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "Sets the initial delay before the readiness probe is initiated, in seconds.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "Configures the period, in seconds, between each readiness check.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "replicaCount": {
                  "description": "Sets the number of replicas for the Redpanda Console Deployment resource.",
                  "type": "integer"
                },
                "resources": {
                  "description": "Configures resource requests and limits for the Pods that run Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "secret": {
                  "description": "Specifies whether a Secret should be created for Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "secretMounts": {
                  "description": "Mounts additional Secret resources inside the containers that run Redpanda Console.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "securityContext": {
                  "description": "Sets the security context for the Pods that run Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "service": {
                  "description": "Configures the Kubernetes Service for Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "serviceAccount": {
                  "description": "Configures the ServiceAccount used by the Pods that run Redpanda Console.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "strategy": {
                  "description": "Configures console's Deployment's update strategy.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "tests": {
                  "description": "Controls the creation of helm tests for console.",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tolerations": {
                  "description": "Specifies tolerations for scheduling Pods onto Nodes with taints.",
                  "items": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "type": "array",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "topologySpreadConstraints": {
                  "description": "Specifies topology spread constraints for Pod placement.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "enterprise": {
              "description": "Defines an Enterprise license.",
              "properties": {
                "license": {
                  "description": "Specifies the Enterprise license key.",
                  "type": "string"
                },
                "licenseSecretRef": {
                  "description": "Defines a reference to a Secret resource that contains the Enterprise license key.",
                  "properties": {
                    "key": {
                      "description": "Specifies the key that is contains the Enterprise license in the Secret.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Specifies the name of the Secret resource to use.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "external": {
              "description": "Defines external access settings.",
              "properties": {
                "addresses": {
                  "description": "Specifies addresses for the external listeners to advertise.Provide one entry for each broker in order of StatefulSet replicas. The number of brokers is defined in `statefulset.replicas`. The values can be IP addresses or DNS names. If `external.domain` is set, the domain is appended to these values.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds custom annotations to the external Service.",
                  "type": "object"
                },
                "domain": {
                  "description": "Specifies the domain to advertise to external clients. If specified, then it will be appended to the `external.addresses` values as each broker's advertised address.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Specifies whether the external access is enabled.",
                  "type": "boolean"
                },
                "externalDns": {
                  "description": "Defines externalDNS configurations.",
                  "properties": {
                    "enabled": {
                      "description": "Specifies whether externalDNS annotations are added to LoadBalancer Services. If you enable externalDns, each LoadBalancer Service defined in `external.type` will be annotated with an external-dns hostname that matches `external.addresses[i]`.`external.domain`.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "prefixTemplate": {
                  "description": "Specifies a naming prefix template for external Services.",
                  "type": "string"
                },
                "service": {
                  "description": "Configures the external Service resource.",
                  "properties": {
                    "enabled": {
                      "description": "Specifies whether to create the external Service. If set to `false`, the external Service type is not created. You can still set your cluster with external access but not create the supporting Service. Set this to `false` to manage your own Service.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "sourceRanges": {
                  "description": "Source range for external access. Only applicable when `external.type` is LoadBalancer.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": {
                  "description": "Specifies the external Service type. Only NodePort and LoadBalancer are supported. If undefined, then advertised listeners will be configured in Redpanda, but the Helm chart will not create a Service. NodePort is recommended in cases where latency is a priority.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "force": {
              "description": "Adds the `--force` flag in `helm upgrade` commands. Used for allowing a change of TLS configuration for the RPC listener.\nSetting `force` to `true` will result in a short period of downtime.",
              "type": "boolean"
            },
            "fullNameOverride": {
              "description": "Deprecated: use FullnameOverride (fullnameOverride).",
              "type": "string"
            },
            "fullnameOverride": {
              "description": "Customizes the name of the StatefulSet and Services. The default is `redpanda`.",
              "type": "string"
            },
            "image": {
              "description": "Defines the container image settings to use for the Redpanda cluster.",
              "properties": {
                "pullPolicy": {
                  "description": "Specifies the strategy used for pulling images from the repository. For available values, see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy.",
                  "type": "string"
                },
                "repository": {
                  "description": "Specifies the image repository to pull from.",
                  "type": "string"
                },
                "tag": {
                  "description": "Specifies the image tag.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "imagePullSecrets": {
              "description": "Specifies credentials for a private image repository. For details, see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/.",
              "items": {
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                "properties": {
                  "name": {
                    "default": "",
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "type": "array"
            },
            "license_key": {
              "description": "Deprecated: Use `Enterprise` instead.",
              "type": "string"
            },
            "license_secret_ref": {
              "description": "Deprecated: Use `EnterpriseLicenseSecretRef` instead.",
              "properties": {
                "secret_key": {
                  "description": "Specifies the key that is contains the Enterprise license in the Secret.",
                  "type": "string"
                },
                "secret_name": {
                  "description": "Specifies the name of the Secret.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "listeners": {
              "description": "Defines settings for listeners, including HTTP Proxy, Schema Registry, the Admin API and the Kafka API.",
              "properties": {
                "admin": {
                  "description": "Configures settings for the Admin API listeners.",
                  "properties": {
                    "appProtocol": {
                      "type": "string"
                    },
                    "external": {
                      "additionalProperties": {
                        "description": "ExternalListener configures settings for the external listeners.",
                        "properties": {
                          "advertisedPorts": {
                            "description": "Specifies the network port that the external Service listens on.",
                            "items": {
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "authenticationMethod": {
                            "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "nodePort": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "port": {
                            "description": "Specifies the container port number for the external listener.",
                            "type": "integer"
                          },
                          "prefixTemplate": {
                            "description": "Specifies the template used for generating the advertised addresses of Services. This field accepts a string template that dynamically constructs Service addresses based on various parameters such as Service name and port number.",
                            "type": "string"
                          },
                          "tls": {
                            "description": "Configures TLS settings for the external listener.",
                            "properties": {
                              "cert": {
                                "description": "References a specific certificate for the listener.",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Specifies whether TLS is enabled for the listener.",
                                "type": "boolean"
                              },
                              "requireClientAuth": {
                                "description": "Indicates whether client authentication (mTLS) is required.",
                                "type": "boolean"
                              },
                              "secretRef": {
                                "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                                "type": "string"
                              },
                              "trustStore": {
                                "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                                "maxProperties": 1,
                                "minProperties": 1,
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key from a ConfigMap.",
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "secretKeyRef": {
                                    "description": "SecretKeySelector selects a key of a Secret.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "description": "Defines settings for the external listener.",
                      "type": "object"
                    },
                    "port": {
                      "description": "Specifies the container port number for the internal listener.",
                      "type": "integer"
                    },
                    "tls": {
                      "description": "Configures TLS settings for the internal listener.",
                      "properties": {
                        "cert": {
                          "description": "References a specific certificate for the listener.",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Specifies whether TLS is enabled for the listener.",
                          "type": "boolean"
                        },
                        "requireClientAuth": {
                          "description": "Indicates whether client authentication (mTLS) is required.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                          "type": "string"
                        },
                        "trustStore": {
                          "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                          "maxProperties": 1,
                          "minProperties": 1,
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key from a ConfigMap.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secretKeyRef": {
                              "description": "SecretKeySelector selects a key of a Secret.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "http": {
                  "description": "Configures settings for the HTTP Proxy listeners.",
                  "properties": {
                    "authenticationMethod": {
                      "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Specifies whether the HTTP Proxy is enabled.",
                      "type": "boolean"
                    },
                    "external": {
                      "additionalProperties": {
                        "description": "ExternalListener configures settings for the external listeners.",
                        "properties": {
                          "advertisedPorts": {
                            "description": "Specifies the network port that the external Service listens on.",
                            "items": {
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "authenticationMethod": {
                            "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "nodePort": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "port": {
                            "description": "Specifies the container port number for the external listener.",
                            "type": "integer"
                          },
                          "prefixTemplate": {
                            "description": "Specifies the template used for generating the advertised addresses of Services. This field accepts a string template that dynamically constructs Service addresses based on various parameters such as Service name and port number.",
                            "type": "string"
                          },
                          "tls": {
                            "description": "Configures TLS settings for the external listener.",
                            "properties": {
                              "cert": {
                                "description": "References a specific certificate for the listener.",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Specifies whether TLS is enabled for the listener.",
                                "type": "boolean"
                              },
                              "requireClientAuth": {
                                "description": "Indicates whether client authentication (mTLS) is required.",
                                "type": "boolean"
                              },
                              "secretRef": {
                                "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                                "type": "string"
                              },
                              "trustStore": {
                                "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                                "maxProperties": 1,
                                "minProperties": 1,
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key from a ConfigMap.",
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "secretKeyRef": {
                                    "description": "SecretKeySelector selects a key of a Secret.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "description": "Defines settings for the external listener.",
                      "type": "object"
                    },
                    "kafkaEndpoint": {
                      "description": "Configures the listener to use for HTTP connections. For example `default` for the internal listener.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Specifies the container port number for the internal listener.",
                      "type": "integer"
                    },
                    "prefixTemplate": {
                      "description": "Specifies the template used for generating the advertised addresses of Services. This field accepts a string template that dynamically constructs Service addresses based on various parameters such as Service name and port number.",
                      "type": "string"
                    },
                    "tls": {
                      "description": "Configures TLS settings for the internal listener.",
                      "properties": {
                        "cert": {
                          "description": "References a specific certificate for the listener.",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Specifies whether TLS is enabled for the listener.",
                          "type": "boolean"
                        },
                        "requireClientAuth": {
                          "description": "Indicates whether client authentication (mTLS) is required.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                          "type": "string"
                        },
                        "trustStore": {
                          "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                          "maxProperties": 1,
                          "minProperties": 1,
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key from a ConfigMap.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secretKeyRef": {
                              "description": "SecretKeySelector selects a key of a Secret.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "kafka": {
                  "description": "Configures settings for the Kafka API listeners.",
                  "properties": {
                    "authenticationMethod": {
                      "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                      "type": "string"
                    },
                    "external": {
                      "additionalProperties": {
                        "description": "ExternalListener configures settings for the external listeners.",
                        "properties": {
                          "advertisedPorts": {
                            "description": "Specifies the network port that the external Service listens on.",
                            "items": {
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "authenticationMethod": {
                            "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "nodePort": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "port": {
                            "description": "Specifies the container port number for the external listener.",
                            "type": "integer"
                          },
                          "prefixTemplate": {
                            "description": "Specifies the template used for generating the advertised addresses of Services. This field accepts a string template that dynamically constructs Service addresses based on various parameters such as Service name and port number.",
                            "type": "string"
                          },
                          "tls": {
                            "description": "Configures TLS settings for the external listener.",
                            "properties": {
                              "cert": {
                                "description": "References a specific certificate for the listener.",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Specifies whether TLS is enabled for the listener.",
                                "type": "boolean"
                              },
                              "requireClientAuth": {
                                "description": "Indicates whether client authentication (mTLS) is required.",
                                "type": "boolean"
                              },
                              "secretRef": {
                                "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                                "type": "string"
                              },
                              "trustStore": {
                                "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                                "maxProperties": 1,
                                "minProperties": 1,
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key from a ConfigMap.",
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "secretKeyRef": {
                                    "description": "SecretKeySelector selects a key of a Secret.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "description": "Defines settings for the external listener.",
                      "type": "object"
                    },
                    "port": {
                      "description": "Specifies the container port number for the internal listener.",
                      "type": "integer"
                    },
                    "prefixTemplate": {
                      "description": "Specifies the template used for generating the advertised addresses of Services. This field accepts a string template that dynamically constructs Service addresses based on various parameters such as Service name and port number.",
                      "type": "string"
                    },
                    "tls": {
                      "description": "Configures TLS settings for the internal listener.",
                      "properties": {
                        "cert": {
                          "description": "References a specific certificate for the listener.",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Specifies whether TLS is enabled for the listener.",
                          "type": "boolean"
                        },
                        "requireClientAuth": {
                          "description": "Indicates whether client authentication (mTLS) is required.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                          "type": "string"
                        },
                        "trustStore": {
                          "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                          "maxProperties": 1,
                          "minProperties": 1,
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key from a ConfigMap.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secretKeyRef": {
                              "description": "SecretKeySelector selects a key of a Secret.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "rpc": {
                  "description": "Configures settings for the RPC API listener.",
                  "properties": {
                    "port": {
                      "description": "Specifies the container port number for the internal listener.",
                      "type": "integer"
                    },
                    "tls": {
                      "description": "Configures TLS settings for the internal listener.",
                      "properties": {
                        "cert": {
                          "description": "References a specific certificate for the listener.",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Specifies whether TLS is enabled for the listener.",
                          "type": "boolean"
                        },
                        "requireClientAuth": {
                          "description": "Indicates whether client authentication (mTLS) is required.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                          "type": "string"
                        },
                        "trustStore": {
                          "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                          "maxProperties": 1,
                          "minProperties": 1,
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key from a ConfigMap.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secretKeyRef": {
                              "description": "SecretKeySelector selects a key of a Secret.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "schemaRegistry": {
                  "description": "Configures settings for the Schema Registry listeners.",
                  "properties": {
                    "authenticationMethod": {
                      "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Specifies whether the Schema Registry is enabled.",
                      "type": "boolean"
                    },
                    "external": {
                      "additionalProperties": {
                        "description": "ExternalListener configures settings for the external listeners.",
                        "properties": {
                          "advertisedPorts": {
                            "description": "Specifies the network port that the external Service listens on.",
                            "items": {
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "authenticationMethod": {
                            "description": "Specifies the authentication method for the external listener. For example, 'mtls_identity' or `sasl`.",
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "nodePort": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "port": {
                            "description": "Specifies the container port number for the external listener.",
                            "type": "integer"
                          },
                          "prefixTemplate": {
                            "description": "Specifies the template used for generating the advertised addresses of Services. This field accepts a string template that dynamically constructs Service addresses based on various parameters such as Service name and port number.",
                            "type": "string"
                          },
                          "tls": {
                            "description": "Configures TLS settings for the external listener.",
                            "properties": {
                              "cert": {
                                "description": "References a specific certificate for the listener.",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Specifies whether TLS is enabled for the listener.",
                                "type": "boolean"
                              },
                              "requireClientAuth": {
                                "description": "Indicates whether client authentication (mTLS) is required.",
                                "type": "boolean"
                              },
                              "secretRef": {
                                "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                                "type": "string"
                              },
                              "trustStore": {
                                "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                                "maxProperties": 1,
                                "minProperties": 1,
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key from a ConfigMap.",
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "secretKeyRef": {
                                    "description": "SecretKeySelector selects a key of a Secret.",
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "default": "",
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "key"
                                    ],
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "description": "Defines settings for the external listener.",
                      "type": "object"
                    },
                    "kafkaEndpoint": {
                      "description": "Configures the listener to use for HTTP connections. For example `default` for the internal listener.",
                      "type": "string"
                    },
                    "port": {
                      "description": "Specifies the container port number for the internal listener.",
                      "type": "integer"
                    },
                    "tls": {
                      "description": "Configures TLS settings for the internal listener.",
                      "properties": {
                        "cert": {
                          "description": "References a specific certificate for the listener.",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Specifies whether TLS is enabled for the listener.",
                          "type": "boolean"
                        },
                        "requireClientAuth": {
                          "description": "Indicates whether client authentication (mTLS) is required.",
                          "type": "boolean"
                        },
                        "secretRef": {
                          "description": "References a Secret resource containing TLS credentials for the listener.\n\nDeprecated: Setting SecretRef has no affect and will be removed in\nfuture releases.",
                          "type": "string"
                        },
                        "trustStore": {
                          "description": "TrustStore allows setting the `truststore_path` on this listener. If\nspecified, this field takes precedence over [Certificate.CAEnabled].",
                          "maxProperties": 1,
                          "minProperties": 1,
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key from a ConfigMap.",
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            },
                            "secretKeyRef": {
                              "description": "SecretKeySelector selects a key of a Secret.",
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "default": "",
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "key"
                              ],
                              "type": "object",
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "logging": {
              "description": "Defines the log level settings.",
              "properties": {
                "logLevel": {
                  "description": "Sets the verbosity level of logs.",
                  "type": "string"
                },
                "usageStats": {
                  "description": "Specifies whether to send usage statistics to Redpanda Data.",
                  "properties": {
                    "clusterId": {
                      "description": "Specifies the ID of your Redpanda cluster.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Specifies whether usage reporting is enabled.",
                      "type": "boolean"
                    },
                    "organization": {
                      "description": "Specifies the name of the organization using the software. This can be useful for identifying and segmenting usage data by organization, if usage reporting is enabled.\nDeprecated: This value is no longer respected in the redpanda helm chart\nand will be removed in a future version.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "monitoring": {
              "description": "Defines settings for monitoring Redpanda.",
              "properties": {
                "enableHttp2": {
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Specifies whether to create a ServiceMonitor that can be used by Prometheus Operator or VictoriaMetrics Operator to scrape the metrics.",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds custom labels to the ServiceMonitor resource.",
                  "type": "object"
                },
                "scrapeInterval": {
                  "description": "Specifies how often to scrape metrics.",
                  "type": "string"
                },
                "tlsConfig": {
                  "description": "Specifies tls configuration properties.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "nameOverride": {
              "description": "Customizes the labels `app.kubernetes.io/component=<nameOverride>-statefulset` and `app.kubernetes.io/name=<nameOverride>` on the StatefulSet Pods. The default is `redpanda`.",
              "type": "string"
            },
            "nodeSelector": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Specifies on which nodes a Pod should be scheduled. These key/value pairs ensure that Pods are scheduled onto nodes with the specified labels.",
              "type": "object"
            },
            "post_install_job": {
              "description": "Defines settings for the post-install hook, which runs after each install or upgrade. For example, this job is responsible for setting the Enterprise license, if specified.",
              "properties": {
                "affinity": {
                  "description": "Affinity constraints for scheduling Pods. For details, see the\nhttps://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity[Kubernetes' documentation].",
                  "properties": {
                    "nodeAffinity": {
                      "description": "Describes node affinity scheduling rules for the pod.",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                          "items": {
                            "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                            "properties": {
                              "preference": {
                                "description": "A node selector term, associated with the corresponding weight.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "A list of node selector requirements by node's labels.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchFields": {
                                    "description": "A list of node selector requirements by node's fields.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "preference",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                          "properties": {
                            "nodeSelectorTerms": {
                              "description": "Required. A list of node selector terms. The terms are ORed.",
                              "items": {
                                "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "A list of node selector requirements by node's labels.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchFields": {
                                    "description": "A list of node selector requirements by node's fields.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "required": [
                            "nodeSelectorTerms"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podAffinity": {
                      "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                          "items": {
                            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "matchLabelKeys": {
                                    "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "mismatchLabelKeys": {
                                    "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "namespaceSelector": {
                                    "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "namespaces": {
                                    "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "topologyKey"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                          "items": {
                            "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podAntiAffinity": {
                      "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                          "items": {
                            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "matchLabelKeys": {
                                    "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "mismatchLabelKeys": {
                                    "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "namespaceSelector": {
                                    "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "namespaces": {
                                    "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "topologyKey"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                          "items": {
                            "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds annotations to the job to provide additional information or metadata that can be used by other tools or libraries.",
                  "type": "object"
                },
                "enabled": {
                  "description": "Specifies whether the job is deployed.",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Applies labels to the job to facilitate identification and selection based on custom criteria.",
                  "type": "object"
                },
                "podTemplate": {
                  "description": "PodTemplate is a subset of Kubernetes' PodTemplate that will be merged\ninto this Job's PodTemplate.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "spec": {
                      "description": "PodSpecApplyConfiguration is a wrapper around\n[applycorev1.PodSpecApplyConfiguration] that adds support for DeepCopying.",
                      "properties": {
                        "activeDeadlineSeconds": {
                          "format": "int64",
                          "type": "integer"
                        },
                        "affinity": {
                          "description": "AffinityApplyConfiguration represents an declarative configuration of the Affinity type for use\nwith apply.",
                          "properties": {
                            "nodeAffinity": {
                              "description": "NodeAffinityApplyConfiguration represents an declarative configuration of the NodeAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PreferredSchedulingTermApplyConfiguration represents an declarative configuration of the PreferredSchedulingTerm type for use\nwith apply.",
                                    "properties": {
                                      "preference": {
                                        "description": "NodeSelectorTermApplyConfiguration represents an declarative configuration of the NodeSelectorTerm type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "NodeSelectorApplyConfiguration represents an declarative configuration of the NodeSelector type for use\nwith apply.",
                                  "properties": {
                                    "nodeSelectorTerms": {
                                      "items": {
                                        "description": "NodeSelectorTermApplyConfiguration represents an declarative configuration of the NodeSelectorTerm type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAffinity": {
                              "description": "PodAffinityApplyConfiguration represents an declarative configuration of the PodAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "WeightedPodAffinityTermApplyConfiguration represents an declarative configuration of the WeightedPodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "matchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "mismatchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "namespaceSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "mismatchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaceSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAntiAffinity": {
                              "description": "PodAntiAffinityApplyConfiguration represents an declarative configuration of the PodAntiAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "WeightedPodAffinityTermApplyConfiguration represents an declarative configuration of the WeightedPodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "matchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "mismatchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "namespaceSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "mismatchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaceSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "automountServiceAccountToken": {
                          "type": "boolean"
                        },
                        "containers": {
                          "items": {
                            "description": "ContainerApplyConfiguration represents an declarative configuration of the Container type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "dnsConfig": {
                          "description": "PodDNSConfigApplyConfiguration represents an declarative configuration of the PodDNSConfig type for use\nwith apply.",
                          "properties": {
                            "nameservers": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "options": {
                              "items": {
                                "description": "PodDNSConfigOptionApplyConfiguration represents an declarative configuration of the PodDNSConfigOption type for use\nwith apply.",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "searches": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "dnsPolicy": {
                          "description": "DNSPolicy defines how a pod's DNS will be configured.",
                          "type": "string"
                        },
                        "enableServiceLinks": {
                          "type": "boolean"
                        },
                        "ephemeralContainers": {
                          "items": {
                            "description": "EphemeralContainerApplyConfiguration represents an declarative configuration of the EphemeralContainer type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "targetContainerName": {
                                "type": "string"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "hostAliases": {
                          "items": {
                            "description": "HostAliasApplyConfiguration represents an declarative configuration of the HostAlias type for use\nwith apply.",
                            "properties": {
                              "hostnames": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ip": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "hostIPC": {
                          "type": "boolean"
                        },
                        "hostNetwork": {
                          "type": "boolean"
                        },
                        "hostPID": {
                          "type": "boolean"
                        },
                        "hostUsers": {
                          "type": "boolean"
                        },
                        "hostname": {
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "items": {
                            "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "initContainers": {
                          "items": {
                            "description": "ContainerApplyConfiguration represents an declarative configuration of the Container type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "nodeName": {
                          "type": "string"
                        },
                        "nodeSelector": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "os": {
                          "description": "PodOSApplyConfiguration represents an declarative configuration of the PodOS type for use\nwith apply.",
                          "properties": {
                            "name": {
                              "description": "OSName is the set of OS'es that can be used in OS.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "overhead": {
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object"
                        },
                        "preemptionPolicy": {
                          "description": "PreemptionPolicy describes a policy for if/when to preempt a pod.",
                          "type": "string"
                        },
                        "priority": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "priorityClassName": {
                          "type": "string"
                        },
                        "readinessGates": {
                          "items": {
                            "description": "PodReadinessGateApplyConfiguration represents an declarative configuration of the PodReadinessGate type for use\nwith apply.",
                            "properties": {
                              "conditionType": {
                                "description": "PodConditionType is a valid value for PodCondition.Type",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "resourceClaims": {
                          "items": {
                            "description": "PodResourceClaimApplyConfiguration represents an declarative configuration of the PodResourceClaim type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "source": {
                                "description": "ClaimSourceApplyConfiguration represents an declarative configuration of the ClaimSource type for use\nwith apply.",
                                "properties": {
                                  "resourceClaimName": {
                                    "type": "string"
                                  },
                                  "resourceClaimTemplateName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "restartPolicy": {
                          "description": "RestartPolicy describes how the container should be restarted.\nOnly one of the following restart policies may be specified.\nIf none of the following policies is specified, the default one\nis RestartPolicyAlways.",
                          "type": "string"
                        },
                        "runtimeClassName": {
                          "type": "string"
                        },
                        "schedulerName": {
                          "type": "string"
                        },
                        "schedulingGates": {
                          "items": {
                            "description": "PodSchedulingGateApplyConfiguration represents an declarative configuration of the PodSchedulingGate type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "PodSecurityContextApplyConfiguration represents an declarative configuration of the PodSecurityContext type for use\nwith apply.",
                          "properties": {
                            "appArmorProfile": {
                              "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                              "properties": {
                                "localhostProfile": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "fsGroup": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "fsGroupChangePolicy": {
                              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                              "properties": {
                                "level": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                              "properties": {
                                "localhostProfile": {
                                  "type": "string"
                                },
                                "type": {
                                  "description": "SeccompProfileType defines the supported seccomp profile types.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "supplementalGroups": {
                              "items": {
                                "format": "int64",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "sysctls": {
                              "items": {
                                "description": "SysctlApplyConfiguration represents an declarative configuration of the Sysctl type for use\nwith apply.",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "windowsOptions": {
                              "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "serviceAccount": {
                          "type": "string"
                        },
                        "serviceAccountName": {
                          "type": "string"
                        },
                        "setHostnameAsFQDN": {
                          "type": "boolean"
                        },
                        "shareProcessNamespace": {
                          "type": "boolean"
                        },
                        "subdomain": {
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "format": "int64",
                          "type": "integer"
                        },
                        "tolerations": {
                          "items": {
                            "description": "TolerationApplyConfiguration represents an declarative configuration of the Toleration type for use\nwith apply.",
                            "properties": {
                              "effect": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              },
                              "operator": {
                                "description": "A toleration operator is the set of operators that can be used in a toleration.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "format": "int64",
                                "type": "integer"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "topologySpreadConstraints": {
                          "items": {
                            "description": "TopologySpreadConstraintApplyConfiguration represents an declarative configuration of the TopologySpreadConstraint type for use\nwith apply.",
                            "properties": {
                              "labelSelector": {
                                "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                "properties": {
                                  "matchExpressions": {
                                    "items": {
                                      "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "maxSkew": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "minDomains": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "nodeAffinityPolicy": {
                                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                                "type": "string"
                              },
                              "nodeTaintsPolicy": {
                                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                                "type": "string"
                              },
                              "topologyKey": {
                                "type": "string"
                              },
                              "whenUnsatisfiable": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "volumes": {
                          "items": {
                            "description": "VolumeApplyConfiguration represents an declarative configuration of the Volume type for use\nwith apply.",
                            "properties": {
                              "awsElasticBlockStore": {
                                "description": "AWSElasticBlockStoreVolumeSourceApplyConfiguration represents an declarative configuration of the AWSElasticBlockStoreVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "partition": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "azureDisk": {
                                "description": "AzureDiskVolumeSourceApplyConfiguration represents an declarative configuration of the AzureDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "cachingMode": {
                                    "type": "string"
                                  },
                                  "diskName": {
                                    "type": "string"
                                  },
                                  "diskURI": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "azureFile": {
                                "description": "AzureFileVolumeSourceApplyConfiguration represents an declarative configuration of the AzureFileVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  },
                                  "shareName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "cephfs": {
                                "description": "CephFSVolumeSourceApplyConfiguration represents an declarative configuration of the CephFSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "monitors": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretFile": {
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "cinder": {
                                "description": "CinderVolumeSourceApplyConfiguration represents an declarative configuration of the CinderVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "configMap": {
                                "description": "ConfigMapVolumeSourceApplyConfiguration represents an declarative configuration of the ConfigMapVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "optional": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "csi": {
                                "description": "CSIVolumeSourceApplyConfiguration represents an declarative configuration of the CSIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "driver": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "nodePublishSecretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeAttributes": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "downwardAPI": {
                                "description": "DownwardAPIVolumeSourceApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "DownwardAPIVolumeFileApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeFile type for use\nwith apply.",
                                      "properties": {
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "emptyDir": {
                                "description": "EmptyDirVolumeSourceApplyConfiguration represents an declarative configuration of the EmptyDirVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "medium": {
                                    "description": "StorageMedium defines ways that storage can be allocated to a volume.",
                                    "type": "string"
                                  },
                                  "sizeLimit": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "ephemeral": {
                                "description": "EphemeralVolumeSourceApplyConfiguration represents an declarative configuration of the EphemeralVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "volumeClaimTemplate": {
                                    "description": "PersistentVolumeClaimTemplateApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimTemplate type for use\nwith apply.",
                                    "properties": {
                                      "metadata": {
                                        "description": "ObjectMetaApplyConfiguration represents an declarative configuration of the ObjectMeta type for use\nwith apply.",
                                        "properties": {
                                          "annotations": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "creationTimestamp": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "deletionGracePeriodSeconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          },
                                          "deletionTimestamp": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "finalizers": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "generateName": {
                                            "type": "string"
                                          },
                                          "generation": {
                                            "format": "int64",
                                            "type": "integer"
                                          },
                                          "labels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          },
                                          "ownerReferences": {
                                            "items": {
                                              "description": "OwnerReferenceApplyConfiguration represents an declarative configuration of the OwnerReference type for use\nwith apply.",
                                              "properties": {
                                                "apiVersion": {
                                                  "type": "string"
                                                },
                                                "blockOwnerDeletion": {
                                                  "type": "boolean"
                                                },
                                                "controller": {
                                                  "type": "boolean"
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "uid": {
                                                  "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "resourceVersion": {
                                            "type": "string"
                                          },
                                          "uid": {
                                            "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "PersistentVolumeClaimSpecApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimSpec type for use\nwith apply.",
                                        "properties": {
                                          "accessModes": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "dataSource": {
                                            "description": "TypedLocalObjectReferenceApplyConfiguration represents an declarative configuration of the TypedLocalObjectReference type for use\nwith apply.",
                                            "properties": {
                                              "apiGroup": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "dataSourceRef": {
                                            "description": "TypedObjectReferenceApplyConfiguration represents an declarative configuration of the TypedObjectReference type for use\nwith apply.",
                                            "properties": {
                                              "apiGroup": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "resources": {
                                            "description": "VolumeResourceRequirementsApplyConfiguration represents an declarative configuration of the VolumeResourceRequirements type for use\nwith apply.",
                                            "properties": {
                                              "limits": {
                                                "additionalProperties": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                                "type": "object"
                                              },
                                              "requests": {
                                                "additionalProperties": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "selector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "storageClassName": {
                                            "type": "string"
                                          },
                                          "volumeAttributesClassName": {
                                            "type": "string"
                                          },
                                          "volumeMode": {
                                            "description": "PersistentVolumeMode describes how a volume is intended to be consumed, either Block or Filesystem.",
                                            "type": "string"
                                          },
                                          "volumeName": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fc": {
                                "description": "FCVolumeSourceApplyConfiguration represents an declarative configuration of the FCVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "lun": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "targetWWNs": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "wwids": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "flexVolume": {
                                "description": "FlexVolumeSourceApplyConfiguration represents an declarative configuration of the FlexVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "driver": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "options": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "flocker": {
                                "description": "FlockerVolumeSourceApplyConfiguration represents an declarative configuration of the FlockerVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "datasetName": {
                                    "type": "string"
                                  },
                                  "datasetUUID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "gcePersistentDisk": {
                                "description": "GCEPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the GCEPersistentDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "partition": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "pdName": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "gitRepo": {
                                "description": "GitRepoVolumeSourceApplyConfiguration represents an declarative configuration of the GitRepoVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "directory": {
                                    "type": "string"
                                  },
                                  "repository": {
                                    "type": "string"
                                  },
                                  "revision": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "glusterfs": {
                                "description": "GlusterfsVolumeSourceApplyConfiguration represents an declarative configuration of the GlusterfsVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "endpoints": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "hostPath": {
                                "description": "HostPathVolumeSourceApplyConfiguration represents an declarative configuration of the HostPathVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "path": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "iscsi": {
                                "description": "ISCSIVolumeSourceApplyConfiguration represents an declarative configuration of the ISCSIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "chapAuthDiscovery": {
                                    "type": "boolean"
                                  },
                                  "chapAuthSession": {
                                    "type": "boolean"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "initiatorName": {
                                    "type": "string"
                                  },
                                  "iqn": {
                                    "type": "string"
                                  },
                                  "iscsiInterface": {
                                    "type": "string"
                                  },
                                  "lun": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "portals": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "targetPortal": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "nfs": {
                                "description": "NFSVolumeSourceApplyConfiguration represents an declarative configuration of the NFSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "server": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "persistentVolumeClaim": {
                                "description": "PersistentVolumeClaimVolumeSourceApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "claimName": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "photonPersistentDisk": {
                                "description": "PhotonPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the PhotonPersistentDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "pdID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "portworxVolume": {
                                "description": "PortworxVolumeSourceApplyConfiguration represents an declarative configuration of the PortworxVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "projected": {
                                "description": "ProjectedVolumeSourceApplyConfiguration represents an declarative configuration of the ProjectedVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "sources": {
                                    "items": {
                                      "description": "VolumeProjectionApplyConfiguration represents an declarative configuration of the VolumeProjection type for use\nwith apply.",
                                      "properties": {
                                        "clusterTrustBundle": {
                                          "description": "ClusterTrustBundleProjectionApplyConfiguration represents an declarative configuration of the ClusterTrustBundleProjection type for use\nwith apply.",
                                          "properties": {
                                            "labelSelector": {
                                              "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                              "properties": {
                                                "matchExpressions": {
                                                  "items": {
                                                    "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "matchLabels": {
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "signerName": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "configMap": {
                                          "description": "ConfigMapProjectionApplyConfiguration represents an declarative configuration of the ConfigMapProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "downwardAPI": {
                                          "description": "DownwardAPIProjectionApplyConfiguration represents an declarative configuration of the DownwardAPIProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "DownwardAPIVolumeFileApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeFile type for use\nwith apply.",
                                                "properties": {
                                                  "fieldRef": {
                                                    "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  },
                                                  "resourceFieldRef": {
                                                    "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "anyOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ],
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secret": {
                                          "description": "SecretProjectionApplyConfiguration represents an declarative configuration of the SecretProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "serviceAccountToken": {
                                          "description": "ServiceAccountTokenProjectionApplyConfiguration represents an declarative configuration of the ServiceAccountTokenProjection type for use\nwith apply.",
                                          "properties": {
                                            "audience": {
                                              "type": "string"
                                            },
                                            "expirationSeconds": {
                                              "format": "int64",
                                              "type": "integer"
                                            },
                                            "path": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "quobyte": {
                                "description": "QuobyteVolumeSourceApplyConfiguration represents an declarative configuration of the QuobyteVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "group": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "registry": {
                                    "type": "string"
                                  },
                                  "tenant": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  },
                                  "volume": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "rbd": {
                                "description": "RBDVolumeSourceApplyConfiguration represents an declarative configuration of the RBDVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "keyring": {
                                    "type": "string"
                                  },
                                  "monitors": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "pool": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "scaleIO": {
                                "description": "ScaleIOVolumeSourceApplyConfiguration represents an declarative configuration of the ScaleIOVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "gateway": {
                                    "type": "string"
                                  },
                                  "protectionDomain": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "sslEnabled": {
                                    "type": "boolean"
                                  },
                                  "storageMode": {
                                    "type": "string"
                                  },
                                  "storagePool": {
                                    "type": "string"
                                  },
                                  "system": {
                                    "type": "string"
                                  },
                                  "volumeName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "secret": {
                                "description": "SecretVolumeSourceApplyConfiguration represents an declarative configuration of the SecretVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "optional": {
                                    "type": "boolean"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "storageos": {
                                "description": "StorageOSVolumeSourceApplyConfiguration represents an declarative configuration of the StorageOSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "volumeName": {
                                    "type": "string"
                                  },
                                  "volumeNamespace": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "vsphereVolume": {
                                "description": "VsphereVirtualDiskVolumeSourceApplyConfiguration represents an declarative configuration of the VsphereVirtualDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "storagePolicyID": {
                                    "type": "string"
                                  },
                                  "storagePolicyName": {
                                    "type": "string"
                                  },
                                  "volumePath": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "resources": {
                  "description": "Sets resource requirements (CPU, memory) for the job to ensure proper allocation and limit resource usage.",
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "securityContext": {
                  "description": "SecurityContext is deprecated. Prefer [PodTemplate.Spec.SecurityContext]\nor [PodTemplate.Spec.Containers[*].SecurityContext].",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "appArmorProfile": {
                      "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "capabilities": {
                      "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "privileged": {
                      "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "procMount": {
                      "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "level": {
                          "description": "Level is SELinux level label that applies to the container.",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a SELinux role label that applies to the container.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is a SELinux type label that applies to the container.",
                          "type": "string"
                        },
                        "user": {
                          "description": "User is a SELinux user label that applies to the container.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "seccompProfile": {
                      "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "windowsOptions": {
                      "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                          "type": "string"
                        },
                        "hostProcess": {
                          "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                          "type": "boolean"
                        },
                        "runAsUserName": {
                          "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "post_upgrade_job": {
              "description": "Defines settings for the post-upgrade hook, which runs after each update. For example, this job is responsible for setting cluster configuration properties and restarting services such as Schema Registry, if required.",
              "properties": {
                "affinity": {
                  "description": "Affinity constraints for scheduling Pods. For details, see the\nhttps://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity[Kubernetes' documentation].",
                  "properties": {
                    "nodeAffinity": {
                      "description": "Describes node affinity scheduling rules for the pod.",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                          "items": {
                            "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                            "properties": {
                              "preference": {
                                "description": "A node selector term, associated with the corresponding weight.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "A list of node selector requirements by node's labels.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchFields": {
                                    "description": "A list of node selector requirements by node's fields.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "preference",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                          "properties": {
                            "nodeSelectorTerms": {
                              "description": "Required. A list of node selector terms. The terms are ORed.",
                              "items": {
                                "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "A list of node selector requirements by node's labels.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchFields": {
                                    "description": "A list of node selector requirements by node's fields.",
                                    "items": {
                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "The label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "required": [
                            "nodeSelectorTerms"
                          ],
                          "type": "object",
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podAffinity": {
                      "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                          "items": {
                            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "matchLabelKeys": {
                                    "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "mismatchLabelKeys": {
                                    "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "namespaceSelector": {
                                    "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "namespaces": {
                                    "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "topologyKey"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                          "items": {
                            "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podAntiAffinity": {
                      "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                          "items": {
                            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                "properties": {
                                  "labelSelector": {
                                    "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "matchLabelKeys": {
                                    "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "mismatchLabelKeys": {
                                    "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "namespaceSelector": {
                                    "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "x-kubernetes-map-type": "atomic",
                                    "additionalProperties": false
                                  },
                                  "namespaces": {
                                    "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "topologyKey": {
                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "topologyKey"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                          "items": {
                            "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds annotations to the job to provide additional information or metadata that can be used by other tools or libraries.",
                  "type": "object"
                },
                "backoffLimit": {
                  "format": "int32",
                  "type": "integer"
                },
                "enabled": {
                  "description": "Specifies whether the job is deployed.",
                  "type": "boolean"
                },
                "extraEnv": {
                  "description": "Adds environment variables to the job container to configure its runtime behavior.",
                  "items": {
                    "description": "EnvVar represents an environment variable present in a Container.",
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                        "type": "string"
                      },
                      "valueFrom": {
                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "default": "",
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "fieldPath"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": "string"
                              },
                              "divisor": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "required": [
                              "resource"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "default": "",
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "key"
                            ],
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "extraEnvFrom": {
                  "description": "Specifies environment variables from external sources, such as ConfigMap resources, or Secret resources, to dynamically configure the job.",
                  "items": {
                    "description": "EnvFromSource represents the source of a set of ConfigMaps",
                    "properties": {
                      "configMapRef": {
                        "description": "The ConfigMap to select from",
                        "properties": {
                          "name": {
                            "default": "",
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap must be defined",
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "prefix": {
                        "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "The Secret to select from",
                        "properties": {
                          "name": {
                            "default": "",
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret must be defined",
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Applies labels to the job to facilitate identification and selection based on custom criteria.",
                  "type": "object"
                },
                "podTemplate": {
                  "description": "PodTemplate is a subset of Kubernetes' PodTemplate that will be merged\ninto this Job's PodTemplate.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "spec": {
                      "description": "PodSpecApplyConfiguration is a wrapper around\n[applycorev1.PodSpecApplyConfiguration] that adds support for DeepCopying.",
                      "properties": {
                        "activeDeadlineSeconds": {
                          "format": "int64",
                          "type": "integer"
                        },
                        "affinity": {
                          "description": "AffinityApplyConfiguration represents an declarative configuration of the Affinity type for use\nwith apply.",
                          "properties": {
                            "nodeAffinity": {
                              "description": "NodeAffinityApplyConfiguration represents an declarative configuration of the NodeAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PreferredSchedulingTermApplyConfiguration represents an declarative configuration of the PreferredSchedulingTerm type for use\nwith apply.",
                                    "properties": {
                                      "preference": {
                                        "description": "NodeSelectorTermApplyConfiguration represents an declarative configuration of the NodeSelectorTerm type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "NodeSelectorApplyConfiguration represents an declarative configuration of the NodeSelector type for use\nwith apply.",
                                  "properties": {
                                    "nodeSelectorTerms": {
                                      "items": {
                                        "description": "NodeSelectorTermApplyConfiguration represents an declarative configuration of the NodeSelectorTerm type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAffinity": {
                              "description": "PodAffinityApplyConfiguration represents an declarative configuration of the PodAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "WeightedPodAffinityTermApplyConfiguration represents an declarative configuration of the WeightedPodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "matchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "mismatchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "namespaceSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "mismatchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaceSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAntiAffinity": {
                              "description": "PodAntiAffinityApplyConfiguration represents an declarative configuration of the PodAntiAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "WeightedPodAffinityTermApplyConfiguration represents an declarative configuration of the WeightedPodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "matchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "mismatchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "namespaceSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "mismatchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaceSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "automountServiceAccountToken": {
                          "type": "boolean"
                        },
                        "containers": {
                          "items": {
                            "description": "ContainerApplyConfiguration represents an declarative configuration of the Container type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "dnsConfig": {
                          "description": "PodDNSConfigApplyConfiguration represents an declarative configuration of the PodDNSConfig type for use\nwith apply.",
                          "properties": {
                            "nameservers": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "options": {
                              "items": {
                                "description": "PodDNSConfigOptionApplyConfiguration represents an declarative configuration of the PodDNSConfigOption type for use\nwith apply.",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "searches": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "dnsPolicy": {
                          "description": "DNSPolicy defines how a pod's DNS will be configured.",
                          "type": "string"
                        },
                        "enableServiceLinks": {
                          "type": "boolean"
                        },
                        "ephemeralContainers": {
                          "items": {
                            "description": "EphemeralContainerApplyConfiguration represents an declarative configuration of the EphemeralContainer type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "targetContainerName": {
                                "type": "string"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "hostAliases": {
                          "items": {
                            "description": "HostAliasApplyConfiguration represents an declarative configuration of the HostAlias type for use\nwith apply.",
                            "properties": {
                              "hostnames": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ip": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "hostIPC": {
                          "type": "boolean"
                        },
                        "hostNetwork": {
                          "type": "boolean"
                        },
                        "hostPID": {
                          "type": "boolean"
                        },
                        "hostUsers": {
                          "type": "boolean"
                        },
                        "hostname": {
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "items": {
                            "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "initContainers": {
                          "items": {
                            "description": "ContainerApplyConfiguration represents an declarative configuration of the Container type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "nodeName": {
                          "type": "string"
                        },
                        "nodeSelector": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "os": {
                          "description": "PodOSApplyConfiguration represents an declarative configuration of the PodOS type for use\nwith apply.",
                          "properties": {
                            "name": {
                              "description": "OSName is the set of OS'es that can be used in OS.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "overhead": {
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object"
                        },
                        "preemptionPolicy": {
                          "description": "PreemptionPolicy describes a policy for if/when to preempt a pod.",
                          "type": "string"
                        },
                        "priority": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "priorityClassName": {
                          "type": "string"
                        },
                        "readinessGates": {
                          "items": {
                            "description": "PodReadinessGateApplyConfiguration represents an declarative configuration of the PodReadinessGate type for use\nwith apply.",
                            "properties": {
                              "conditionType": {
                                "description": "PodConditionType is a valid value for PodCondition.Type",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "resourceClaims": {
                          "items": {
                            "description": "PodResourceClaimApplyConfiguration represents an declarative configuration of the PodResourceClaim type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "source": {
                                "description": "ClaimSourceApplyConfiguration represents an declarative configuration of the ClaimSource type for use\nwith apply.",
                                "properties": {
                                  "resourceClaimName": {
                                    "type": "string"
                                  },
                                  "resourceClaimTemplateName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "restartPolicy": {
                          "description": "RestartPolicy describes how the container should be restarted.\nOnly one of the following restart policies may be specified.\nIf none of the following policies is specified, the default one\nis RestartPolicyAlways.",
                          "type": "string"
                        },
                        "runtimeClassName": {
                          "type": "string"
                        },
                        "schedulerName": {
                          "type": "string"
                        },
                        "schedulingGates": {
                          "items": {
                            "description": "PodSchedulingGateApplyConfiguration represents an declarative configuration of the PodSchedulingGate type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "PodSecurityContextApplyConfiguration represents an declarative configuration of the PodSecurityContext type for use\nwith apply.",
                          "properties": {
                            "appArmorProfile": {
                              "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                              "properties": {
                                "localhostProfile": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "fsGroup": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "fsGroupChangePolicy": {
                              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                              "properties": {
                                "level": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                              "properties": {
                                "localhostProfile": {
                                  "type": "string"
                                },
                                "type": {
                                  "description": "SeccompProfileType defines the supported seccomp profile types.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "supplementalGroups": {
                              "items": {
                                "format": "int64",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "sysctls": {
                              "items": {
                                "description": "SysctlApplyConfiguration represents an declarative configuration of the Sysctl type for use\nwith apply.",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "windowsOptions": {
                              "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "serviceAccount": {
                          "type": "string"
                        },
                        "serviceAccountName": {
                          "type": "string"
                        },
                        "setHostnameAsFQDN": {
                          "type": "boolean"
                        },
                        "shareProcessNamespace": {
                          "type": "boolean"
                        },
                        "subdomain": {
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "format": "int64",
                          "type": "integer"
                        },
                        "tolerations": {
                          "items": {
                            "description": "TolerationApplyConfiguration represents an declarative configuration of the Toleration type for use\nwith apply.",
                            "properties": {
                              "effect": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              },
                              "operator": {
                                "description": "A toleration operator is the set of operators that can be used in a toleration.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "format": "int64",
                                "type": "integer"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "topologySpreadConstraints": {
                          "items": {
                            "description": "TopologySpreadConstraintApplyConfiguration represents an declarative configuration of the TopologySpreadConstraint type for use\nwith apply.",
                            "properties": {
                              "labelSelector": {
                                "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                "properties": {
                                  "matchExpressions": {
                                    "items": {
                                      "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "maxSkew": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "minDomains": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "nodeAffinityPolicy": {
                                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                                "type": "string"
                              },
                              "nodeTaintsPolicy": {
                                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                                "type": "string"
                              },
                              "topologyKey": {
                                "type": "string"
                              },
                              "whenUnsatisfiable": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "volumes": {
                          "items": {
                            "description": "VolumeApplyConfiguration represents an declarative configuration of the Volume type for use\nwith apply.",
                            "properties": {
                              "awsElasticBlockStore": {
                                "description": "AWSElasticBlockStoreVolumeSourceApplyConfiguration represents an declarative configuration of the AWSElasticBlockStoreVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "partition": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "azureDisk": {
                                "description": "AzureDiskVolumeSourceApplyConfiguration represents an declarative configuration of the AzureDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "cachingMode": {
                                    "type": "string"
                                  },
                                  "diskName": {
                                    "type": "string"
                                  },
                                  "diskURI": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "azureFile": {
                                "description": "AzureFileVolumeSourceApplyConfiguration represents an declarative configuration of the AzureFileVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  },
                                  "shareName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "cephfs": {
                                "description": "CephFSVolumeSourceApplyConfiguration represents an declarative configuration of the CephFSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "monitors": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretFile": {
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "cinder": {
                                "description": "CinderVolumeSourceApplyConfiguration represents an declarative configuration of the CinderVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "configMap": {
                                "description": "ConfigMapVolumeSourceApplyConfiguration represents an declarative configuration of the ConfigMapVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "optional": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "csi": {
                                "description": "CSIVolumeSourceApplyConfiguration represents an declarative configuration of the CSIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "driver": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "nodePublishSecretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeAttributes": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "downwardAPI": {
                                "description": "DownwardAPIVolumeSourceApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "DownwardAPIVolumeFileApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeFile type for use\nwith apply.",
                                      "properties": {
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "emptyDir": {
                                "description": "EmptyDirVolumeSourceApplyConfiguration represents an declarative configuration of the EmptyDirVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "medium": {
                                    "description": "StorageMedium defines ways that storage can be allocated to a volume.",
                                    "type": "string"
                                  },
                                  "sizeLimit": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "ephemeral": {
                                "description": "EphemeralVolumeSourceApplyConfiguration represents an declarative configuration of the EphemeralVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "volumeClaimTemplate": {
                                    "description": "PersistentVolumeClaimTemplateApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimTemplate type for use\nwith apply.",
                                    "properties": {
                                      "metadata": {
                                        "description": "ObjectMetaApplyConfiguration represents an declarative configuration of the ObjectMeta type for use\nwith apply.",
                                        "properties": {
                                          "annotations": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "creationTimestamp": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "deletionGracePeriodSeconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          },
                                          "deletionTimestamp": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "finalizers": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "generateName": {
                                            "type": "string"
                                          },
                                          "generation": {
                                            "format": "int64",
                                            "type": "integer"
                                          },
                                          "labels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          },
                                          "ownerReferences": {
                                            "items": {
                                              "description": "OwnerReferenceApplyConfiguration represents an declarative configuration of the OwnerReference type for use\nwith apply.",
                                              "properties": {
                                                "apiVersion": {
                                                  "type": "string"
                                                },
                                                "blockOwnerDeletion": {
                                                  "type": "boolean"
                                                },
                                                "controller": {
                                                  "type": "boolean"
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "uid": {
                                                  "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "resourceVersion": {
                                            "type": "string"
                                          },
                                          "uid": {
                                            "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "PersistentVolumeClaimSpecApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimSpec type for use\nwith apply.",
                                        "properties": {
                                          "accessModes": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "dataSource": {
                                            "description": "TypedLocalObjectReferenceApplyConfiguration represents an declarative configuration of the TypedLocalObjectReference type for use\nwith apply.",
                                            "properties": {
                                              "apiGroup": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "dataSourceRef": {
                                            "description": "TypedObjectReferenceApplyConfiguration represents an declarative configuration of the TypedObjectReference type for use\nwith apply.",
                                            "properties": {
                                              "apiGroup": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "resources": {
                                            "description": "VolumeResourceRequirementsApplyConfiguration represents an declarative configuration of the VolumeResourceRequirements type for use\nwith apply.",
                                            "properties": {
                                              "limits": {
                                                "additionalProperties": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                                "type": "object"
                                              },
                                              "requests": {
                                                "additionalProperties": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "selector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "storageClassName": {
                                            "type": "string"
                                          },
                                          "volumeAttributesClassName": {
                                            "type": "string"
                                          },
                                          "volumeMode": {
                                            "description": "PersistentVolumeMode describes how a volume is intended to be consumed, either Block or Filesystem.",
                                            "type": "string"
                                          },
                                          "volumeName": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fc": {
                                "description": "FCVolumeSourceApplyConfiguration represents an declarative configuration of the FCVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "lun": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "targetWWNs": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "wwids": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "flexVolume": {
                                "description": "FlexVolumeSourceApplyConfiguration represents an declarative configuration of the FlexVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "driver": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "options": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "flocker": {
                                "description": "FlockerVolumeSourceApplyConfiguration represents an declarative configuration of the FlockerVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "datasetName": {
                                    "type": "string"
                                  },
                                  "datasetUUID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "gcePersistentDisk": {
                                "description": "GCEPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the GCEPersistentDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "partition": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "pdName": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "gitRepo": {
                                "description": "GitRepoVolumeSourceApplyConfiguration represents an declarative configuration of the GitRepoVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "directory": {
                                    "type": "string"
                                  },
                                  "repository": {
                                    "type": "string"
                                  },
                                  "revision": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "glusterfs": {
                                "description": "GlusterfsVolumeSourceApplyConfiguration represents an declarative configuration of the GlusterfsVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "endpoints": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "hostPath": {
                                "description": "HostPathVolumeSourceApplyConfiguration represents an declarative configuration of the HostPathVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "path": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "iscsi": {
                                "description": "ISCSIVolumeSourceApplyConfiguration represents an declarative configuration of the ISCSIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "chapAuthDiscovery": {
                                    "type": "boolean"
                                  },
                                  "chapAuthSession": {
                                    "type": "boolean"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "initiatorName": {
                                    "type": "string"
                                  },
                                  "iqn": {
                                    "type": "string"
                                  },
                                  "iscsiInterface": {
                                    "type": "string"
                                  },
                                  "lun": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "portals": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "targetPortal": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "nfs": {
                                "description": "NFSVolumeSourceApplyConfiguration represents an declarative configuration of the NFSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "server": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "persistentVolumeClaim": {
                                "description": "PersistentVolumeClaimVolumeSourceApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "claimName": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "photonPersistentDisk": {
                                "description": "PhotonPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the PhotonPersistentDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "pdID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "portworxVolume": {
                                "description": "PortworxVolumeSourceApplyConfiguration represents an declarative configuration of the PortworxVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "projected": {
                                "description": "ProjectedVolumeSourceApplyConfiguration represents an declarative configuration of the ProjectedVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "sources": {
                                    "items": {
                                      "description": "VolumeProjectionApplyConfiguration represents an declarative configuration of the VolumeProjection type for use\nwith apply.",
                                      "properties": {
                                        "clusterTrustBundle": {
                                          "description": "ClusterTrustBundleProjectionApplyConfiguration represents an declarative configuration of the ClusterTrustBundleProjection type for use\nwith apply.",
                                          "properties": {
                                            "labelSelector": {
                                              "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                              "properties": {
                                                "matchExpressions": {
                                                  "items": {
                                                    "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "matchLabels": {
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "signerName": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "configMap": {
                                          "description": "ConfigMapProjectionApplyConfiguration represents an declarative configuration of the ConfigMapProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "downwardAPI": {
                                          "description": "DownwardAPIProjectionApplyConfiguration represents an declarative configuration of the DownwardAPIProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "DownwardAPIVolumeFileApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeFile type for use\nwith apply.",
                                                "properties": {
                                                  "fieldRef": {
                                                    "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  },
                                                  "resourceFieldRef": {
                                                    "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "anyOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ],
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secret": {
                                          "description": "SecretProjectionApplyConfiguration represents an declarative configuration of the SecretProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "serviceAccountToken": {
                                          "description": "ServiceAccountTokenProjectionApplyConfiguration represents an declarative configuration of the ServiceAccountTokenProjection type for use\nwith apply.",
                                          "properties": {
                                            "audience": {
                                              "type": "string"
                                            },
                                            "expirationSeconds": {
                                              "format": "int64",
                                              "type": "integer"
                                            },
                                            "path": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "quobyte": {
                                "description": "QuobyteVolumeSourceApplyConfiguration represents an declarative configuration of the QuobyteVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "group": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "registry": {
                                    "type": "string"
                                  },
                                  "tenant": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  },
                                  "volume": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "rbd": {
                                "description": "RBDVolumeSourceApplyConfiguration represents an declarative configuration of the RBDVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "keyring": {
                                    "type": "string"
                                  },
                                  "monitors": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "pool": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "scaleIO": {
                                "description": "ScaleIOVolumeSourceApplyConfiguration represents an declarative configuration of the ScaleIOVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "gateway": {
                                    "type": "string"
                                  },
                                  "protectionDomain": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "sslEnabled": {
                                    "type": "boolean"
                                  },
                                  "storageMode": {
                                    "type": "string"
                                  },
                                  "storagePool": {
                                    "type": "string"
                                  },
                                  "system": {
                                    "type": "string"
                                  },
                                  "volumeName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "secret": {
                                "description": "SecretVolumeSourceApplyConfiguration represents an declarative configuration of the SecretVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "optional": {
                                    "type": "boolean"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "storageos": {
                                "description": "StorageOSVolumeSourceApplyConfiguration represents an declarative configuration of the StorageOSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "volumeName": {
                                    "type": "string"
                                  },
                                  "volumeNamespace": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "vsphereVolume": {
                                "description": "VsphereVirtualDiskVolumeSourceApplyConfiguration represents an declarative configuration of the VsphereVirtualDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "storagePolicyID": {
                                    "type": "string"
                                  },
                                  "storagePolicyName": {
                                    "type": "string"
                                  },
                                  "volumePath": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "resources": {
                  "description": "Sets resource requirements (CPU, memory) for the job to ensure proper allocation and limit resource usage.",
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "securityContext": {
                  "description": "SecurityContext is deprecated. Prefer [PodTemplate.Spec.SecurityContext]\nor [PodTemplate.Spec.Containers[*].SecurityContext].",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "appArmorProfile": {
                      "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "capabilities": {
                      "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "privileged": {
                      "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "procMount": {
                      "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "level": {
                          "description": "Level is SELinux level label that applies to the container.",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a SELinux role label that applies to the container.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is a SELinux type label that applies to the container.",
                          "type": "string"
                        },
                        "user": {
                          "description": "User is a SELinux user label that applies to the container.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "seccompProfile": {
                      "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "windowsOptions": {
                      "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                          "type": "string"
                        },
                        "hostProcess": {
                          "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                          "type": "boolean"
                        },
                        "runAsUserName": {
                          "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rackAwareness": {
              "description": "Defines rack awareness settings.",
              "properties": {
                "enabled": {
                  "description": "Specifies whether rack awareness is enabled. When enabled, Kubernetes failure zones are treated as racks. Redpanda maps each rack to a failure zone and places partition replicas across them. Requires `rbac.enabled` set to `true`.",
                  "type": "boolean"
                },
                "nodeAnnotation": {
                  "description": "Specifies the key in Node labels or annotations to use to denote failure zones.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rbac": {
              "description": "Defines Role Based Access Control (RBAC) settings.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds custom annotations to the RBAC resources.",
                  "type": "object"
                },
                "enabled": {
                  "description": "Whether RBAC is enabled. Enable for features that need extra privileges, such as rack awareness. If you use the Redpanda Operator, you must deploy it with the `--set rbac.createRPKBundleCRs=true` flag to give it the required ClusterRoles.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "resources": {
              "description": "Defines container resource settings.",
              "properties": {
                "cpu": {
                  "description": "Specifies the number of CPU cores.",
                  "properties": {
                    "cores": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "Specifies the number of CPU cores available to the application. Redpanda makes use of a thread per core model. For details, see https://docs.redpanda.com/current/get-started/architecture/#thread-per-core-model. For this reason, Redpanda should only be given full cores. Note: You can increase cores, but decreasing cores is not currently supported. See the GitHub issue:https://github.com/redpanda-data/redpanda/issues/350. This setting is equivalent to `--smp`, `resources.requests.cpu`, and `resources.limits.cpu`. For production, use `4` or greater.",
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "overprovisioned": {
                      "description": "Specifies whether Redpanda assumes it has all of the provisioned CPU. This should be `true` unless the container has CPU affinity. Equivalent to: `--idle-poll-time-us 0`, `--thread-affinity 0`, and `--poll-aio 0`. If the value of full cores in `resources.cpu.cores` is less than `1`, this setting is set to `true`.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "limits": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "type": "object"
                },
                "memory": {
                  "description": "Specifies the amount of memory.",
                  "properties": {
                    "container": {
                      "description": "Defines resource limits for containers.",
                      "properties": {
                        "max": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Specifies the maximum resources that can be allocated to a container.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "min": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Specifies the minimum resources required for a container.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "enable_memory_locking": {
                      "description": "Enables memory locking. For production, set to `true`.",
                      "type": "boolean"
                    },
                    "redpanda": {
                      "description": "Allows you to optionally specify the memory size for both the Redpanda process and the underlying reserved memory used by Seastar.",
                      "properties": {
                        "memory": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Memory for the Redpanda process. This must be lower than the container's memory (`resources.memory.container.min` if provided, otherwise `resources.memory.container.max`). Equivalent to `--memory`. For production, use 8Gi or greater.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "reserveMemory": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Memory reserved for the OS. Any value above 1Gi will provide diminishing performance benefits. Equivalent to `--reserve-memory`. For production, use 1Gi.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "requests": {
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "service": {
              "description": "Defines settings for the headless ClusterIP Service.",
              "properties": {
                "internal": {
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "serviceAccount": {
              "description": "Defines Service account settings.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds custom annotations to the ServiceAccount resources.",
                  "type": "object"
                },
                "automountServiceAccountToken": {
                  "description": "Specifies whether a service account should automount API-Credentials",
                  "type": "boolean"
                },
                "create": {
                  "description": "Specifies whether a ServiceAccount should be created.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Specifies the name of the ServiceAccount.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "statefulset": {
              "description": "Defines settings for the StatefulSet that manages Redpanda brokers.",
              "properties": {
                "additionalRedpandaCmdFlags": {
                  "description": "Includes additional command flags for Redpanda at startup to customize its runtime behavior.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "additionalSelectorLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Adds annotations to the StatefulSet to provide additional information or metadata.\nPlease use PodTemplate to add additional annotation or labels for Pods managed by Statefulset.",
                  "type": "object"
                },
                "budget": {
                  "description": "Defines the management of disruptions affecting the Pods in the StatefulSet.",
                  "properties": {
                    "maxUnavailable": {
                      "description": "Defines the maximum number of Pods that can be unavailable during a voluntary disruption.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "extraVolumeMounts": {
                  "description": "Specifies extra volume mounts for the Pods.",
                  "type": "string"
                },
                "extraVolumes": {
                  "description": "Defines additional volumes for the Pods.",
                  "type": "string"
                },
                "initContainerImage": {
                  "description": "Defines the init container image used to perform initial setup tasks before the main containers start.",
                  "properties": {
                    "repository": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "initContainers": {
                  "description": "Configures the init container used to perform initial setup tasks before the main containers start.",
                  "properties": {
                    "configurator": {
                      "properties": {
                        "extraVolumeMounts": {
                          "type": "string"
                        },
                        "resources": {
                          "description": "ResourceRequirements describes the compute resource requirements.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "extraInitContainers": {
                      "type": "string"
                    },
                    "fsValidator": {
                      "description": "Defines the setting for init container that not allow to start Redpanda until filesystem matches",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "expectedFS": {
                          "type": "string"
                        },
                        "extraVolumeMounts": {
                          "description": "Adds extra volume mounts.",
                          "type": "string"
                        },
                        "resources": {
                          "description": "Specifies the resource requirements.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "setDataDirOwnership": {
                      "description": "Defines the settings related to ownership of the Redpanda data directory in environments where root access is restricted.",
                      "properties": {
                        "enabled": {
                          "description": "Specifies whether to enable root access. Enable only in environments where root access is not allowed, such as minikube.",
                          "type": "boolean"
                        },
                        "extraVolumeMounts": {
                          "description": "Adds extra volume mounts.",
                          "type": "string"
                        },
                        "resources": {
                          "description": "Specifies the resource requirements.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "setTieredStorageCacheDirOwnership": {
                      "description": "Defines the settings related to ownership of the Tiered Storage cache in environments where root access is restricted.",
                      "properties": {
                        "extraVolumeMounts": {
                          "type": "string"
                        },
                        "resources": {
                          "description": "ResourceRequirements describes the compute resource requirements.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "tuning": {
                      "description": "Defines settings for the autotuner tool in Redpanda. The autotuner identifies the hardware configuration in the container and optimizes the Linux kernel to give you the best performance.",
                      "properties": {
                        "ballast_file_path": {
                          "description": "Specifies the file path for ballast file. A ballast file is an empty file that takes up disk space. If Redpanda runs out of disk space and becomes unavailable, you can delete the ballast file as a last resort. This clears up some space and gives you time to delete topics or records and change your retention properties.",
                          "type": "string"
                        },
                        "ballast_file_size": {
                          "description": "Defines the size of the ballast file.",
                          "type": "string"
                        },
                        "extraVolumeMounts": {
                          "description": "Configures additional volume mounts for the Pod.",
                          "type": "string"
                        },
                        "resources": {
                          "description": "Sets resource requirements such as CPU and memory limits.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "tune_aio_events": {
                          "description": "Specifies whether to increase the number of allowed asynchronous IO events.",
                          "type": "boolean"
                        },
                        "tune_ballast_file": {
                          "description": "Specifies whether to create the ballast file.",
                          "type": "boolean"
                        },
                        "tune_clocksource": {
                          "description": "Specifies whether to synchronize NTP.",
                          "type": "boolean"
                        },
                        "well_known_io": {
                          "description": "Specifies the vendor, VM type, and storage device type that Redpanda runs on, in the format <vendor>:<vm>:<storage>. This hints to Redpanda which configuration values it should use for the Redpanda IO scheduler.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "livenessProbe": {
                  "description": "Defines liveness probes to monitor the health of the Pods and restart them if necessary.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Sets the number of consecutive failures required to consider a Pod as not live.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "Specifies the time in seconds to wait before the first probe is initiated.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "Determines the frequency in seconds of performing the probe.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "nodeSelector": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Applies node selectors to schedule Pods on specific nodes based on labels.",
                  "type": "object"
                },
                "podAffinity": {
                  "description": "Defines Pod affinity rules to influence the scheduling and placement of Pods relative to other Pods.",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                      "items": {
                        "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                        "properties": {
                          "podAffinityTerm": {
                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                            "properties": {
                              "labelSelector": {
                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "mismatchLabelKeys": {
                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "namespaceSelector": {
                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "atomic",
                                "additionalProperties": false
                              },
                              "namespaces": {
                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "topologyKey": {
                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "weight": {
                            "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "podAffinityTerm",
                          "weight"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                      "items": {
                        "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "matchLabelKeys": {
                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "mismatchLabelKeys": {
                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "namespaceSelector": {
                            "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "namespaces": {
                            "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "topologyKey"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "podAntiAffinity": {
                  "description": "Defines Pod anti-affinity rules to prevent Pods from being scheduled together on the same node.",
                  "properties": {
                    "custom": {
                      "description": "Custom configures additional custom anti-affinity rules.",
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "topologyKey": {
                      "description": "TopologyKey specifies the topology key used to spread Pods across different nodes or other topologies.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type defines the type of anti-affinity, such as `soft` or `hard`.",
                      "type": "string"
                    },
                    "weight": {
                      "description": "Weight sets the weight associated with the soft anti-affinity rule.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "podTemplate": {
                  "description": "PodTemplate is a subset of Kubernetes' PodTemplate that will be merged\ninto this StatefulSet's PodTemplate.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "spec": {
                      "description": "PodSpecApplyConfiguration is a wrapper around\n[applycorev1.PodSpecApplyConfiguration] that adds support for DeepCopying.",
                      "properties": {
                        "activeDeadlineSeconds": {
                          "format": "int64",
                          "type": "integer"
                        },
                        "affinity": {
                          "description": "AffinityApplyConfiguration represents an declarative configuration of the Affinity type for use\nwith apply.",
                          "properties": {
                            "nodeAffinity": {
                              "description": "NodeAffinityApplyConfiguration represents an declarative configuration of the NodeAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PreferredSchedulingTermApplyConfiguration represents an declarative configuration of the PreferredSchedulingTerm type for use\nwith apply.",
                                    "properties": {
                                      "preference": {
                                        "description": "NodeSelectorTermApplyConfiguration represents an declarative configuration of the NodeSelectorTerm type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "NodeSelectorApplyConfiguration represents an declarative configuration of the NodeSelector type for use\nwith apply.",
                                  "properties": {
                                    "nodeSelectorTerms": {
                                      "items": {
                                        "description": "NodeSelectorTermApplyConfiguration represents an declarative configuration of the NodeSelectorTerm type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "items": {
                                              "description": "NodeSelectorRequirementApplyConfiguration represents an declarative configuration of the NodeSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAffinity": {
                              "description": "PodAffinityApplyConfiguration represents an declarative configuration of the PodAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "WeightedPodAffinityTermApplyConfiguration represents an declarative configuration of the WeightedPodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "matchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "mismatchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "namespaceSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "mismatchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaceSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAntiAffinity": {
                              "description": "PodAntiAffinityApplyConfiguration represents an declarative configuration of the PodAntiAffinity type for use\nwith apply.",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "WeightedPodAffinityTermApplyConfiguration represents an declarative configuration of the WeightedPodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "matchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "mismatchLabelKeys": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "namespaceSelector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "format": "int32",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "items": {
                                    "description": "PodAffinityTermApplyConfiguration represents an declarative configuration of the PodAffinityTerm type for use\nwith apply.",
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "mismatchLabelKeys": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "namespaceSelector": {
                                        "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                        "properties": {
                                          "matchExpressions": {
                                            "items": {
                                              "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                              "properties": {
                                                "key": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "automountServiceAccountToken": {
                          "type": "boolean"
                        },
                        "containers": {
                          "items": {
                            "description": "ContainerApplyConfiguration represents an declarative configuration of the Container type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "dnsConfig": {
                          "description": "PodDNSConfigApplyConfiguration represents an declarative configuration of the PodDNSConfig type for use\nwith apply.",
                          "properties": {
                            "nameservers": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "options": {
                              "items": {
                                "description": "PodDNSConfigOptionApplyConfiguration represents an declarative configuration of the PodDNSConfigOption type for use\nwith apply.",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "searches": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "dnsPolicy": {
                          "description": "DNSPolicy defines how a pod's DNS will be configured.",
                          "type": "string"
                        },
                        "enableServiceLinks": {
                          "type": "boolean"
                        },
                        "ephemeralContainers": {
                          "items": {
                            "description": "EphemeralContainerApplyConfiguration represents an declarative configuration of the EphemeralContainer type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "targetContainerName": {
                                "type": "string"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "hostAliases": {
                          "items": {
                            "description": "HostAliasApplyConfiguration represents an declarative configuration of the HostAlias type for use\nwith apply.",
                            "properties": {
                              "hostnames": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ip": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "hostIPC": {
                          "type": "boolean"
                        },
                        "hostNetwork": {
                          "type": "boolean"
                        },
                        "hostPID": {
                          "type": "boolean"
                        },
                        "hostUsers": {
                          "type": "boolean"
                        },
                        "hostname": {
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "items": {
                            "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "initContainers": {
                          "items": {
                            "description": "ContainerApplyConfiguration represents an declarative configuration of the Container type for use\nwith apply.",
                            "properties": {
                              "args": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "command": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "env": {
                                "items": {
                                  "description": "EnvVarApplyConfiguration represents an declarative configuration of the EnvVar type for use\nwith apply.",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "EnvVarSourceApplyConfiguration represents an declarative configuration of the EnvVarSource type for use\nwith apply.",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "ConfigMapKeySelectorApplyConfiguration represents an declarative configuration of the ConfigMapKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secretKeyRef": {
                                          "description": "SecretKeySelectorApplyConfiguration represents an declarative configuration of the SecretKeySelector type for use\nwith apply.",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "envFrom": {
                                "items": {
                                  "description": "EnvFromSourceApplyConfiguration represents an declarative configuration of the EnvFromSource type for use\nwith apply.",
                                  "properties": {
                                    "configMapRef": {
                                      "description": "ConfigMapEnvSourceApplyConfiguration represents an declarative configuration of the ConfigMapEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "prefix": {
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "SecretEnvSourceApplyConfiguration represents an declarative configuration of the SecretEnvSource type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "optional": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "image": {
                                "type": "string"
                              },
                              "imagePullPolicy": {
                                "description": "PullPolicy describes a policy for if/when to pull a container image",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "LifecycleApplyConfiguration represents an declarative configuration of the Lifecycle type for use\nwith apply.",
                                "properties": {
                                  "postStart": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "preStop": {
                                    "description": "LifecycleHandlerApplyConfiguration represents an declarative configuration of the LifecycleHandler type for use\nwith apply.",
                                    "properties": {
                                      "exec": {
                                        "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                        "properties": {
                                          "command": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "httpGet": {
                                        "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "httpHeaders": {
                                            "items": {
                                              "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "path": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "scheme": {
                                            "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "sleep": {
                                        "description": "SleepActionApplyConfiguration represents an declarative configuration of the SleepAction type for use\nwith apply.",
                                        "properties": {
                                          "seconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "tcpSocket": {
                                        "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                        "properties": {
                                          "host": {
                                            "type": "string"
                                          },
                                          "port": {
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "livenessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "ports": {
                                "items": {
                                  "description": "ContainerPortApplyConfiguration represents an declarative configuration of the ContainerPort type for use\nwith apply.",
                                  "properties": {
                                    "containerPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "hostIP": {
                                      "type": "string"
                                    },
                                    "hostPort": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol defines network protocols supported for things like container ports.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "readinessProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "resizePolicy": {
                                "items": {
                                  "description": "ContainerResizePolicyApplyConfiguration represents an declarative configuration of the ContainerResizePolicy type for use\nwith apply.",
                                  "properties": {
                                    "resourceName": {
                                      "description": "ResourceName is the name identifying various resources in a ResourceList.",
                                      "type": "string"
                                    },
                                    "restartPolicy": {
                                      "description": "ResourceResizeRestartPolicy specifies how to handle container resource resize.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "resources": {
                                "description": "ResourceRequirementsApplyConfiguration represents an declarative configuration of the ResourceRequirements type for use\nwith apply.",
                                "properties": {
                                  "claims": {
                                    "items": {
                                      "description": "ResourceClaimApplyConfiguration represents an declarative configuration of the ResourceClaim type for use\nwith apply.",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "limits": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  },
                                  "requests": {
                                    "additionalProperties": {
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "restartPolicy": {
                                "description": "ContainerRestartPolicy is the restart policy for a single container.\nThis may only be set for init containers and only allowed value is \"Always\".",
                                "type": "string"
                              },
                              "securityContext": {
                                "description": "SecurityContextApplyConfiguration represents an declarative configuration of the SecurityContext type for use\nwith apply.",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "capabilities": {
                                    "description": "CapabilitiesApplyConfiguration represents an declarative configuration of the Capabilities type for use\nwith apply.",
                                    "properties": {
                                      "add": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "drop": {
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "privileged": {
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "runAsNonRoot": {
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "seLinuxOptions": {
                                    "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                                    "properties": {
                                      "level": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "user": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "seccompProfile": {
                                    "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                                    "properties": {
                                      "localhostProfile": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "SeccompProfileType defines the supported seccomp profile types.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "windowsOptions": {
                                    "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "startupProbe": {
                                "description": "ProbeApplyConfiguration represents an declarative configuration of the Probe type for use\nwith apply.",
                                "properties": {
                                  "exec": {
                                    "description": "ExecActionApplyConfiguration represents an declarative configuration of the ExecAction type for use\nwith apply.",
                                    "properties": {
                                      "command": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "failureThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "grpc": {
                                    "description": "GRPCActionApplyConfiguration represents an declarative configuration of the GRPCAction type for use\nwith apply.",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "service": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGetActionApplyConfiguration represents an declarative configuration of the HTTPGetAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "items": {
                                          "description": "HTTPHeaderApplyConfiguration represents an declarative configuration of the HTTPHeader type for use\nwith apply.",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "value": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array"
                                      },
                                      "path": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "initialDelaySeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocketActionApplyConfiguration represents an declarative configuration of the TCPSocketAction type for use\nwith apply.",
                                    "properties": {
                                      "host": {
                                        "type": "string"
                                      },
                                      "port": {
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "stdin": {
                                "type": "boolean"
                              },
                              "stdinOnce": {
                                "type": "boolean"
                              },
                              "terminationMessagePath": {
                                "type": "string"
                              },
                              "terminationMessagePolicy": {
                                "description": "TerminationMessagePolicy describes how termination messages are retrieved from a container.",
                                "type": "string"
                              },
                              "tty": {
                                "type": "boolean"
                              },
                              "volumeDevices": {
                                "items": {
                                  "description": "VolumeDeviceApplyConfiguration represents an declarative configuration of the VolumeDevice type for use\nwith apply.",
                                  "properties": {
                                    "devicePath": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "volumeMounts": {
                                "items": {
                                  "description": "VolumeMountApplyConfiguration represents an declarative configuration of the VolumeMount type for use\nwith apply.",
                                  "properties": {
                                    "mountPath": {
                                      "type": "string"
                                    },
                                    "mountPropagation": {
                                      "description": "MountPropagationMode describes mount propagation.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "type": "boolean"
                                    },
                                    "recursiveReadOnly": {
                                      "description": "RecursiveReadOnlyMode describes recursive-readonly mode.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "type": "string"
                                    },
                                    "subPathExpr": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "workingDir": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "nodeName": {
                          "type": "string"
                        },
                        "nodeSelector": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "type": "object"
                        },
                        "os": {
                          "description": "PodOSApplyConfiguration represents an declarative configuration of the PodOS type for use\nwith apply.",
                          "properties": {
                            "name": {
                              "description": "OSName is the set of OS'es that can be used in OS.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "overhead": {
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "description": "ResourceList is a set of (resource name, quantity) pairs.",
                          "type": "object"
                        },
                        "preemptionPolicy": {
                          "description": "PreemptionPolicy describes a policy for if/when to preempt a pod.",
                          "type": "string"
                        },
                        "priority": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "priorityClassName": {
                          "type": "string"
                        },
                        "readinessGates": {
                          "items": {
                            "description": "PodReadinessGateApplyConfiguration represents an declarative configuration of the PodReadinessGate type for use\nwith apply.",
                            "properties": {
                              "conditionType": {
                                "description": "PodConditionType is a valid value for PodCondition.Type",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "resourceClaims": {
                          "items": {
                            "description": "PodResourceClaimApplyConfiguration represents an declarative configuration of the PodResourceClaim type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "source": {
                                "description": "ClaimSourceApplyConfiguration represents an declarative configuration of the ClaimSource type for use\nwith apply.",
                                "properties": {
                                  "resourceClaimName": {
                                    "type": "string"
                                  },
                                  "resourceClaimTemplateName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "restartPolicy": {
                          "description": "RestartPolicy describes how the container should be restarted.\nOnly one of the following restart policies may be specified.\nIf none of the following policies is specified, the default one\nis RestartPolicyAlways.",
                          "type": "string"
                        },
                        "runtimeClassName": {
                          "type": "string"
                        },
                        "schedulerName": {
                          "type": "string"
                        },
                        "schedulingGates": {
                          "items": {
                            "description": "PodSchedulingGateApplyConfiguration represents an declarative configuration of the PodSchedulingGate type for use\nwith apply.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "PodSecurityContextApplyConfiguration represents an declarative configuration of the PodSecurityContext type for use\nwith apply.",
                          "properties": {
                            "appArmorProfile": {
                              "description": "AppArmorProfileApplyConfiguration represents an declarative configuration of the AppArmorProfile type for use\nwith apply.",
                              "properties": {
                                "localhostProfile": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "fsGroup": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "fsGroupChangePolicy": {
                              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "format": "int64",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SELinuxOptionsApplyConfiguration represents an declarative configuration of the SELinuxOptions type for use\nwith apply.",
                              "properties": {
                                "level": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfileApplyConfiguration represents an declarative configuration of the SeccompProfile type for use\nwith apply.",
                              "properties": {
                                "localhostProfile": {
                                  "type": "string"
                                },
                                "type": {
                                  "description": "SeccompProfileType defines the supported seccomp profile types.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "supplementalGroups": {
                              "items": {
                                "format": "int64",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "sysctls": {
                              "items": {
                                "description": "SysctlApplyConfiguration represents an declarative configuration of the Sysctl type for use\nwith apply.",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "windowsOptions": {
                              "description": "WindowsSecurityContextOptionsApplyConfiguration represents an declarative configuration of the WindowsSecurityContextOptions type for use\nwith apply.",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "serviceAccount": {
                          "type": "string"
                        },
                        "serviceAccountName": {
                          "type": "string"
                        },
                        "setHostnameAsFQDN": {
                          "type": "boolean"
                        },
                        "shareProcessNamespace": {
                          "type": "boolean"
                        },
                        "subdomain": {
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "format": "int64",
                          "type": "integer"
                        },
                        "tolerations": {
                          "items": {
                            "description": "TolerationApplyConfiguration represents an declarative configuration of the Toleration type for use\nwith apply.",
                            "properties": {
                              "effect": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              },
                              "operator": {
                                "description": "A toleration operator is the set of operators that can be used in a toleration.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "format": "int64",
                                "type": "integer"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "topologySpreadConstraints": {
                          "items": {
                            "description": "TopologySpreadConstraintApplyConfiguration represents an declarative configuration of the TopologySpreadConstraint type for use\nwith apply.",
                            "properties": {
                              "labelSelector": {
                                "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                "properties": {
                                  "matchExpressions": {
                                    "items": {
                                      "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "maxSkew": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "minDomains": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "nodeAffinityPolicy": {
                                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                                "type": "string"
                              },
                              "nodeTaintsPolicy": {
                                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                                "type": "string"
                              },
                              "topologyKey": {
                                "type": "string"
                              },
                              "whenUnsatisfiable": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "volumes": {
                          "items": {
                            "description": "VolumeApplyConfiguration represents an declarative configuration of the Volume type for use\nwith apply.",
                            "properties": {
                              "awsElasticBlockStore": {
                                "description": "AWSElasticBlockStoreVolumeSourceApplyConfiguration represents an declarative configuration of the AWSElasticBlockStoreVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "partition": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "azureDisk": {
                                "description": "AzureDiskVolumeSourceApplyConfiguration represents an declarative configuration of the AzureDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "cachingMode": {
                                    "type": "string"
                                  },
                                  "diskName": {
                                    "type": "string"
                                  },
                                  "diskURI": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "kind": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "azureFile": {
                                "description": "AzureFileVolumeSourceApplyConfiguration represents an declarative configuration of the AzureFileVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  },
                                  "shareName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "cephfs": {
                                "description": "CephFSVolumeSourceApplyConfiguration represents an declarative configuration of the CephFSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "monitors": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretFile": {
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "cinder": {
                                "description": "CinderVolumeSourceApplyConfiguration represents an declarative configuration of the CinderVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "configMap": {
                                "description": "ConfigMapVolumeSourceApplyConfiguration represents an declarative configuration of the ConfigMapVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "optional": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "csi": {
                                "description": "CSIVolumeSourceApplyConfiguration represents an declarative configuration of the CSIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "driver": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "nodePublishSecretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeAttributes": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "downwardAPI": {
                                "description": "DownwardAPIVolumeSourceApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "DownwardAPIVolumeFileApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeFile type for use\nwith apply.",
                                      "properties": {
                                        "fieldRef": {
                                          "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "apiVersion": {
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        },
                                        "resourceFieldRef": {
                                          "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                          "properties": {
                                            "containerName": {
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "emptyDir": {
                                "description": "EmptyDirVolumeSourceApplyConfiguration represents an declarative configuration of the EmptyDirVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "medium": {
                                    "description": "StorageMedium defines ways that storage can be allocated to a volume.",
                                    "type": "string"
                                  },
                                  "sizeLimit": {
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "ephemeral": {
                                "description": "EphemeralVolumeSourceApplyConfiguration represents an declarative configuration of the EphemeralVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "volumeClaimTemplate": {
                                    "description": "PersistentVolumeClaimTemplateApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimTemplate type for use\nwith apply.",
                                    "properties": {
                                      "metadata": {
                                        "description": "ObjectMetaApplyConfiguration represents an declarative configuration of the ObjectMeta type for use\nwith apply.",
                                        "properties": {
                                          "annotations": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "creationTimestamp": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "deletionGracePeriodSeconds": {
                                            "format": "int64",
                                            "type": "integer"
                                          },
                                          "deletionTimestamp": {
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "finalizers": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "generateName": {
                                            "type": "string"
                                          },
                                          "generation": {
                                            "format": "int64",
                                            "type": "integer"
                                          },
                                          "labels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "type": "string"
                                          },
                                          "ownerReferences": {
                                            "items": {
                                              "description": "OwnerReferenceApplyConfiguration represents an declarative configuration of the OwnerReference type for use\nwith apply.",
                                              "properties": {
                                                "apiVersion": {
                                                  "type": "string"
                                                },
                                                "blockOwnerDeletion": {
                                                  "type": "boolean"
                                                },
                                                "controller": {
                                                  "type": "boolean"
                                                },
                                                "kind": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "uid": {
                                                  "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "resourceVersion": {
                                            "type": "string"
                                          },
                                          "uid": {
                                            "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "spec": {
                                        "description": "PersistentVolumeClaimSpecApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimSpec type for use\nwith apply.",
                                        "properties": {
                                          "accessModes": {
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "dataSource": {
                                            "description": "TypedLocalObjectReferenceApplyConfiguration represents an declarative configuration of the TypedLocalObjectReference type for use\nwith apply.",
                                            "properties": {
                                              "apiGroup": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "dataSourceRef": {
                                            "description": "TypedObjectReferenceApplyConfiguration represents an declarative configuration of the TypedObjectReference type for use\nwith apply.",
                                            "properties": {
                                              "apiGroup": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "namespace": {
                                                "type": "string"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "resources": {
                                            "description": "VolumeResourceRequirementsApplyConfiguration represents an declarative configuration of the VolumeResourceRequirements type for use\nwith apply.",
                                            "properties": {
                                              "limits": {
                                                "additionalProperties": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                                "type": "object"
                                              },
                                              "requests": {
                                                "additionalProperties": {
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "description": "ResourceList is a set of (resource name, quantity) pairs.",
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "selector": {
                                            "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                            "properties": {
                                              "matchExpressions": {
                                                "items": {
                                                  "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                  "properties": {
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "additionalProperties": {
                                                  "type": "string"
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "storageClassName": {
                                            "type": "string"
                                          },
                                          "volumeAttributesClassName": {
                                            "type": "string"
                                          },
                                          "volumeMode": {
                                            "description": "PersistentVolumeMode describes how a volume is intended to be consumed, either Block or Filesystem.",
                                            "type": "string"
                                          },
                                          "volumeName": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fc": {
                                "description": "FCVolumeSourceApplyConfiguration represents an declarative configuration of the FCVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "lun": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "targetWWNs": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "wwids": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "flexVolume": {
                                "description": "FlexVolumeSourceApplyConfiguration represents an declarative configuration of the FlexVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "driver": {
                                    "type": "string"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "options": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "flocker": {
                                "description": "FlockerVolumeSourceApplyConfiguration represents an declarative configuration of the FlockerVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "datasetName": {
                                    "type": "string"
                                  },
                                  "datasetUUID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "gcePersistentDisk": {
                                "description": "GCEPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the GCEPersistentDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "partition": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "pdName": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "gitRepo": {
                                "description": "GitRepoVolumeSourceApplyConfiguration represents an declarative configuration of the GitRepoVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "directory": {
                                    "type": "string"
                                  },
                                  "repository": {
                                    "type": "string"
                                  },
                                  "revision": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "glusterfs": {
                                "description": "GlusterfsVolumeSourceApplyConfiguration represents an declarative configuration of the GlusterfsVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "endpoints": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "hostPath": {
                                "description": "HostPathVolumeSourceApplyConfiguration represents an declarative configuration of the HostPathVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "path": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "iscsi": {
                                "description": "ISCSIVolumeSourceApplyConfiguration represents an declarative configuration of the ISCSIVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "chapAuthDiscovery": {
                                    "type": "boolean"
                                  },
                                  "chapAuthSession": {
                                    "type": "boolean"
                                  },
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "initiatorName": {
                                    "type": "string"
                                  },
                                  "iqn": {
                                    "type": "string"
                                  },
                                  "iscsiInterface": {
                                    "type": "string"
                                  },
                                  "lun": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "portals": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "targetPortal": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "name": {
                                "type": "string"
                              },
                              "nfs": {
                                "description": "NFSVolumeSourceApplyConfiguration represents an declarative configuration of the NFSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "path": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "server": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "persistentVolumeClaim": {
                                "description": "PersistentVolumeClaimVolumeSourceApplyConfiguration represents an declarative configuration of the PersistentVolumeClaimVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "claimName": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "photonPersistentDisk": {
                                "description": "PhotonPersistentDiskVolumeSourceApplyConfiguration represents an declarative configuration of the PhotonPersistentDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "pdID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "portworxVolume": {
                                "description": "PortworxVolumeSourceApplyConfiguration represents an declarative configuration of the PortworxVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "volumeID": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "projected": {
                                "description": "ProjectedVolumeSourceApplyConfiguration represents an declarative configuration of the ProjectedVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "sources": {
                                    "items": {
                                      "description": "VolumeProjectionApplyConfiguration represents an declarative configuration of the VolumeProjection type for use\nwith apply.",
                                      "properties": {
                                        "clusterTrustBundle": {
                                          "description": "ClusterTrustBundleProjectionApplyConfiguration represents an declarative configuration of the ClusterTrustBundleProjection type for use\nwith apply.",
                                          "properties": {
                                            "labelSelector": {
                                              "description": "LabelSelectorApplyConfiguration represents an declarative configuration of the LabelSelector type for use\nwith apply.",
                                              "properties": {
                                                "matchExpressions": {
                                                  "items": {
                                                    "description": "LabelSelectorRequirementApplyConfiguration represents an declarative configuration of the LabelSelectorRequirement type for use\nwith apply.",
                                                    "properties": {
                                                      "key": {
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "matchLabels": {
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            },
                                            "path": {
                                              "type": "string"
                                            },
                                            "signerName": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "configMap": {
                                          "description": "ConfigMapProjectionApplyConfiguration represents an declarative configuration of the ConfigMapProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "downwardAPI": {
                                          "description": "DownwardAPIProjectionApplyConfiguration represents an declarative configuration of the DownwardAPIProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "DownwardAPIVolumeFileApplyConfiguration represents an declarative configuration of the DownwardAPIVolumeFile type for use\nwith apply.",
                                                "properties": {
                                                  "fieldRef": {
                                                    "description": "ObjectFieldSelectorApplyConfiguration represents an declarative configuration of the ObjectFieldSelector type for use\nwith apply.",
                                                    "properties": {
                                                      "apiVersion": {
                                                        "type": "string"
                                                      },
                                                      "fieldPath": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  },
                                                  "resourceFieldRef": {
                                                    "description": "ResourceFieldSelectorApplyConfiguration represents an declarative configuration of the ResourceFieldSelector type for use\nwith apply.",
                                                    "properties": {
                                                      "containerName": {
                                                        "type": "string"
                                                      },
                                                      "divisor": {
                                                        "anyOf": [
                                                          {
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "type": "string"
                                                          }
                                                        ],
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                      },
                                                      "resource": {
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "secret": {
                                          "description": "SecretProjectionApplyConfiguration represents an declarative configuration of the SecretProjection type for use\nwith apply.",
                                          "properties": {
                                            "items": {
                                              "items": {
                                                "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                                "properties": {
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "mode": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                  },
                                                  "path": {
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                              },
                                              "type": "array"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "optional": {
                                              "type": "boolean"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "serviceAccountToken": {
                                          "description": "ServiceAccountTokenProjectionApplyConfiguration represents an declarative configuration of the ServiceAccountTokenProjection type for use\nwith apply.",
                                          "properties": {
                                            "audience": {
                                              "type": "string"
                                            },
                                            "expirationSeconds": {
                                              "format": "int64",
                                              "type": "integer"
                                            },
                                            "path": {
                                              "type": "string"
                                            }
                                          },
                                          "type": "object",
                                          "additionalProperties": false
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "quobyte": {
                                "description": "QuobyteVolumeSourceApplyConfiguration represents an declarative configuration of the QuobyteVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "group": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "registry": {
                                    "type": "string"
                                  },
                                  "tenant": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  },
                                  "volume": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "rbd": {
                                "description": "RBDVolumeSourceApplyConfiguration represents an declarative configuration of the RBDVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "keyring": {
                                    "type": "string"
                                  },
                                  "monitors": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "pool": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "user": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "scaleIO": {
                                "description": "ScaleIOVolumeSourceApplyConfiguration represents an declarative configuration of the ScaleIOVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "gateway": {
                                    "type": "string"
                                  },
                                  "protectionDomain": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "sslEnabled": {
                                    "type": "boolean"
                                  },
                                  "storageMode": {
                                    "type": "string"
                                  },
                                  "storagePool": {
                                    "type": "string"
                                  },
                                  "system": {
                                    "type": "string"
                                  },
                                  "volumeName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "secret": {
                                "description": "SecretVolumeSourceApplyConfiguration represents an declarative configuration of the SecretVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "defaultMode": {
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "items": {
                                    "items": {
                                      "description": "KeyToPathApplyConfiguration represents an declarative configuration of the KeyToPath type for use\nwith apply.",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "mode": {
                                          "format": "int32",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "optional": {
                                    "type": "boolean"
                                  },
                                  "secretName": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "storageos": {
                                "description": "StorageOSVolumeSourceApplyConfiguration represents an declarative configuration of the StorageOSVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "readOnly": {
                                    "type": "boolean"
                                  },
                                  "secretRef": {
                                    "description": "LocalObjectReferenceApplyConfiguration represents an declarative configuration of the LocalObjectReference type for use\nwith apply.",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "volumeName": {
                                    "type": "string"
                                  },
                                  "volumeNamespace": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "vsphereVolume": {
                                "description": "VsphereVirtualDiskVolumeSourceApplyConfiguration represents an declarative configuration of the VsphereVirtualDiskVolumeSource type for use\nwith apply.",
                                "properties": {
                                  "fsType": {
                                    "type": "string"
                                  },
                                  "storagePolicyID": {
                                    "type": "string"
                                  },
                                  "storagePolicyName": {
                                    "type": "string"
                                  },
                                  "volumePath": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "priorityClassName": {
                  "description": "Defines the priority class name to assign priority levels to the Pods, influencing their scheduling order.",
                  "type": "string"
                },
                "readinessProbe": {
                  "description": "Defines readiness probes to determine when a Pod is ready to handle traffic.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Defines the threshold for how many times the probe can fail before the Pod is marked Unready.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "Sets the initial delay before the readiness probe is initiated, in seconds.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "Configures the period, in seconds, between each readiness check.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "replicas": {
                  "description": "Specifies the number of replicas to determine the desired number of Pods (Redpanda brokers) in the StatefulSet.",
                  "type": "integer"
                },
                "securityContext": {
                  "description": "Sets a security context for the Pods to define privilege and access control settings.",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "appArmorProfile": {
                      "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "capabilities": {
                      "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "privileged": {
                      "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "procMount": {
                      "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                      "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "level": {
                          "description": "Level is SELinux level label that applies to the container.",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a SELinux role label that applies to the container.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is a SELinux type label that applies to the container.",
                          "type": "string"
                        },
                        "user": {
                          "description": "User is a SELinux user label that applies to the container.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "seccompProfile": {
                      "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "windowsOptions": {
                      "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                          "type": "string"
                        },
                        "hostProcess": {
                          "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                          "type": "boolean"
                        },
                        "runAsUserName": {
                          "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "sideCars": {
                  "description": "Defines the additional sidecar containers that run alongside the main Redpanda container in the Pod.",
                  "properties": {
                    "configWatcher": {
                      "description": "Configures the `config-watcher` sidecar. The `config-watcher` sidecar polls the Secret resource in `auth.sasl.secretRef` for changes and triggers a rolling upgrade to add the new superusers to the Redpanda cluster.",
                      "properties": {
                        "enabled": {
                          "description": "Specifies whether the sidecar is enabled.",
                          "type": "boolean"
                        },
                        "extraVolumeMounts": {
                          "description": "Specifies additional volumes to mount to the sidecar.",
                          "type": "string"
                        },
                        "resources": {
                          "description": "Specifies resource requests for the sidecar container.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityContext": {
                          "description": "Specifies the container's security context, including privileges and access levels of the container and its processes.",
                          "properties": {
                            "allowPrivilegeEscalation": {
                              "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "appArmorProfile": {
                              "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "capabilities": {
                              "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "add": {
                                  "description": "Added capabilities",
                                  "items": {
                                    "description": "Capability represent POSIX capabilities type",
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "drop": {
                                  "description": "Removed capabilities",
                                  "items": {
                                    "description": "Capability represent POSIX capabilities type",
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "privileged": {
                              "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "procMount": {
                              "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "readOnlyRootFilesystem": {
                              "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "runAsGroup": {
                              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "windowsOptions": {
                              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "controllers": {
                      "description": "RPControllers configures additional controllers that can be deployed as sidecars in rp helm",
                      "properties": {
                        "createRBAC": {
                          "type": "boolean"
                        },
                        "enabled": {
                          "description": "Specifies whether the Controllers are enabled.",
                          "type": "boolean"
                        },
                        "healthProbeAddress": {
                          "type": "string"
                        },
                        "image": {
                          "description": "RedpandaImage configures the Redpanda container image settings in the Helm values.",
                          "properties": {
                            "pullPolicy": {
                              "description": "Specifies the strategy used for pulling images from the repository. For available values, see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy.",
                              "type": "string"
                            },
                            "repository": {
                              "description": "Specifies the image repository to pull from.",
                              "type": "string"
                            },
                            "tag": {
                              "description": "Specifies the image tag.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "metricsAddress": {
                          "type": "string"
                        },
                        "pprofAddress": {
                          "type": "string"
                        },
                        "resources": {
                          "description": "ResourceRequirements describes the compute resource requirements.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "run": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence.",
                          "properties": {
                            "allowPrivilegeEscalation": {
                              "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "appArmorProfile": {
                              "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "capabilities": {
                              "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "add": {
                                  "description": "Added capabilities",
                                  "items": {
                                    "description": "Capability represent POSIX capabilities type",
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "drop": {
                                  "description": "Removed capabilities",
                                  "items": {
                                    "description": "Capability represent POSIX capabilities type",
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "privileged": {
                              "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "procMount": {
                              "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "readOnlyRootFilesystem": {
                              "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "runAsGroup": {
                              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "windowsOptions": {
                              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "image": {
                      "description": "RedpandaImage configures the Redpanda container image settings in the Helm values.",
                      "properties": {
                        "pullPolicy": {
                          "description": "Specifies the strategy used for pulling images from the repository. For available values, see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "Specifies the image repository to pull from.",
                          "type": "string"
                        },
                        "tag": {
                          "description": "Specifies the image tag.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "rpkStatus": {
                      "description": "SideCarObj represents a generic sidecar object. This is a placeholder for now.",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "resources": {
                          "description": "ResourceRequirements describes the compute resource requirements.",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            },
                            "requests": {
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityContext": {
                          "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence.",
                          "properties": {
                            "allowPrivilegeEscalation": {
                              "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "appArmorProfile": {
                              "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "capabilities": {
                              "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "add": {
                                  "description": "Added capabilities",
                                  "items": {
                                    "description": "Capability represent POSIX capabilities type",
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "drop": {
                                  "description": "Removed capabilities",
                                  "items": {
                                    "description": "Capability represent POSIX capabilities type",
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "privileged": {
                              "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "procMount": {
                              "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "readOnlyRootFilesystem": {
                              "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "boolean"
                            },
                            "runAsGroup": {
                              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod & container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "windowsOptions": {
                              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "skipChown": {
                  "description": "Specifies whether to skip the changing of file ownership (chown) during Pod initialization.",
                  "type": "boolean"
                },
                "startupProbe": {
                  "description": "Configures the startup probe to determine when the Redpanda application within the Pod has started successfully.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Determines the failure threshold to mark the application in the Pod as not started.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "Specifies the delay in seconds before the startup probe begins.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "Sets the period in seconds for conducting subsequent probes.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "terminationGracePeriodSeconds": {
                  "description": "Specifies the termination grace period in seconds to control the time delay before forcefully terminating a Pod.",
                  "type": "integer"
                },
                "tolerations": {
                  "description": "Applies tolerations to allow Pods to be scheduled on nodes with matching taints, enabling control over where Pods can run.",
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": "string"
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "topologySpreadConstraints": {
                  "description": "Defines topology spread constraints to control how Pods are spread across different topology domains.",
                  "items": {
                    "description": "TopologySpreadConstraints configures topology spread constraints to control how Pods are spread across different topology domains.",
                    "properties": {
                      "maxSkew": {
                        "description": "Defines the maximum skew between the number of Pods in any two topology domains.",
                        "type": "integer"
                      },
                      "topologyKey": {
                        "description": "Specifies the topology key to use for spreading Pods.",
                        "type": "string"
                      },
                      "whenUnsatisfiable": {
                        "description": "Sets the policy for how to handle unsatisfiable constraints, such as `DoNotSchedule` or `ScheduleAnyway`.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "updateStrategy": {
                  "description": "Defines the update strategy for the StatefulSet to manage how updates are rolled out to the Pods.",
                  "properties": {
                    "type": {
                      "description": "Defines the strategy type for updating the StatefulSet, such as `RollingUpdate` or `OnDelete`.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storage": {
              "description": "Defines storage settings for the Redpanda data directory and the Tiered Storage cache.",
              "properties": {
                "hostPath": {
                  "description": "Specifies the absolute path on the worker node to store the Redpanda data directory. If unspecified, then an `emptyDir` volume is used. If specified but `persistentVolume.enabled` is true, `storage.hostPath` has no effect.",
                  "type": "string"
                },
                "persistentVolume": {
                  "description": "Configures a PersistentVolumeClaim (PVC) template to create for each Pod. This PVC is used to store the Redpanda data directory.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Adds annotations to the PersistentVolumeClaims to provide additional information or metadata that can be used by other tools or libraries.",
                      "type": "object"
                    },
                    "enabled": {
                      "description": "Specifies whether to enable the Helm chart to create PersistentVolumeClaims for Pods.",
                      "type": "boolean"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Applies labels to the PersistentVolumeClaims to facilitate identification and selection based on custom criteria.",
                      "type": "object"
                    },
                    "nameOverwrite": {
                      "description": "Option to change volume claim template name for tiered storage persistent volume if tiered.mountType is set to `persistentVolume`",
                      "type": "string"
                    },
                    "size": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "Specifies the storage capacity required.",
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "x-kubernetes-int-or-string": true
                    },
                    "storageClass": {
                      "description": "Specifies the StorageClass for the PersistentVolumeClaims to determine how PersistentVolumes are provisioned and managed.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tiered": {
                  "description": "Configures storage for the Tiered Storage cache.",
                  "properties": {
                    "config": {
                      "description": "Configures Tiered Storage, which requires an Enterprise license configured in `enterprise.licenseKey` or `enterprised.licenseSecretRef`.",
                      "properties": {
                        "cloud_storage_api_endpoint": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_api_endpoint.",
                          "type": "string"
                        },
                        "cloud_storage_api_endpoint_port": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_api_endpoint_port.",
                          "type": "integer"
                        },
                        "cloud_storage_azure_adls_endpoint": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_azure_adls_endpoint.",
                          "type": "string"
                        },
                        "cloud_storage_azure_adls_port": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_azure_adls_port.",
                          "type": "integer"
                        },
                        "cloud_storage_azure_container": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_azure_container.",
                          "type": "string"
                        },
                        "cloud_storage_azure_managed_identity_id": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_azure_managed_identity_id.",
                          "type": "string"
                        },
                        "cloud_storage_azure_shared_key": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_azure_shared_key.",
                          "type": "string"
                        },
                        "cloud_storage_azure_storage_account": {
                          "description": "See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_azure_storage_account.",
                          "type": "string"
                        },
                        "cloud_storage_bucket": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_bucket.",
                          "type": "string"
                        },
                        "cloud_storage_cache_check_interval": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_cache_check_interval.",
                          "type": "integer"
                        },
                        "cloud_storage_cache_directory": {
                          "description": "See https://docs.redpanda.com/current/reference/node-properties/#cloud_storage_cache_directory.",
                          "type": "string"
                        },
                        "cloud_storage_cache_size": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_cache_size.",
                          "type": "string"
                        },
                        "cloud_storage_credentials_source": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_credentials_source.",
                          "type": "string"
                        },
                        "cloud_storage_disable_tls": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_disable_tls.",
                          "type": "boolean"
                        },
                        "cloud_storage_enable_remote_read": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_enable_remote_read.",
                          "type": "boolean"
                        },
                        "cloud_storage_enable_remote_write": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_enable_remote_write.",
                          "type": "boolean"
                        },
                        "cloud_storage_enabled": {
                          "description": "Enables Tiered Storage, if a license key is provided. See https://docs.redpanda.com/docs/reference/cluster-properties/#cloud_storage_enabled.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "cloud_storage_initial_backoff_ms": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_initial_backoff_ms.",
                          "type": "integer"
                        },
                        "cloud_storage_manifest_upload_timeout_ms": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_manifest_upload_timeout_ms.",
                          "type": "integer"
                        },
                        "cloud_storage_max_connection_idle_time_ms": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_max_connection_idle_time_ms.",
                          "type": "integer"
                        },
                        "cloud_storage_max_connections": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_max_connections.",
                          "type": "integer"
                        },
                        "cloud_storage_reconciliation_interval_ms": {
                          "description": "Deprecated: See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_reconciliation_interval_ms.",
                          "type": "integer"
                        },
                        "cloud_storage_region": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_region.",
                          "type": "string"
                        },
                        "cloud_storage_segment_max_upload_interval_sec": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_segment_max_upload_interval_sec.",
                          "type": "integer"
                        },
                        "cloud_storage_segment_upload_timeout_ms": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_segment_upload_timeout_ms.",
                          "type": "integer"
                        },
                        "cloud_storage_trust_file": {
                          "description": "See https://docs.redpanda.com/current/reference/cluster-properties/#cloud_storage_trust_file.",
                          "type": "string"
                        },
                        "cloud_storage_upload_ctrl_d_coeff": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_upload_ctrl_d_coeff.",
                          "type": "integer"
                        },
                        "cloud_storage_upload_ctrl_max_shares": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_upload_ctrl_max_shares.",
                          "type": "integer"
                        },
                        "cloud_storage_upload_ctrl_min_shares": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_upload_ctrl_min_shares.",
                          "type": "integer"
                        },
                        "cloud_storage_upload_ctrl_p_coeff": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_upload_ctrl_p_coeff.",
                          "type": "integer"
                        },
                        "cloud_storage_upload_ctrl_update_interval_ms": {
                          "description": "See https://docs.redpanda.com/current/reference/tunable-properties/#cloud_storage_upload_ctrl_update_interval_ms.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "credentialsSecretRef": {
                      "description": "CredentialSecretRef can be used to set `cloud_storage_secret_key` and/or `cloud_storage_access_key` from referenced Kubernetes Secret",
                      "properties": {
                        "accessKey": {
                          "properties": {
                            "configurationKey": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "secretKey": {
                          "properties": {
                            "configurationKey": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "hostPath": {
                      "description": "Specifies the absolute path on the worker node to store the Tiered Storage cache.",
                      "type": "string"
                    },
                    "mountType": {
                      "description": "mountType can be one of:\n\n- `none`: Does not mount a volume. Tiered storage will use the same volume as the one defined for the Redpanda data directory.\n- `hostPath`: Uses the path specified in `hostPath` on the worker node that the Pod is running on.\n- `emptyDir`: Mounts an empty directory every time the Pod starts.\n- `persistentVolume`: Creates and mounts a PersistentVolumeClaim using the template defined in `persistentVolume`.",
                      "type": "string"
                    },
                    "persistentVolume": {
                      "description": "Configures a PersistentVolumeClaim (PVC) template to create for each Pod. This PVC is used to store the Tiered Storage cache.",
                      "properties": {
                        "annotations": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Adds annotations to the PersistentVolumeClaims to provide additional information or metadata that can be used by other tools or libraries.",
                          "type": "object"
                        },
                        "enabled": {
                          "description": "Specifies whether to enable the Helm chart to create PersistentVolumeClaims for Pods.",
                          "type": "boolean"
                        },
                        "labels": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Applies labels to the PersistentVolumeClaims to facilitate identification and selection based on custom criteria.",
                          "type": "object"
                        },
                        "nameOverwrite": {
                          "description": "Option to change volume claim template name for tiered storage persistent volume if tiered.mountType is set to `persistentVolume`",
                          "type": "string"
                        },
                        "size": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "Specifies the storage capacity required.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "storageClass": {
                          "description": "Specifies the StorageClass for the PersistentVolumeClaims to determine how PersistentVolumes are provisioned and managed.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tests": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tls": {
              "description": "Defines TLS settings for listeners.",
              "properties": {
                "certs": {
                  "additionalProperties": {
                    "description": "Certificate configures TLS certificates.",
                    "properties": {
                      "applyInternalDNSNames": {
                        "description": "Specifies you wish to have Kubernetes internal dns names (IE the headless service of the redpanda StatefulSet) included in `dnsNames` of the  certificate even, when supplying an issuer.",
                        "type": "boolean"
                      },
                      "caEnabled": {
                        "description": "Specifies whether to include the `ca.crt` file in the trust stores of all listeners. Set to `true` only for certificates that are not authenticated using public certificate authorities (CAs).",
                        "type": "boolean"
                      },
                      "clientSecretRef": {
                        "description": "Specify the name of an existing Secret resource that contains your client TLS certificate.",
                        "properties": {
                          "name": {
                            "description": "Specifies the name of the Secret resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "Specifies the validity duration of certificates generated with `issuerRef`.",
                        "type": "string"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "issuerRef": {
                        "description": "Specify the name of an existing Issuer or ClusterIssuer resource to use to generate certificates. Requires cert-manager. See https://cert-manager.io/v1.1-docs.",
                        "properties": {
                          "group": {
                            "type": "string"
                          },
                          "kind": {
                            "description": "Specifies the kind of resource. One of `Issuer` or `ClusterIssuer`.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Specifies the name of the resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "secretRef": {
                        "description": "Specify the name of an existing Secret resource that contains your TLS certificate.",
                        "properties": {
                          "name": {
                            "description": "Specifies the name of the Secret resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "description": "Lists all available certificates in the cluster. You can reference a specific certificate\u2019s name in each listener\u2019s `listeners.<listener name>.tls.cert` setting.",
                  "type": "object"
                },
                "enabled": {
                  "description": "Enables TLS globally for all listeners. Each listener must include a certificate name in its `<listener>.tls` object. To allow you to enable TLS for individual listeners, certificates are always loaded, even if TLS is disabled.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tolerations": {
              "description": "Specifies tolerations to allow Pods to be scheduled onto nodes where they otherwise wouldn\u2019t.",
              "items": {
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                "properties": {
                  "effect": {
                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "value": {
                    "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tuning": {
              "description": "Defines settings for the autotuner tool in Redpanda. The autotuner identifies the hardware configuration in the container and optimizes the Linux kernel to give you the best performance.",
              "properties": {
                "ballast_file_path": {
                  "description": "Specifies the file path for ballast file. A ballast file is an empty file that takes up disk space. If Redpanda runs out of disk space and becomes unavailable, you can delete the ballast file as a last resort. This clears up some space and gives you time to delete topics or records and change your retention properties.",
                  "type": "string"
                },
                "ballast_file_size": {
                  "description": "Defines the size of the ballast file.",
                  "type": "string"
                },
                "extraVolumeMounts": {
                  "description": "Configures additional volume mounts for the Pod.",
                  "type": "string"
                },
                "resources": {
                  "description": "Sets resource requirements such as CPU and memory limits.",
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tune_aio_events": {
                  "description": "Specifies whether to increase the number of allowed asynchronous IO events.",
                  "type": "boolean"
                },
                "tune_ballast_file": {
                  "description": "Specifies whether to create the ballast file.",
                  "type": "boolean"
                },
                "tune_clocksource": {
                  "description": "Specifies whether to synchronize NTP.",
                  "type": "boolean"
                },
                "well_known_io": {
                  "description": "Specifies the vendor, VM type, and storage device type that Redpanda runs on, in the format <vendor>:<vm>:<storage>. This hints to Redpanda which configuration values it should use for the Redpanda IO scheduler.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "migration": {
          "description": "Deprecated and Removed in v2.2.3-24.2.X. Downgrade to v2.2.2-24.2.4 perform the migration",
          "properties": {
            "clusterRef": {
              "description": "ClusterRef by default will not be able to reach different namespaces, but it can be\noverwritten by adding ClusterRole and ClusterRoleBinding to operator ServiceAccount.",
              "properties": {
                "name": {
                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "consoleRef": {
              "description": "ConsoleRef by default will not be able to reach different namespaces, but it can be\noverwritten by adding ClusterRole and ClusterRoleBinding to operator ServiceAccount.",
              "properties": {
                "name": {
                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "namespace"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "enabled": {
              "type": "boolean"
            }
          },
          "required": [
            "clusterRef",
            "consoleRef",
            "enabled"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Represents the current status of the Redpanda cluster.",
      "properties": {
        "conditions": {
          "description": "Conditions holds the conditions for the Redpanda.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "failures": {
          "description": "Failures is the reconciliation failure count against the latest desired\nstate. It is reset after a successful reconciliation.",
          "format": "int64",
          "type": "integer"
        },
        "helmRelease": {
          "type": "string"
        },
        "helmReleaseReady": {
          "type": "boolean"
        },
        "helmRepository": {
          "type": "string"
        },
        "helmRepositoryReady": {
          "type": "boolean"
        },
        "installFailures": {
          "format": "int64",
          "type": "integer"
        },
        "lastAppliedRevision": {
          "description": "LastAppliedRevision is the revision of the last successfully applied source.",
          "type": "string"
        },
        "lastAttemptedRevision": {
          "description": "LastAttemptedRevision is the revision of the last reconciliation attempt.",
          "type": "string"
        },
        "lastHandledReconcileAt": {
          "description": "LastHandledReconcileAt holds the value of the most recent\nreconcile request value, so a change of the annotation value\ncan be detected.",
          "type": "string"
        },
        "license": {
          "description": "LicenseStatus contains information about the current state of any\ninstalled license in the Redpanda cluster.",
          "properties": {
            "expiration": {
              "format": "date-time",
              "type": "string"
            },
            "expired": {
              "type": "boolean"
            },
            "inUseFeatures": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "organization": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "violation": {
              "type": "boolean"
            }
          },
          "required": [
            "inUseFeatures",
            "violation"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "observedGeneration": {
          "description": "Specifies the last observed generation.",
          "format": "int64",
          "type": "integer"
        },
        "upgradeFailures": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
