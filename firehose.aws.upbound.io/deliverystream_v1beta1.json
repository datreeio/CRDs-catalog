{
  "description": "DeliveryStream is the Schema for the DeliveryStreams API. Provides a AWS Kinesis Firehose Delivery Stream",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DeliveryStreamSpec defines the desired state of DeliveryStream",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) specifying the Stream",
              "type": "string"
            },
            "destination": {
              "description": "\u2013  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, http_endpoint, opensearch and opensearchserverless.",
              "type": "string"
            },
            "destinationId": {
              "type": "string"
            },
            "elasticsearchConfiguration": {
              "description": "Configuration options when destination is elasticsearch. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterEndpoint": {
                    "description": "The endpoint to use when communicating with the cluster. Conflicts with domain_arn.",
                    "type": "string"
                  },
                  "domainArn": {
                    "description": "The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.",
                    "type": "string"
                  },
                  "domainArnRef": {
                    "description": "Reference to a Domain in elasticsearch to populate domainArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "domainArnSelector": {
                    "description": "Selector for a Domain in elasticsearch to populate domainArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "indexRotationPeriod": {
                    "description": "The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "typeName": {
                    "description": "The Elasticsearch type name with maximum length of 100 characters.",
                    "type": "string"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "extendedS3Configuration": {
              "description": "Enhanced configuration options for the s3 destination. More details are given below.",
              "items": {
                "properties": {
                  "bucketArn": {
                    "description": "The ARN of the S3 bucket",
                    "type": "string"
                  },
                  "bucketArnRef": {
                    "description": "Reference to a Bucket in s3 to populate bucketArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "bucketArnSelector": {
                    "description": "Selector for a Bucket in s3 to populate bucketArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "compressionFormat": {
                    "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                    "type": "string"
                  },
                  "dataFormatConversionConfiguration": {
                    "description": "Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "inputFormatConfiguration": {
                          "description": "Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.",
                          "items": {
                            "properties": {
                              "deserializer": {
                                "description": "Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.",
                                "items": {
                                  "properties": {
                                    "hiveJsonSerDe": {
                                      "description": "Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.",
                                      "items": {
                                        "properties": {
                                          "timestampFormats": {
                                            "description": "A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "openXJsonSerDe": {
                                      "description": "Nested argument that specifies the OpenX SerDe. More details below.",
                                      "items": {
                                        "properties": {
                                          "caseInsensitive": {
                                            "description": "When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.",
                                            "type": "boolean"
                                          },
                                          "columnToJsonKeyMappings": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "description": "A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = \"timestamp\" } to map this key to a column named ts.",
                                            "type": "object",
                                            "x-kubernetes-map-type": "granular"
                                          },
                                          "convertDotsInJsonKeysToUnderscores": {
                                            "description": "When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is \"a.b\", you can define the column name to be \"a_b\" when using this option. Defaults to false.",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "outputFormatConfiguration": {
                          "description": "Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.",
                          "items": {
                            "properties": {
                              "serializer": {
                                "description": "Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.",
                                "items": {
                                  "properties": {
                                    "orcSerDe": {
                                      "description": "Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. More details below.",
                                      "items": {
                                        "properties": {
                                          "blockSizeBytes": {
                                            "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.",
                                            "type": "number"
                                          },
                                          "bloomFilterColumns": {
                                            "description": "A list of column names for which you want Kinesis Data Firehose to create bloom filters.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "bloomFilterFalsePositiveProbability": {
                                            "description": "The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.",
                                            "type": "number"
                                          },
                                          "compression": {
                                            "description": "The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.",
                                            "type": "string"
                                          },
                                          "dictionaryKeyThreshold": {
                                            "description": "A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.",
                                            "type": "number"
                                          },
                                          "enablePadding": {
                                            "description": "Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.",
                                            "type": "boolean"
                                          },
                                          "formatVersion": {
                                            "description": "The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.",
                                            "type": "string"
                                          },
                                          "paddingTolerance": {
                                            "description": "A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.",
                                            "type": "number"
                                          },
                                          "rowIndexStride": {
                                            "description": "The number of rows between index entries. The default is 10000 and the minimum is 1000.",
                                            "type": "number"
                                          },
                                          "stripeSizeBytes": {
                                            "description": "The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "parquetSerDe": {
                                      "description": "Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.",
                                      "items": {
                                        "properties": {
                                          "blockSizeBytes": {
                                            "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.",
                                            "type": "number"
                                          },
                                          "compression": {
                                            "description": "The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.",
                                            "type": "string"
                                          },
                                          "enableDictionaryCompression": {
                                            "description": "Indicates whether to enable dictionary compression.",
                                            "type": "boolean"
                                          },
                                          "maxPaddingBytes": {
                                            "description": "The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.",
                                            "type": "number"
                                          },
                                          "pageSizeBytes": {
                                            "description": "The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.",
                                            "type": "number"
                                          },
                                          "writerVersion": {
                                            "description": "Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "schemaConfiguration": {
                          "description": "Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.",
                          "items": {
                            "properties": {
                              "catalogId": {
                                "description": "The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.",
                                "type": "string"
                              },
                              "databaseName": {
                                "description": "Specifies the name of the AWS Glue database that contains the schema for the output data.",
                                "type": "string"
                              },
                              "region": {
                                "description": "If you don't specify an AWS Region, the default is the current region.",
                                "type": "string"
                              },
                              "roleArn": {
                                "description": "The ARN of the role that provides access to the source Kinesis stream.",
                                "type": "string"
                              },
                              "roleArnRef": {
                                "description": "Reference to a Role in iam to populate roleArn.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "roleArnSelector": {
                                "description": "Selector for a Role in iam to populate roleArn.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "tableName": {
                                "description": "Specifies the AWS Glue table that contains the column information that constitutes your data schema.",
                                "type": "string"
                              },
                              "tableNameRef": {
                                "description": "Reference to a CatalogTable in glue to populate tableName.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "tableNameSelector": {
                                "description": "Selector for a CatalogTable in glue to populate tableName.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "versionId": {
                                "description": "Specifies the table version for the output data schema. Defaults to LATEST.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "dynamicPartitioningConfiguration": {
                    "description": "The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "retryDuration": {
                          "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "errorOutputPrefix": {
                    "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                    "type": "string"
                  },
                  "kmsKeyArn": {
                    "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                    "type": "string"
                  },
                  "prefix": {
                    "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupConfiguration": {
                    "description": "The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "httpEndpointConfiguration": {
              "description": "Configuration options when destination is http_endpoint. Requires the user to also specify an s3_configuration block.  More details are given below.",
              "items": {
                "properties": {
                  "accessKeySecretRef": {
                    "description": "The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.",
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "requestConfiguration": {
                    "description": "The request configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "commonAttributes": {
                          "description": "Describes the metadata sent to the HTTP endpoint destination. More details are given below",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the HTTP endpoint common attribute.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "contentEncoding": {
                          "description": "Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "url": {
                    "description": "The HTTP endpoint URL to which Kinesis Firehose sends your data.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kinesisSourceConfiguration": {
              "description": "The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.",
              "items": {
                "properties": {
                  "kinesisStreamArn": {
                    "description": "The kinesis stream used as the source of the firehose delivery stream.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "mskSourceConfiguration": {
              "description": "The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.",
              "items": {
                "properties": {
                  "authenticationConfiguration": {
                    "description": "The authentication configuration of the Amazon MSK cluster. More details are given below.",
                    "items": {
                      "properties": {
                        "connectivity": {
                          "description": "The type of connectivity used to access the Amazon MSK cluster. Valid values: PUBLIC, PRIVATE.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "mskClusterArn": {
                    "description": "The ARN of the Amazon MSK cluster.",
                    "type": "string"
                  },
                  "topicName": {
                    "description": "The topic name within the Amazon MSK cluster.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "name": {
              "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
              "type": "string"
            },
            "opensearchConfiguration": {
              "description": "Configuration options when destination is opensearch. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterEndpoint": {
                    "description": "The endpoint to use when communicating with the cluster. Conflicts with domain_arn.",
                    "type": "string"
                  },
                  "domainArn": {
                    "description": "The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.",
                    "type": "string"
                  },
                  "domainArnRef": {
                    "description": "Reference to a Domain in opensearch to populate domainArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "domainArnSelector": {
                    "description": "Selector for a Domain in opensearch to populate domainArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "indexRotationPeriod": {
                    "description": "The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "typeName": {
                    "description": "The Elasticsearch type name with maximum length of 100 characters.",
                    "type": "string"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "opensearchserverlessConfiguration": {
              "description": "Configuration options when destination is opensearchserverless. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "collectionEndpoint": {
                    "description": "The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.",
                    "type": "string"
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "redshiftConfiguration": {
              "description": "Configuration options when destination is redshift. Requires the user to also specify an s3_configuration block. More details are given below.",
              "items": {
                "properties": {
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterJdbcurl": {
                    "description": "The jdbcurl of the redshift cluster.",
                    "type": "string"
                  },
                  "copyOptions": {
                    "description": "Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation",
                    "type": "string"
                  },
                  "dataTableColumns": {
                    "description": "The data table columns that will be targeted by the copy command.",
                    "type": "string"
                  },
                  "dataTableName": {
                    "description": "The name of the table in the redshift cluster that the s3 bucket will copy to.",
                    "type": "string"
                  },
                  "passwordSecretRef": {
                    "description": "The password for the username above.",
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupConfiguration": {
                    "description": "The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "username": {
                    "description": "The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.",
                    "type": "string"
                  }
                },
                "required": [
                  "passwordSecretRef"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "region": {
              "description": "If you don't specify an AWS Region, the default is the current region. Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "serverSideEncryption": {
              "description": "Encrypt at rest options. Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.",
              "items": {
                "properties": {
                  "enabled": {
                    "description": "Whether to enable encryption at rest. Default is false.",
                    "type": "boolean"
                  },
                  "keyArn": {
                    "description": "Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.",
                    "type": "string"
                  },
                  "keyType": {
                    "description": "Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "splunkConfiguration": {
              "description": "Configuration options when destination is splunk. More details are given below.",
              "items": {
                "properties": {
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "hecAcknowledgmentTimeout": {
                    "description": "The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.",
                    "type": "number"
                  },
                  "hecEndpoint": {
                    "description": "The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.",
                    "type": "string"
                  },
                  "hecEndpointType": {
                    "description": "The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.",
                    "type": "string"
                  },
                  "hecTokenSecretRef": {
                    "description": "The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.",
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "hecTokenSecretRef"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "versionId": {
              "description": "Specifies the table version for the output data schema. Defaults to LATEST.",
              "type": "string"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) specifying the Stream",
              "type": "string"
            },
            "destination": {
              "description": "\u2013  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, http_endpoint, opensearch and opensearchserverless.",
              "type": "string"
            },
            "destinationId": {
              "type": "string"
            },
            "elasticsearchConfiguration": {
              "description": "Configuration options when destination is elasticsearch. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterEndpoint": {
                    "description": "The endpoint to use when communicating with the cluster. Conflicts with domain_arn.",
                    "type": "string"
                  },
                  "domainArn": {
                    "description": "The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.",
                    "type": "string"
                  },
                  "domainArnRef": {
                    "description": "Reference to a Domain in elasticsearch to populate domainArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "domainArnSelector": {
                    "description": "Selector for a Domain in elasticsearch to populate domainArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "indexRotationPeriod": {
                    "description": "The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "typeName": {
                    "description": "The Elasticsearch type name with maximum length of 100 characters.",
                    "type": "string"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "extendedS3Configuration": {
              "description": "Enhanced configuration options for the s3 destination. More details are given below.",
              "items": {
                "properties": {
                  "bucketArn": {
                    "description": "The ARN of the S3 bucket",
                    "type": "string"
                  },
                  "bucketArnRef": {
                    "description": "Reference to a Bucket in s3 to populate bucketArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "bucketArnSelector": {
                    "description": "Selector for a Bucket in s3 to populate bucketArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "compressionFormat": {
                    "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                    "type": "string"
                  },
                  "dataFormatConversionConfiguration": {
                    "description": "Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "inputFormatConfiguration": {
                          "description": "Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.",
                          "items": {
                            "properties": {
                              "deserializer": {
                                "description": "Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.",
                                "items": {
                                  "properties": {
                                    "hiveJsonSerDe": {
                                      "description": "Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.",
                                      "items": {
                                        "properties": {
                                          "timestampFormats": {
                                            "description": "A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "openXJsonSerDe": {
                                      "description": "Nested argument that specifies the OpenX SerDe. More details below.",
                                      "items": {
                                        "properties": {
                                          "caseInsensitive": {
                                            "description": "When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.",
                                            "type": "boolean"
                                          },
                                          "columnToJsonKeyMappings": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "description": "A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = \"timestamp\" } to map this key to a column named ts.",
                                            "type": "object",
                                            "x-kubernetes-map-type": "granular"
                                          },
                                          "convertDotsInJsonKeysToUnderscores": {
                                            "description": "When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is \"a.b\", you can define the column name to be \"a_b\" when using this option. Defaults to false.",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "outputFormatConfiguration": {
                          "description": "Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.",
                          "items": {
                            "properties": {
                              "serializer": {
                                "description": "Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.",
                                "items": {
                                  "properties": {
                                    "orcSerDe": {
                                      "description": "Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. More details below.",
                                      "items": {
                                        "properties": {
                                          "blockSizeBytes": {
                                            "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.",
                                            "type": "number"
                                          },
                                          "bloomFilterColumns": {
                                            "description": "A list of column names for which you want Kinesis Data Firehose to create bloom filters.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "bloomFilterFalsePositiveProbability": {
                                            "description": "The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.",
                                            "type": "number"
                                          },
                                          "compression": {
                                            "description": "The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.",
                                            "type": "string"
                                          },
                                          "dictionaryKeyThreshold": {
                                            "description": "A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.",
                                            "type": "number"
                                          },
                                          "enablePadding": {
                                            "description": "Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.",
                                            "type": "boolean"
                                          },
                                          "formatVersion": {
                                            "description": "The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.",
                                            "type": "string"
                                          },
                                          "paddingTolerance": {
                                            "description": "A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.",
                                            "type": "number"
                                          },
                                          "rowIndexStride": {
                                            "description": "The number of rows between index entries. The default is 10000 and the minimum is 1000.",
                                            "type": "number"
                                          },
                                          "stripeSizeBytes": {
                                            "description": "The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "parquetSerDe": {
                                      "description": "Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.",
                                      "items": {
                                        "properties": {
                                          "blockSizeBytes": {
                                            "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.",
                                            "type": "number"
                                          },
                                          "compression": {
                                            "description": "The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.",
                                            "type": "string"
                                          },
                                          "enableDictionaryCompression": {
                                            "description": "Indicates whether to enable dictionary compression.",
                                            "type": "boolean"
                                          },
                                          "maxPaddingBytes": {
                                            "description": "The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.",
                                            "type": "number"
                                          },
                                          "pageSizeBytes": {
                                            "description": "The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.",
                                            "type": "number"
                                          },
                                          "writerVersion": {
                                            "description": "Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "schemaConfiguration": {
                          "description": "Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.",
                          "items": {
                            "properties": {
                              "catalogId": {
                                "description": "The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.",
                                "type": "string"
                              },
                              "databaseName": {
                                "description": "Specifies the name of the AWS Glue database that contains the schema for the output data.",
                                "type": "string"
                              },
                              "roleArn": {
                                "description": "The ARN of the role that provides access to the source Kinesis stream.",
                                "type": "string"
                              },
                              "roleArnRef": {
                                "description": "Reference to a Role in iam to populate roleArn.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "roleArnSelector": {
                                "description": "Selector for a Role in iam to populate roleArn.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "tableName": {
                                "description": "Specifies the AWS Glue table that contains the column information that constitutes your data schema.",
                                "type": "string"
                              },
                              "tableNameRef": {
                                "description": "Reference to a CatalogTable in glue to populate tableName.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "tableNameSelector": {
                                "description": "Selector for a CatalogTable in glue to populate tableName.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "versionId": {
                                "description": "Specifies the table version for the output data schema. Defaults to LATEST.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "dynamicPartitioningConfiguration": {
                    "description": "The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "retryDuration": {
                          "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "errorOutputPrefix": {
                    "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                    "type": "string"
                  },
                  "kmsKeyArn": {
                    "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                    "type": "string"
                  },
                  "prefix": {
                    "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupConfiguration": {
                    "description": "The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "httpEndpointConfiguration": {
              "description": "Configuration options when destination is http_endpoint. Requires the user to also specify an s3_configuration block.  More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "requestConfiguration": {
                    "description": "The request configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "commonAttributes": {
                          "description": "Describes the metadata sent to the HTTP endpoint destination. More details are given below",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the HTTP endpoint common attribute.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "contentEncoding": {
                          "description": "Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "url": {
                    "description": "The HTTP endpoint URL to which Kinesis Firehose sends your data.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kinesisSourceConfiguration": {
              "description": "The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.",
              "items": {
                "properties": {
                  "kinesisStreamArn": {
                    "description": "The kinesis stream used as the source of the firehose delivery stream.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "mskSourceConfiguration": {
              "description": "The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.",
              "items": {
                "properties": {
                  "authenticationConfiguration": {
                    "description": "The authentication configuration of the Amazon MSK cluster. More details are given below.",
                    "items": {
                      "properties": {
                        "connectivity": {
                          "description": "The type of connectivity used to access the Amazon MSK cluster. Valid values: PUBLIC, PRIVATE.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "mskClusterArn": {
                    "description": "The ARN of the Amazon MSK cluster.",
                    "type": "string"
                  },
                  "topicName": {
                    "description": "The topic name within the Amazon MSK cluster.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "name": {
              "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
              "type": "string"
            },
            "opensearchConfiguration": {
              "description": "Configuration options when destination is opensearch. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterEndpoint": {
                    "description": "The endpoint to use when communicating with the cluster. Conflicts with domain_arn.",
                    "type": "string"
                  },
                  "domainArn": {
                    "description": "The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.",
                    "type": "string"
                  },
                  "domainArnRef": {
                    "description": "Reference to a Domain in opensearch to populate domainArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "domainArnSelector": {
                    "description": "Selector for a Domain in opensearch to populate domainArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "indexRotationPeriod": {
                    "description": "The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "typeName": {
                    "description": "The Elasticsearch type name with maximum length of 100 characters.",
                    "type": "string"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "opensearchserverlessConfiguration": {
              "description": "Configuration options when destination is opensearchserverless. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "collectionEndpoint": {
                    "description": "The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.",
                    "type": "string"
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "redshiftConfiguration": {
              "description": "Configuration options when destination is redshift. Requires the user to also specify an s3_configuration block. More details are given below.",
              "items": {
                "properties": {
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterJdbcurl": {
                    "description": "The jdbcurl of the redshift cluster.",
                    "type": "string"
                  },
                  "copyOptions": {
                    "description": "Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation",
                    "type": "string"
                  },
                  "dataTableColumns": {
                    "description": "The data table columns that will be targeted by the copy command.",
                    "type": "string"
                  },
                  "dataTableName": {
                    "description": "The name of the table in the redshift cluster that the s3 bucket will copy to.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "s3BackupConfiguration": {
                    "description": "The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "username": {
                    "description": "The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "serverSideEncryption": {
              "description": "Encrypt at rest options. Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.",
              "items": {
                "properties": {
                  "enabled": {
                    "description": "Whether to enable encryption at rest. Default is false.",
                    "type": "boolean"
                  },
                  "keyArn": {
                    "description": "Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.",
                    "type": "string"
                  },
                  "keyType": {
                    "description": "Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "splunkConfiguration": {
              "description": "Configuration options when destination is splunk. More details are given below.",
              "items": {
                "properties": {
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "hecAcknowledgmentTimeout": {
                    "description": "The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.",
                    "type": "number"
                  },
                  "hecEndpoint": {
                    "description": "The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.",
                    "type": "string"
                  },
                  "hecEndpointType": {
                    "description": "The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bucketArnRef": {
                          "description": "Reference to a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketArnSelector": {
                          "description": "Selector for a Bucket in s3 to populate bucketArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "versionId": {
              "description": "Specifies the table version for the output data schema. Defaults to LATEST.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.destination is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destination) || (has(self.initProvider) && has(self.initProvider.destination))"
        },
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "DeliveryStreamStatus defines the observed state of DeliveryStream.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) specifying the Stream",
              "type": "string"
            },
            "destination": {
              "description": "\u2013  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, http_endpoint, opensearch and opensearchserverless.",
              "type": "string"
            },
            "destinationId": {
              "type": "string"
            },
            "elasticsearchConfiguration": {
              "description": "Configuration options when destination is elasticsearch. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterEndpoint": {
                    "description": "The endpoint to use when communicating with the cluster. Conflicts with domain_arn.",
                    "type": "string"
                  },
                  "domainArn": {
                    "description": "The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.",
                    "type": "string"
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "indexRotationPeriod": {
                    "description": "The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "typeName": {
                    "description": "The Elasticsearch type name with maximum length of 100 characters.",
                    "type": "string"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "vpcId": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "extendedS3Configuration": {
              "description": "Enhanced configuration options for the s3 destination. More details are given below.",
              "items": {
                "properties": {
                  "bucketArn": {
                    "description": "The ARN of the S3 bucket",
                    "type": "string"
                  },
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "compressionFormat": {
                    "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                    "type": "string"
                  },
                  "dataFormatConversionConfiguration": {
                    "description": "Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "inputFormatConfiguration": {
                          "description": "Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.",
                          "items": {
                            "properties": {
                              "deserializer": {
                                "description": "Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.",
                                "items": {
                                  "properties": {
                                    "hiveJsonSerDe": {
                                      "description": "Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.",
                                      "items": {
                                        "properties": {
                                          "timestampFormats": {
                                            "description": "A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "openXJsonSerDe": {
                                      "description": "Nested argument that specifies the OpenX SerDe. More details below.",
                                      "items": {
                                        "properties": {
                                          "caseInsensitive": {
                                            "description": "When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.",
                                            "type": "boolean"
                                          },
                                          "columnToJsonKeyMappings": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "description": "A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = \"timestamp\" } to map this key to a column named ts.",
                                            "type": "object",
                                            "x-kubernetes-map-type": "granular"
                                          },
                                          "convertDotsInJsonKeysToUnderscores": {
                                            "description": "When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is \"a.b\", you can define the column name to be \"a_b\" when using this option. Defaults to false.",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "outputFormatConfiguration": {
                          "description": "Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.",
                          "items": {
                            "properties": {
                              "serializer": {
                                "description": "Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.",
                                "items": {
                                  "properties": {
                                    "orcSerDe": {
                                      "description": "Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. More details below.",
                                      "items": {
                                        "properties": {
                                          "blockSizeBytes": {
                                            "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.",
                                            "type": "number"
                                          },
                                          "bloomFilterColumns": {
                                            "description": "A list of column names for which you want Kinesis Data Firehose to create bloom filters.",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "bloomFilterFalsePositiveProbability": {
                                            "description": "The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.",
                                            "type": "number"
                                          },
                                          "compression": {
                                            "description": "The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.",
                                            "type": "string"
                                          },
                                          "dictionaryKeyThreshold": {
                                            "description": "A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.",
                                            "type": "number"
                                          },
                                          "enablePadding": {
                                            "description": "Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.",
                                            "type": "boolean"
                                          },
                                          "formatVersion": {
                                            "description": "The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.",
                                            "type": "string"
                                          },
                                          "paddingTolerance": {
                                            "description": "A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.",
                                            "type": "number"
                                          },
                                          "rowIndexStride": {
                                            "description": "The number of rows between index entries. The default is 10000 and the minimum is 1000.",
                                            "type": "number"
                                          },
                                          "stripeSizeBytes": {
                                            "description": "The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "parquetSerDe": {
                                      "description": "Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.",
                                      "items": {
                                        "properties": {
                                          "blockSizeBytes": {
                                            "description": "The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.",
                                            "type": "number"
                                          },
                                          "compression": {
                                            "description": "The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.",
                                            "type": "string"
                                          },
                                          "enableDictionaryCompression": {
                                            "description": "Indicates whether to enable dictionary compression.",
                                            "type": "boolean"
                                          },
                                          "maxPaddingBytes": {
                                            "description": "The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.",
                                            "type": "number"
                                          },
                                          "pageSizeBytes": {
                                            "description": "The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.",
                                            "type": "number"
                                          },
                                          "writerVersion": {
                                            "description": "Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "schemaConfiguration": {
                          "description": "Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.",
                          "items": {
                            "properties": {
                              "catalogId": {
                                "description": "The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.",
                                "type": "string"
                              },
                              "databaseName": {
                                "description": "Specifies the name of the AWS Glue database that contains the schema for the output data.",
                                "type": "string"
                              },
                              "region": {
                                "description": "If you don't specify an AWS Region, the default is the current region.",
                                "type": "string"
                              },
                              "roleArn": {
                                "description": "The ARN of the role that provides access to the source Kinesis stream.",
                                "type": "string"
                              },
                              "tableName": {
                                "description": "Specifies the AWS Glue table that contains the column information that constitutes your data schema.",
                                "type": "string"
                              },
                              "versionId": {
                                "description": "Specifies the table version for the output data schema. Defaults to LATEST.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "dynamicPartitioningConfiguration": {
                    "description": "The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details. Required when using dynamic partitioning.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "retryDuration": {
                          "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "errorOutputPrefix": {
                    "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                    "type": "string"
                  },
                  "kmsKeyArn": {
                    "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                    "type": "string"
                  },
                  "prefix": {
                    "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "s3BackupConfiguration": {
                    "description": "The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "httpEndpointConfiguration": {
              "description": "Configuration options when destination is http_endpoint. Requires the user to also specify an s3_configuration block.  More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "requestConfiguration": {
                    "description": "The request configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "commonAttributes": {
                          "description": "Describes the metadata sent to the HTTP endpoint destination. More details are given below",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the HTTP endpoint common attribute.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "contentEncoding": {
                          "description": "Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "url": {
                    "description": "The HTTP endpoint URL to which Kinesis Firehose sends your data.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "id": {
              "type": "string"
            },
            "kinesisSourceConfiguration": {
              "description": "The stream and role Amazon Resource Names (ARNs) for a Kinesis data stream used as the source for a delivery stream. More details are given below.",
              "items": {
                "properties": {
                  "kinesisStreamArn": {
                    "description": "The kinesis stream used as the source of the firehose delivery stream.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "mskSourceConfiguration": {
              "description": "The configuration for the Amazon MSK cluster to be used as the source for a delivery stream. More details are given below.",
              "items": {
                "properties": {
                  "authenticationConfiguration": {
                    "description": "The authentication configuration of the Amazon MSK cluster. More details are given below.",
                    "items": {
                      "properties": {
                        "connectivity": {
                          "description": "The type of connectivity used to access the Amazon MSK cluster. Valid values: PUBLIC, PRIVATE.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "mskClusterArn": {
                    "description": "The ARN of the Amazon MSK cluster.",
                    "type": "string"
                  },
                  "topicName": {
                    "description": "The topic name within the Amazon MSK cluster.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "name": {
              "description": "A name to identify the stream. This is unique to the AWS account and region the Stream is created in. When using for WAF logging, name must be prefixed with aws-waf-logs-. See AWS Documentation for more details.",
              "type": "string"
            },
            "opensearchConfiguration": {
              "description": "Configuration options when destination is opensearch. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterEndpoint": {
                    "description": "The endpoint to use when communicating with the cluster. Conflicts with domain_arn.",
                    "type": "string"
                  },
                  "domainArn": {
                    "description": "The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.",
                    "type": "string"
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "indexRotationPeriod": {
                    "description": "The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "typeName": {
                    "description": "The Elasticsearch type name with maximum length of 100 characters.",
                    "type": "string"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "vpcId": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "opensearchserverlessConfiguration": {
              "description": "Configuration options when destination is opensearchserverless. More details are given below.",
              "items": {
                "properties": {
                  "bufferingInterval": {
                    "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                    "type": "number"
                  },
                  "bufferingSize": {
                    "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                    "type": "number"
                  },
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "collectionEndpoint": {
                    "description": "The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.",
                    "type": "string"
                  },
                  "indexName": {
                    "description": "The Elasticsearch index name.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "vpcConfig": {
                    "description": "The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below",
                    "items": {
                      "properties": {
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        },
                        "securityGroupIds": {
                          "description": "A list of security group IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "subnetIds": {
                          "description": "A list of subnet IDs to associate with Kinesis Firehose.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "vpcId": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "redshiftConfiguration": {
              "description": "Configuration options when destination is redshift. Requires the user to also specify an s3_configuration block. More details are given below.",
              "items": {
                "properties": {
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "clusterJdbcurl": {
                    "description": "The jdbcurl of the redshift cluster.",
                    "type": "string"
                  },
                  "copyOptions": {
                    "description": "Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation",
                    "type": "string"
                  },
                  "dataTableColumns": {
                    "description": "The data table columns that will be targeted by the copy command.",
                    "type": "string"
                  },
                  "dataTableName": {
                    "description": "The name of the table in the redshift cluster that the s3 bucket will copy to.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The ARN of the role that provides access to the source Kinesis stream.",
                    "type": "string"
                  },
                  "s3BackupConfiguration": {
                    "description": "The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "username": {
                    "description": "The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "serverSideEncryption": {
              "description": "Encrypt at rest options. Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.",
              "items": {
                "properties": {
                  "enabled": {
                    "description": "Whether to enable encryption at rest. Default is false.",
                    "type": "boolean"
                  },
                  "keyArn": {
                    "description": "Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.",
                    "type": "string"
                  },
                  "keyType": {
                    "description": "Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "splunkConfiguration": {
              "description": "Configuration options when destination is splunk. More details are given below.",
              "items": {
                "properties": {
                  "cloudwatchLoggingOptions": {
                    "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "logGroupName": {
                          "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                          "type": "string"
                        },
                        "logStreamName": {
                          "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "hecAcknowledgmentTimeout": {
                    "description": "The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.",
                    "type": "number"
                  },
                  "hecEndpoint": {
                    "description": "The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.",
                    "type": "string"
                  },
                  "hecEndpointType": {
                    "description": "The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.",
                    "type": "string"
                  },
                  "processingConfiguration": {
                    "description": "The data processing configuration.  More details are given below.",
                    "items": {
                      "properties": {
                        "enabled": {
                          "description": "Whether to enable encryption at rest. Default is false.",
                          "type": "boolean"
                        },
                        "processors": {
                          "description": "Array of data processors. More details are given below",
                          "items": {
                            "properties": {
                              "parameters": {
                                "description": "Array of processor parameters. More details are given below",
                                "items": {
                                  "properties": {
                                    "parameterName": {
                                      "description": "Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                      "type": "string"
                                    },
                                    "parameterValue": {
                                      "description": "Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "retryDuration": {
                    "description": "The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.",
                    "type": "number"
                  },
                  "s3BackupMode": {
                    "description": "The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.",
                    "type": "string"
                  },
                  "s3Configuration": {
                    "description": "The S3 Configuration. See s3_configuration for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The ARN of the S3 bucket",
                          "type": "string"
                        },
                        "bufferingInterval": {
                          "description": "Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.",
                          "type": "number"
                        },
                        "bufferingSize": {
                          "description": "Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.",
                          "type": "number"
                        },
                        "cloudwatchLoggingOptions": {
                          "description": "The CloudWatch Logging Options for the delivery stream. More details are given below",
                          "items": {
                            "properties": {
                              "enabled": {
                                "description": "Whether to enable encryption at rest. Default is false.",
                                "type": "boolean"
                              },
                              "logGroupName": {
                                "description": "The CloudWatch group name for logging. This value is required if enabled is true.",
                                "type": "string"
                              },
                              "logStreamName": {
                                "description": "The CloudWatch log stream name for logging. This value is required if enabled is true.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "compressionFormat": {
                          "description": "The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.",
                          "type": "string"
                        },
                        "errorOutputPrefix": {
                          "description": "Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will be used.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "The \"YYYY/MM/DD/HH\" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The ARN of the role that provides access to the source Kinesis stream.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "versionId": {
              "description": "Specifies the table version for the output data schema. Defaults to LATEST.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
