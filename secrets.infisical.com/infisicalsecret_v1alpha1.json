{
  "description": "InfisicalSecret is the Schema for the infisicalsecrets API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "InfisicalSecretSpec defines the desired state of InfisicalSecret",
      "properties": {
        "authentication": {
          "properties": {
            "awsIamAuth": {
              "properties": {
                "identityId": {
                  "type": "string"
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "identityId",
                "secretsScope"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "azureAuth": {
              "properties": {
                "identityId": {
                  "type": "string"
                },
                "resource": {
                  "type": "string"
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "identityId",
                "secretsScope"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "gcpIamAuth": {
              "properties": {
                "identityId": {
                  "type": "string"
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "serviceAccountKeyFilePath": {
                  "type": "string"
                }
              },
              "required": [
                "identityId",
                "secretsScope",
                "serviceAccountKeyFilePath"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "gcpIdTokenAuth": {
              "properties": {
                "identityId": {
                  "type": "string"
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "identityId",
                "secretsScope"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "kubernetesAuth": {
              "properties": {
                "autoCreateServiceAccountToken": {
                  "description": "Optionally automatically create a service account token for the configured service account.\nIf this is set to `true`, the operator will automatically create a service account token for the configured service account.",
                  "type": "boolean"
                },
                "identityId": {
                  "type": "string"
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "serviceAccountRef": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "namespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "serviceAccountTokenAudiences": {
                  "description": "The audiences to use for the service account token. This is only relevant if `autoCreateServiceAccountToken` is true.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "identityId",
                "secretsScope",
                "serviceAccountRef"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "ldapAuth": {
              "properties": {
                "credentialsRef": {
                  "properties": {
                    "secretName": {
                      "description": "The name of the Kubernetes Secret",
                      "type": "string"
                    },
                    "secretNamespace": {
                      "description": "The name space where the Kubernetes Secret is located",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretName",
                    "secretNamespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "identityId": {
                  "type": "string"
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "credentialsRef",
                "identityId",
                "secretsScope"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "serviceAccount": {
              "properties": {
                "environmentName": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "serviceAccountSecretReference": {
                  "properties": {
                    "secretName": {
                      "description": "The name of the Kubernetes Secret",
                      "type": "string"
                    },
                    "secretNamespace": {
                      "description": "The name space where the Kubernetes Secret is located",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretName",
                    "secretNamespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "environmentName",
                "projectId",
                "serviceAccountSecretReference"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "serviceToken": {
              "properties": {
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "serviceTokenSecretReference": {
                  "properties": {
                    "secretName": {
                      "description": "The name of the Kubernetes Secret",
                      "type": "string"
                    },
                    "secretNamespace": {
                      "description": "The name space where the Kubernetes Secret is located",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretName",
                    "secretNamespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "secretsScope",
                "serviceTokenSecretReference"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "universalAuth": {
              "properties": {
                "credentialsRef": {
                  "properties": {
                    "secretName": {
                      "description": "The name of the Kubernetes Secret",
                      "type": "string"
                    },
                    "secretNamespace": {
                      "description": "The name space where the Kubernetes Secret is located",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretName",
                    "secretNamespace"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "secretsScope": {
                  "properties": {
                    "envSlug": {
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string"
                    },
                    "projectSlug": {
                      "type": "string"
                    },
                    "recursive": {
                      "type": "boolean"
                    },
                    "secretName": {
                      "type": "string"
                    },
                    "secretsPath": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "envSlug",
                    "secretsPath"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "credentialsRef",
                "secretsScope"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hostAPI": {
          "description": "Infisical host to pull secrets from",
          "type": "string"
        },
        "instantUpdates": {
          "type": "boolean"
        },
        "managedKubeConfigMapReferences": {
          "items": {
            "properties": {
              "configMapName": {
                "description": "The name of the Kubernetes ConfigMap",
                "type": "string"
              },
              "configMapNamespace": {
                "description": "The namespace where the Kubernetes ConfigMap is located",
                "type": "string"
              },
              "creationPolicy": {
                "default": "Orphan",
                "description": "The Kubernetes ConfigMap creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the config map and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the config map owner. This will result in the config map being orphaned and not deleted when the resource is deleted.",
                "type": "string"
              },
              "template": {
                "description": "The template to transform the secret data",
                "properties": {
                  "data": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The template key values",
                    "type": "object"
                  },
                  "includeAllSecrets": {
                    "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "configMapName",
              "configMapNamespace"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "managedKubeSecretReferences": {
          "items": {
            "properties": {
              "creationPolicy": {
                "default": "Orphan",
                "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
                "type": "string"
              },
              "secretName": {
                "description": "The name of the Kubernetes Secret",
                "type": "string"
              },
              "secretNamespace": {
                "description": "The name space where the Kubernetes Secret is located",
                "type": "string"
              },
              "secretType": {
                "default": "Opaque",
                "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                "type": "string"
              },
              "template": {
                "description": "The template to transform the secret data",
                "properties": {
                  "data": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The template key values",
                    "type": "object"
                  },
                  "includeAllSecrets": {
                    "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "secretName",
              "secretNamespace"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "managedSecretReference": {
          "properties": {
            "creationPolicy": {
              "default": "Orphan",
              "description": "The Kubernetes Secret creation policy.\nEnum with values: 'Owner', 'Orphan'.\nOwner creates the secret and sets .metadata.ownerReferences of the InfisicalSecret CRD that created it.\nOrphan will not set the secret owner. This will result in the secret being orphaned and not deleted when the resource is deleted.",
              "type": "string"
            },
            "secretName": {
              "description": "The name of the Kubernetes Secret",
              "type": "string"
            },
            "secretNamespace": {
              "description": "The name space where the Kubernetes Secret is located",
              "type": "string"
            },
            "secretType": {
              "default": "Opaque",
              "description": "The Kubernetes Secret type (experimental feature). More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
              "type": "string"
            },
            "template": {
              "description": "The template to transform the secret data",
              "properties": {
                "data": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "The template key values",
                  "type": "object"
                },
                "includeAllSecrets": {
                  "description": "This injects all retrieved secrets into the top level of your template.\nSecrets defined in the template will take precedence over the injected ones.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "secretName",
            "secretNamespace"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "resyncInterval": {
          "default": 60,
          "type": "integer"
        },
        "tls": {
          "properties": {
            "caRef": {
              "description": "Reference to secret containing CA cert",
              "properties": {
                "key": {
                  "description": "The name of the secret property with the CA certificate value",
                  "type": "string"
                },
                "secretName": {
                  "description": "The name of the Kubernetes Secret",
                  "type": "string"
                },
                "secretNamespace": {
                  "description": "The namespace where the Kubernetes Secret is located",
                  "type": "string"
                }
              },
              "required": [
                "key",
                "secretName",
                "secretNamespace"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tokenSecretReference": {
          "properties": {
            "secretName": {
              "description": "The name of the Kubernetes Secret",
              "type": "string"
            },
            "secretNamespace": {
              "description": "The name space where the Kubernetes Secret is located",
              "type": "string"
            }
          },
          "required": [
            "secretName",
            "secretNamespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "resyncInterval"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "InfisicalSecretStatus defines the observed state of InfisicalSecret",
      "properties": {
        "conditions": {
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "conditions"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
