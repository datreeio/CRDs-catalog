{
  "description": "TargetGroupBinding is the Schema for the TargetGroupBinding API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "TargetGroupBindingSpec defines the desired state of TargetGroupBinding",
      "properties": {
        "multiClusterTargetGroup": {
          "description": "MultiClusterTargetGroup Denotes if the TargetGroup is shared among multiple clusters",
          "type": "boolean"
        },
        "networking": {
          "description": "networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.",
          "properties": {
            "ingress": {
              "description": "List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.",
              "items": {
                "properties": {
                  "from": {
                    "description": "List of peers which should be able to access the targets in TargetGroup.\nAt least one NetworkingPeer should be specified.",
                    "items": {
                      "description": "NetworkingPeer defines the source/destination peer for networking rules.",
                      "properties": {
                        "ipBlock": {
                          "description": "IPBlock defines an IPBlock peer.\nIf specified, none of the other fields can be set.",
                          "properties": {
                            "cidr": {
                              "description": "CIDR is the network CIDR.\nBoth IPV4 or IPV6 CIDR are accepted.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "cidr"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "securityGroup": {
                          "description": "SecurityGroup defines a SecurityGroup peer.\nIf specified, none of the other fields can be set.",
                          "properties": {
                            "groupID": {
                              "description": "GroupID is the EC2 SecurityGroupID.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "groupID"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "ports": {
                    "description": "List of ports which should be made accessible on the targets in TargetGroup.\nIf ports is empty or unspecified, it defaults to all ports with TCP.",
                    "items": {
                      "properties": {
                        "port": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "description": "The port which traffic must match.\nWhen NodePort endpoints(instance TargetType) is used, this must be a numerical port.\nWhen Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods.\nif port is unspecified, it defaults to all ports.",
                          "x-kubernetes-int-or-string": true
                        },
                        "protocol": {
                          "description": "The protocol which traffic must match.\nIf protocol is unspecified, it defaults to TCP.",
                          "enum": [
                            "TCP",
                            "UDP"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "from",
                  "ports"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "serviceRef": {
          "description": "serviceRef is a reference to a Kubernetes Service and ServicePort.",
          "properties": {
            "name": {
              "description": "Name is the name of the Service.",
              "type": "string"
            },
            "port": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Port is the port of the ServicePort.",
              "x-kubernetes-int-or-string": true
            }
          },
          "required": [
            "name",
            "port"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "targetGroupARN": {
          "description": "targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.",
          "type": "string"
        },
        "targetType": {
          "description": "targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.",
          "enum": [
            "instance",
            "ip"
          ],
          "type": "string"
        }
      },
      "required": [
        "serviceRef",
        "targetGroupARN"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "TargetGroupBindingStatus defines the observed state of TargetGroupBinding",
      "properties": {
        "observedGeneration": {
          "description": "The generation observed by the TargetGroupBinding controller.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
