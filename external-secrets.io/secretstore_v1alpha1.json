{
  "description": "SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretStoreSpec defines the desired state of SecretStore.",
      "properties": {
        "controller": {
          "description": "Used to select the correct ESO controller (think: ingress.ingressClassName)\nThe ESO controller is instantiated with a specific controller name and filters ES based on this property",
          "type": "string"
        },
        "provider": {
          "description": "Used to configure the provider. Only one provider may be set",
          "maxProperties": 1,
          "minProperties": 1,
          "properties": {
            "akeyless": {
              "description": "Akeyless configures this store to sync secrets using Akeyless Vault provider",
              "properties": {
                "akeylessGWApiURL": {
                  "description": "Akeyless GW API Url from which the secrets to be fetched from.",
                  "type": "string"
                },
                "authSecretRef": {
                  "description": "Auth configures how the operator authenticates with Akeyless.",
                  "properties": {
                    "kubernetesAuth": {
                      "description": "Kubernetes authenticates with Akeyless by passing the ServiceAccount\ntoken stored in the named Secret resource.",
                      "properties": {
                        "accessID": {
                          "description": "the Akeyless Kubernetes auth-method access-id",
                          "type": "string"
                        },
                        "k8sConfName": {
                          "description": "Kubernetes-auth configuration name in Akeyless-Gateway",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Optional secret field containing a Kubernetes ServiceAccount JWT used\nfor authenticating with Akeyless. If a name is specified without a key,\n`token` is the default. If one is not specified, the one bound to\nthe controller will be used.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "serviceAccountRef": {
                          "description": "Optional service account field containing the name of a kubernetes ServiceAccount.\nIf the service account is specified, the service account secret token JWT will be used\nfor authenticating with Akeyless. If the service account selector is not supplied,\nthe secretRef will be used instead.",
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "accessID",
                        "k8sConfName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "secretRef": {
                      "description": "Reference to a Secret that contains the details\nto authenticate with Akeyless.",
                      "properties": {
                        "accessID": {
                          "description": "The SecretAccessID is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "accessType": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "accessTypeParam": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "caBundle": {
                  "description": "PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used\nif the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates\nare used to validate the TLS connection.",
                  "format": "byte",
                  "type": "string"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Akeyless Gateway certificate.",
                  "properties": {
                    "key": {
                      "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "akeylessGWApiURL",
                "authSecretRef"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "alibaba": {
              "description": "Alibaba configures this store to sync secrets using Alibaba Cloud provider",
              "properties": {
                "auth": {
                  "description": "AlibabaAuth contains a secretRef for credentials.",
                  "properties": {
                    "rrsa": {
                      "description": "Authenticate against Alibaba using RRSA.",
                      "properties": {
                        "oidcProviderArn": {
                          "type": "string"
                        },
                        "oidcTokenFilePath": {
                          "type": "string"
                        },
                        "roleArn": {
                          "type": "string"
                        },
                        "sessionName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "oidcProviderArn",
                        "oidcTokenFilePath",
                        "roleArn",
                        "sessionName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "secretRef": {
                      "description": "AlibabaAuthSecretRef holds secret references for Alibaba credentials.",
                      "properties": {
                        "accessKeyIDSecretRef": {
                          "description": "The AccessKeyID is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "accessKeySecretSecretRef": {
                          "description": "The AccessKeySecret is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "accessKeyIDSecretRef",
                        "accessKeySecretSecretRef"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "regionID": {
                  "description": "Alibaba Region to be used for the provider",
                  "type": "string"
                }
              },
              "required": [
                "auth",
                "regionID"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "aws": {
              "description": "AWS configures this store to sync secrets using AWS Secret Manager provider",
              "properties": {
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against AWS\nif not set aws sdk will infer credentials from your environment\nsee: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                  "properties": {
                    "jwt": {
                      "description": "Authenticate against AWS using service account tokens.",
                      "properties": {
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "secretRef": {
                      "description": "AWSAuthSecretRef holds secret references for AWS credentials\nboth AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.",
                      "properties": {
                        "accessKeyIDSecretRef": {
                          "description": "The AccessKeyID is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "region": {
                  "description": "AWS Region to be used for the provider",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a Role ARN which the SecretManager provider will assume",
                  "type": "string"
                },
                "service": {
                  "description": "Service defines which service should be used to fetch the secrets",
                  "enum": [
                    "SecretsManager",
                    "ParameterStore"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "region",
                "service"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "azurekv": {
              "description": "AzureKV configures this store to sync secrets using Azure Key Vault provider",
              "properties": {
                "authSecretRef": {
                  "description": "Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.",
                  "properties": {
                    "clientId": {
                      "description": "The Azure clientId of the service principle used for authentication.",
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "clientSecret": {
                      "description": "The Azure ClientSecret of the service principle used for authentication.",
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "authType": {
                  "default": "ServicePrincipal",
                  "description": "Auth type defines how to authenticate to the keyvault service.\nValid values are:\n- \"ServicePrincipal\" (default): Using a service principal (tenantId, clientId, clientSecret)\n- \"ManagedIdentity\": Using Managed Identity assigned to the pod (see aad-pod-identity)",
                  "enum": [
                    "ServicePrincipal",
                    "ManagedIdentity",
                    "WorkloadIdentity"
                  ],
                  "type": "string"
                },
                "identityId": {
                  "description": "If multiple Managed Identity is assigned to the pod, you can select the one to be used",
                  "type": "string"
                },
                "serviceAccountRef": {
                  "description": "ServiceAccountRef specified the service account\nthat should be used when authenticating with WorkloadIdentity.",
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "tenantId": {
                  "description": "TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.",
                  "type": "string"
                },
                "vaultUrl": {
                  "description": "Vault Url from which the secrets to be fetched from.",
                  "type": "string"
                }
              },
              "required": [
                "vaultUrl"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "fake": {
              "description": "Fake configures a store with static key/value pairs",
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "valueMap": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "required": [
                "data"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "gcpsm": {
              "description": "GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider",
              "properties": {
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against GCP",
                  "properties": {
                    "secretRef": {
                      "properties": {
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "workloadIdentity": {
                      "properties": {
                        "clusterLocation": {
                          "type": "string"
                        },
                        "clusterName": {
                          "type": "string"
                        },
                        "clusterProjectID": {
                          "type": "string"
                        },
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "clusterLocation",
                        "clusterName",
                        "serviceAccountRef"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "projectID": {
                  "description": "ProjectID project where secret is located",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "gitlab": {
              "description": "GitLab configures this store to sync secrets using GitLab Variables provider",
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with a GitLab instance.",
                  "properties": {
                    "SecretRef": {
                      "properties": {
                        "accessToken": {
                          "description": "AccessToken is used for authentication.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "SecretRef"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "projectID": {
                  "description": "ProjectID specifies a project where secrets are located.",
                  "type": "string"
                },
                "url": {
                  "description": "URL configures the GitLab instance URL. Defaults to https://gitlab.com/.",
                  "type": "string"
                }
              },
              "required": [
                "auth"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "ibm": {
              "description": "IBM configures this store to sync secrets using IBM Cloud provider",
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with the IBM secrets manager.",
                  "properties": {
                    "secretRef": {
                      "properties": {
                        "secretApiKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "secretRef"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "serviceUrl": {
                  "description": "ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance",
                  "type": "string"
                }
              },
              "required": [
                "auth"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "kubernetes": {
              "description": "Kubernetes configures this store to sync secrets using a Kubernetes cluster provider",
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with a Kubernetes instance.",
                  "maxProperties": 1,
                  "minProperties": 1,
                  "properties": {
                    "cert": {
                      "description": "has both clientCert and clientKey as secretKeySelector",
                      "properties": {
                        "clientCert": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "clientKey": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceAccount": {
                      "description": "points to a service account that should be used for authentication",
                      "properties": {
                        "serviceAccount": {
                          "description": "A reference to a ServiceAccount resource.",
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "token": {
                      "description": "use static token to authenticate with",
                      "properties": {
                        "bearerToken": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "remoteNamespace": {
                  "default": "default",
                  "description": "Remote namespace to fetch the secrets from",
                  "type": "string"
                },
                "server": {
                  "description": "configures the Kubernetes server Address.",
                  "properties": {
                    "caBundle": {
                      "description": "CABundle is a base64-encoded CA certificate",
                      "format": "byte",
                      "type": "string"
                    },
                    "caProvider": {
                      "description": "see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider",
                      "properties": {
                        "key": {
                          "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the object located at the provider type.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "The namespace the Provider type is in.",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                          "enum": [
                            "Secret",
                            "ConfigMap"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "url": {
                      "default": "kubernetes.default",
                      "description": "configures the Kubernetes server Address.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "auth"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "oracle": {
              "description": "Oracle configures this store to sync secrets using Oracle Vault provider",
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with the Oracle Vault.\nIf empty, instance principal is used. Optionally, the authenticating principal type\nand/or user data may be supplied for the use of workload identity and user principal.",
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef to pass through sensitive information.",
                      "properties": {
                        "fingerprint": {
                          "description": "Fingerprint is the fingerprint of the API private key.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "privatekey": {
                          "description": "PrivateKey is the user's API Signing Key in PEM format, used for authentication.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "fingerprint",
                        "privatekey"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "tenancy": {
                      "description": "Tenancy is the tenancy OCID where user is located.",
                      "type": "string"
                    },
                    "user": {
                      "description": "User is an access OCID specific to the account.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "secretRef",
                    "tenancy",
                    "user"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "compartment": {
                  "description": "Compartment is the vault compartment OCID.\nRequired for PushSecret",
                  "type": "string"
                },
                "encryptionKey": {
                  "description": "EncryptionKey is the OCID of the encryption key within the vault.\nRequired for PushSecret",
                  "type": "string"
                },
                "principalType": {
                  "description": "The type of principal to use for authentication. If left blank, the Auth struct will\ndetermine the principal type. This optional field must be specified if using\nworkload identity.",
                  "enum": [
                    "",
                    "UserPrincipal",
                    "InstancePrincipal",
                    "Workload"
                  ],
                  "type": "string"
                },
                "region": {
                  "description": "Region is the region where vault is located.",
                  "type": "string"
                },
                "serviceAccountRef": {
                  "description": "ServiceAccountRef specified the service account\nthat should be used when authenticating with WorkloadIdentity.",
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "vault": {
                  "description": "Vault is the vault's OCID of the specific vault where secret is located.",
                  "type": "string"
                }
              },
              "required": [
                "region",
                "vault"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "passworddepot": {
              "description": "Configures a store to sync secrets with a Password Depot instance.",
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with a Password Depot instance.",
                  "properties": {
                    "secretRef": {
                      "properties": {
                        "credentials": {
                          "description": "Username / Password is used for authentication.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "secretRef"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "database": {
                  "description": "Database to use as source",
                  "type": "string"
                },
                "host": {
                  "description": "URL configures the Password Depot instance URL.",
                  "type": "string"
                }
              },
              "required": [
                "auth",
                "database",
                "host"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "vault": {
              "description": "Vault configures this store to sync secrets using Hashi provider",
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with the Vault server.",
                  "properties": {
                    "appRole": {
                      "description": "AppRole authenticates with Vault using the App Role auth mechanism,\nwith the role and secret stored in a Kubernetes Secret resource.",
                      "properties": {
                        "path": {
                          "default": "approle",
                          "description": "Path where the App Role authentication backend is mounted\nin Vault, e.g: \"approle\"",
                          "type": "string"
                        },
                        "roleId": {
                          "description": "RoleID configured in the App Role authentication backend when setting\nup the authentication backend in Vault.",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Reference to a key in a Secret that contains the App Role secret used\nto authenticate with Vault.\nThe `key` field must be specified and denotes which entry within the Secret\nresource is used as the app role secret.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "path",
                        "roleId",
                        "secretRef"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "cert": {
                      "description": "Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate\nCert authentication method",
                      "properties": {
                        "clientCert": {
                          "description": "ClientCert is a certificate to authenticate using the Cert Vault\nauthentication method",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "secretRef": {
                          "description": "SecretRef to a key in a Secret resource containing client private key to\nauthenticate with Vault using the Cert authentication method",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "jwt": {
                      "description": "Jwt authenticates with Vault by passing role and JWT token using the\nJWT/OIDC authentication method",
                      "properties": {
                        "kubernetesServiceAccountToken": {
                          "description": "Optional ServiceAccountToken specifies the Kubernetes service account for which to request\na token for with the `TokenRequest` API.",
                          "properties": {
                            "audiences": {
                              "description": "Optional audiences field that will be used to request a temporary Kubernetes service\naccount token for the service account referenced by `serviceAccountRef`.\nDefaults to a single audience `vault` it not specified.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "expirationSeconds": {
                              "description": "Optional expiration time in seconds that will be used to request a temporary\nKubernetes service account token for the service account referenced by\n`serviceAccountRef`.\nDefaults to 10 minutes.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "serviceAccountRef": {
                              "description": "Service account field containing the name of a kubernetes ServiceAccount.",
                              "properties": {
                                "audiences": {
                                  "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "name": {
                                  "description": "The name of the ServiceAccount resource being referred to.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "serviceAccountRef"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "path": {
                          "default": "jwt",
                          "description": "Path where the JWT authentication backend is mounted\nin Vault, e.g: \"jwt\"",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a JWT role to authenticate using the JWT/OIDC Vault\nauthentication method",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Optional SecretRef that refers to a key in a Secret resource containing JWT token to\nauthenticate with Vault using the JWT/OIDC authentication method.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "path"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "kubernetes": {
                      "description": "Kubernetes authenticates with Vault by passing the ServiceAccount\ntoken stored in the named Secret resource to the Vault server.",
                      "properties": {
                        "mountPath": {
                          "default": "kubernetes",
                          "description": "Path where the Kubernetes authentication backend is mounted in Vault, e.g:\n\"kubernetes\"",
                          "type": "string"
                        },
                        "role": {
                          "description": "A required field containing the Vault Role to assume. A Role binds a\nKubernetes ServiceAccount with a set of Vault policies.",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Optional secret field containing a Kubernetes ServiceAccount JWT used\nfor authenticating with Vault. If a name is specified without a key,\n`token` is the default. If one is not specified, the one bound to\nthe controller will be used.",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "serviceAccountRef": {
                          "description": "Optional service account field containing the name of a kubernetes ServiceAccount.\nIf the service account is specified, the service account secret token JWT will be used\nfor authenticating with Vault. If the service account selector is not supplied,\nthe secretRef will be used instead.",
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "mountPath",
                        "role"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "ldap": {
                      "description": "Ldap authenticates with Vault by passing username/password pair using\nthe LDAP authentication method",
                      "properties": {
                        "path": {
                          "default": "ldap",
                          "description": "Path where the LDAP authentication backend is mounted\nin Vault, e.g: \"ldap\"",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "SecretRef to a key in a Secret resource containing password for the LDAP\nuser used to authenticate with Vault using the LDAP authentication\nmethod",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "username": {
                          "description": "Username is a LDAP user name used to authenticate using the LDAP Vault\nauthentication method",
                          "type": "string"
                        }
                      },
                      "required": [
                        "path",
                        "username"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "tokenSecretRef": {
                      "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "caBundle": {
                  "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used\nif the Server URL is using HTTPS protocol. This parameter is ignored for\nplain HTTP protocol connection. If not set the system root certificates\nare used to validate the TLS connection.",
                  "format": "byte",
                  "type": "string"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Vault server certificate.",
                  "properties": {
                    "key": {
                      "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "forwardInconsistent": {
                  "description": "ForwardInconsistent tells Vault to forward read-after-write requests to the Vault\nleader instead of simply retrying within a loop. This can increase performance if\nthe option is enabled serverside.\nhttps://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header",
                  "type": "boolean"
                },
                "namespace": {
                  "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows\nVault environments to support Secure Multi-tenancy. e.g: \"ns1\".\nMore about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                  "type": "string"
                },
                "path": {
                  "description": "Path is the mount path of the Vault KV backend endpoint, e.g:\n\"secret\". The v2 KV secret engine version specific \"/data\" path suffix\nfor fetching secrets from Vault is optional and will be appended\nif not present in specified path.",
                  "type": "string"
                },
                "readYourWrites": {
                  "description": "ReadYourWrites ensures isolated read-after-write semantics by\nproviding discovered cluster replication states in each request.\nMore information about eventual consistency in Vault can be found here\nhttps://www.vaultproject.io/docs/enterprise/consistency",
                  "type": "boolean"
                },
                "server": {
                  "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                  "type": "string"
                },
                "version": {
                  "default": "v2",
                  "description": "Version is the Vault KV secret engine version. This can be either \"v1\" or\n\"v2\". Version defaults to \"v2\".",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "auth",
                "server"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "webhook": {
              "description": "Webhook configures this store to sync secrets using a generic templated webhook",
              "properties": {
                "body": {
                  "description": "Body",
                  "type": "string"
                },
                "caBundle": {
                  "description": "PEM encoded CA bundle used to validate webhook server certificate. Only used\nif the Server URL is using HTTPS protocol. This parameter is ignored for\nplain HTTP protocol connection. If not set the system root certificates\nare used to validate the TLS connection.",
                  "format": "byte",
                  "type": "string"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate webhook server certificate.",
                  "properties": {
                    "key": {
                      "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "headers": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Headers",
                  "type": "object"
                },
                "method": {
                  "description": "Webhook Method",
                  "type": "string"
                },
                "result": {
                  "description": "Result formatting",
                  "properties": {
                    "jsonPath": {
                      "description": "Json path of return value",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "secrets": {
                  "description": "Secrets to fill in templates\nThese secrets will be passed to the templating function as key value pairs under the given name",
                  "items": {
                    "properties": {
                      "name": {
                        "description": "Name of this secret in templates",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "Secret ref to fill in credentials",
                        "properties": {
                          "key": {
                            "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the Secret resource being referred to.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name",
                      "secretRef"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "timeout": {
                  "description": "Timeout",
                  "type": "string"
                },
                "url": {
                  "description": "Webhook url to call",
                  "type": "string"
                }
              },
              "required": [
                "result",
                "url"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "yandexlockbox": {
              "description": "YandexLockbox configures this store to sync secrets using Yandex Lockbox provider",
              "properties": {
                "apiEndpoint": {
                  "description": "Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')",
                  "type": "string"
                },
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against Yandex Lockbox",
                  "properties": {
                    "authorizedKeySecretRef": {
                      "description": "The authorized key used for authentication",
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Yandex.Cloud server certificate.",
                  "properties": {
                    "certSecretRef": {
                      "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "auth"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "retrySettings": {
          "description": "Used to configure http retries if failed",
          "properties": {
            "maxRetries": {
              "format": "int32",
              "type": "integer"
            },
            "retryInterval": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "provider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "SecretStoreStatus defines the observed state of the SecretStore.",
      "properties": {
        "conditions": {
          "items": {
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
