{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ReportSpec contains the values of the GlobalReport.",
      "properties": {
        "cis": {
          "description": "This field contain all the parameters for configuring a CIS benchmark report.",
          "properties": {
            "highThreshold": {
              "description": "Interpretted as a percentage to indicate at what levels of passing tests a node should be considered HIGH, MED, and LOW. - If >= HighThreshold flag as high - Otherwise, if > MedThreshold flag as med - Otherwise flag as low.",
              "type": "integer"
            },
            "includeUnscoredTests": {
              "description": "Specifies if the report should also show results for scored/not-scored tests.",
              "type": "boolean"
            },
            "medThreshold": {
              "type": "integer"
            },
            "numFailedTests": {
              "description": "Configure the number of top failed tests to show up on the report.",
              "type": "integer"
            },
            "resultsFilters": {
              "description": "Benchmark results filters. The first matching set of filters is applied to each set of benchmark results. If there are no matching filters, the full set of benchmark results will be included in the report.",
              "items": {
                "description": "CISBenchmarkFilter provides filters for a set of benchmarks that match particular selection criteria.",
                "properties": {
                  "benchmarkSelection": {
                    "description": "BenchmarkSelection specifies which benchmarks this filter applies to. If not specified, applies to all.",
                    "properties": {
                      "kubernetesVersion": {
                        "description": "KubernetesVersion is used select nodes that are running a specific version of kubelet. The full version need not be fully specified down to the patch level, in which case the significant parts of the version are matched. e.g. \"1.0\" will match versions \"1.0.1\" and \"1.0.2\" If not specified, matches all versions.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "exclude": {
                    "description": "Exclude is an array of test indices to exclude from the report.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "include": {
                    "description": "Include is an array of test indices to show in the report. Is additive if IncludeUnscoredTests is true. Takes precedence over Exclude.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "endpoints": {
          "description": "Endpoints is used to specify which endpoints are in-scope and stored in the generated report data. Only used if endpoints data and/or audit logs are gathered in the report. If omitted, treated as everything in-scope.",
          "properties": {
            "namespaces": {
              "description": "Namespace match restricts endpoint selection to those in the selected namespaces.",
              "properties": {
                "names": {
                  "description": "Names is an optional field that specifies a set of resources by name.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "selector": {
                  "description": "Selector is an optional field that selects a set of resources by label. If both Names and Selector are specified then they are AND'ed.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "selector": {
              "description": "Selector, selects endpoints by endpoint labels. If omitted, all endpoints are included in the report data.",
              "type": "string"
            },
            "serviceAccounts": {
              "description": "ServiceAccount match restricts endpoint selection to those in the selected service accounts.",
              "properties": {
                "names": {
                  "description": "Names is an optional field that specifies a set of resources by name.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "selector": {
                  "description": "Selector is an optional field that selects a set of resources by label. If both Names and Selector are specified then they are AND'ed.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "jobNodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The node selector used to specify which nodes the report job may be scheduled on.",
          "type": "object"
        },
        "reportType": {
          "description": "The name of the report type.",
          "type": "string"
        },
        "schedule": {
          "description": "The report schedule specified in cron format. This specifies both the start and end times of each report, where the end time of one report becomes the start time of the next report. Separate jobs are created to generate a report, and the job generates the report data from archived audit and traffic data. To ensure this data is actually archived, the jobs to generate each report starts at a configurable time *after* the end time of the report that is being generated. The default job start delay is 30m, but is configurable through the compliance-controller environments. The cron format has minute accuracy, but only up to two values may be configured for the minute column which means you may only have at most two reports for each hour period.",
          "type": "string"
        },
        "suspend": {
          "description": "This flag tells the controller to suspend subsequent jobs for generating reports, it does not apply to already started jobs. If jobs are resumed then the controller will start creating jobs for any reports that were missed while the job was suspended.",
          "type": "boolean"
        }
      },
      "required": [
        "reportType"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ReportStatus contains the status of the automated report generation.",
      "properties": {
        "activeReportJobs": {
          "description": "The set of active report jobs.",
          "items": {
            "description": "ReportJob contains",
            "properties": {
              "end": {
                "description": "The end time of the report.",
                "format": "date-time",
                "type": "string"
              },
              "job": {
                "description": "A reference to the report creation job if known.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "start": {
                "description": "The start time of the report.",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "end",
              "job",
              "start"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "lastFailedReportJobs": {
          "description": "The configured report jobs that have failed.",
          "items": {
            "description": "CompletedReportJob augments the ReportJob with completion details.",
            "properties": {
              "end": {
                "description": "The end time of the report.",
                "format": "date-time",
                "type": "string"
              },
              "job": {
                "description": "A reference to the report creation job if known.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "jobCompletionTime": {
                "description": "The time the report job completed.",
                "format": "date-time",
                "type": "string"
              },
              "start": {
                "description": "The start time of the report.",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "end",
              "job",
              "start"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "lastScheduledReportJob": {
          "description": "The last scheduled report job.",
          "properties": {
            "end": {
              "description": "The end time of the report.",
              "format": "date-time",
              "type": "string"
            },
            "job": {
              "description": "A reference to the report creation job if known.",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "start": {
              "description": "The start time of the report.",
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "end",
            "job",
            "start"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "lastSuccessfulReportJobs": {
          "description": "The configured report jobs that have completed successfully.",
          "items": {
            "description": "CompletedReportJob augments the ReportJob with completion details.",
            "properties": {
              "end": {
                "description": "The end time of the report.",
                "format": "date-time",
                "type": "string"
              },
              "job": {
                "description": "A reference to the report creation job if known.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "jobCompletionTime": {
                "description": "The time the report job completed.",
                "format": "date-time",
                "type": "string"
              },
              "start": {
                "description": "The start time of the report.",
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "end",
              "job",
              "start"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
