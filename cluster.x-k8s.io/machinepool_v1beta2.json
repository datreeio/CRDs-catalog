{
  "description": "MachinePool is the Schema for the machinepools API.\nNOTE: This CRD can only be used if the MachinePool feature gate is enabled.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "spec is the desired state of MachinePool.",
      "properties": {
        "clusterName": {
          "description": "clusterName is the name of the Cluster this object belongs to.",
          "maxLength": 63,
          "minLength": 1,
          "type": "string"
        },
        "failureDomains": {
          "description": "failureDomains is the list of failure domains this MachinePool should be attached to.",
          "items": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "maxItems": 100,
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "providerIDList": {
          "description": "providerIDList are the identification IDs of machine instances provided by the provider.\nThis field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.",
          "items": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string"
          },
          "maxItems": 10000,
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "replicas": {
          "description": "replicas is the number of desired machines. Defaults to 1.\nThis is a pointer to distinguish between explicit zero and not specified.",
          "format": "int32",
          "type": "integer"
        },
        "template": {
          "description": "template describes the machines that will be created.",
          "properties": {
            "metadata": {
              "description": "metadata is the standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "minProperties": 1,
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "labels is a map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "spec": {
              "description": "spec is the specification of the desired behavior of the machine.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
              "properties": {
                "bootstrap": {
                  "description": "bootstrap is a reference to a local struct which encapsulates\nfields to configure the Machine\u2019s bootstrapping mechanism.",
                  "properties": {
                    "configRef": {
                      "description": "configRef is a reference to a bootstrap provider-specific resource\nthat holds configuration details. The reference is optional to\nallow users/operators to specify Bootstrap.DataSecretName without\nthe need of a controller.",
                      "properties": {
                        "apiGroup": {
                          "description": "apiGroup is the group of the resource being referenced.\napiGroup must be fully qualified domain name.\nThe corresponding version for this reference will be looked up from the contract\nlabels of the corresponding CRD of the resource being referenced.",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                          "type": "string"
                        },
                        "kind": {
                          "description": "kind of the resource being referenced.\nkind must consist of alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character.",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                          "type": "string"
                        },
                        "name": {
                          "description": "name of the resource being referenced.\nname must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "apiGroup",
                        "kind",
                        "name"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "dataSecretName": {
                      "description": "dataSecretName is the name of the secret that stores the bootstrap data script.\nIf nil, the Machine should remain in the Pending state.",
                      "maxLength": 253,
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "clusterName": {
                  "description": "clusterName is the name of the Cluster this object belongs to.",
                  "maxLength": 63,
                  "minLength": 1,
                  "type": "string"
                },
                "deletion": {
                  "description": "deletion contains configuration options for Machine deletion.",
                  "minProperties": 1,
                  "properties": {
                    "nodeDeletionTimeoutSeconds": {
                      "description": "nodeDeletionTimeoutSeconds defines how long the controller will attempt to delete the Node that the Machine\nhosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.\nDefaults to 10 seconds.",
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "nodeDrainTimeoutSeconds": {
                      "description": "nodeDrainTimeoutSeconds is the total amount of time that the controller will spend on draining a node.\nThe default value is 0, meaning that the node can be drained without any time limitations.\nNOTE: nodeDrainTimeoutSeconds is different from `kubectl drain --timeout`",
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "nodeVolumeDetachTimeoutSeconds": {
                      "description": "nodeVolumeDetachTimeoutSeconds is the total amount of time that the controller will spend on waiting for all volumes\nto be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.",
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "failureDomain": {
                  "description": "failureDomain is the failure domain the machine will be created in.\nMust match the name of a FailureDomain from the Cluster status.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                },
                "infrastructureRef": {
                  "description": "infrastructureRef is a required reference to a custom resource\noffered by an infrastructure provider.",
                  "properties": {
                    "apiGroup": {
                      "description": "apiGroup is the group of the resource being referenced.\napiGroup must be fully qualified domain name.\nThe corresponding version for this reference will be looked up from the contract\nlabels of the corresponding CRD of the resource being referenced.",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                      "type": "string"
                    },
                    "kind": {
                      "description": "kind of the resource being referenced.\nkind must consist of alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character.",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                      "type": "string"
                    },
                    "name": {
                      "description": "name of the resource being referenced.\nname must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "apiGroup",
                    "kind",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "minReadySeconds": {
                  "description": "minReadySeconds is the minimum number of seconds for which a Machine should be ready before considering it available.\nDefaults to 0 (Machine will be considered available as soon as the Machine is ready)",
                  "format": "int32",
                  "minimum": 0,
                  "type": "integer"
                },
                "providerID": {
                  "description": "providerID is the identification ID of the machine provided by the provider.\nThis field must match the provider ID as seen on the node object corresponding to this machine.\nThis field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler\nwith cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out\nmachines at provider which could not get registered as Kubernetes nodes. With cluster-api as a\ngeneric out-of-tree provider for autoscaler, this field is required by autoscaler to be\nable to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver\nand then a comparison is done to find out unregistered machines and are marked for delete.\nThis field will be set by the actuators and consumed by higher level entities like autoscaler that will\nbe interfacing with cluster-api as generic provider.",
                  "maxLength": 512,
                  "minLength": 1,
                  "type": "string"
                },
                "readinessGates": {
                  "description": "readinessGates specifies additional conditions to include when evaluating Machine Ready condition.\n\nThis field can be used e.g. by Cluster API control plane providers to extend the semantic of the\nReady condition for the Machine they control, like the kubeadm control provider adding ReadinessGates\nfor the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.\n\nAnother example are external controllers, e.g. responsible to install special software/hardware on the Machines;\nthey can include the status of those components with a new condition and add this condition to ReadinessGates.\n\nNOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those\nreadiness gates condition are reporting the same message, when computing the Machine's Ready condition those\nreadinessGates will be replaced by a single entry reporting \"Control plane components: \" + message.\nThis helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).",
                  "items": {
                    "description": "MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.",
                    "properties": {
                      "conditionType": {
                        "description": "conditionType refers to a condition with matching type in the Machine's condition list.\nIf the conditions doesn't exist, it will be treated as unknown.\nNote: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.",
                        "maxLength": 316,
                        "minLength": 1,
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                        "type": "string"
                      },
                      "polarity": {
                        "description": "polarity of the conditionType specified in this readinessGate.\nValid values are Positive, Negative and omitted.\nWhen omitted, the default behaviour will be Positive.\nA positive polarity means that the condition should report a true status under normal conditions.\nA negative polarity means that the condition should report a false status under normal conditions.",
                        "enum": [
                          "Positive",
                          "Negative"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "conditionType"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "maxItems": 32,
                  "minItems": 1,
                  "type": "array",
                  "x-kubernetes-list-map-keys": [
                    "conditionType"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "version": {
                  "description": "version defines the desired Kubernetes version.\nThis field is meant to be optionally used by bootstrap providers.",
                  "maxLength": 256,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "bootstrap",
                "clusterName",
                "infrastructureRef"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "spec"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "clusterName",
        "template"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "status is the observed state of MachinePool.",
      "minProperties": 1,
      "properties": {
        "availableReplicas": {
          "description": "availableReplicas is the number of available replicas for this MachinePool. A machine is considered available when Machine's Available condition is true.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "conditions represents the observations of a MachinePool's current state.\nKnown condition types are Available, BootstrapConfigReady, InfrastructureReady, MachinesReady, MachinesUpToDate,\nScalingUp, ScalingDown, Remediating, Deleting, Paused.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "maxItems": 32,
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "deprecated": {
          "description": "deprecated groups all the status fields that are deprecated and will be removed when all the nested field are removed.",
          "properties": {
            "v1beta1": {
              "description": "v1beta1 groups all the status fields that are deprecated and will be removed when support for v1beta1 will be dropped.",
              "properties": {
                "availableReplicas": {
                  "description": "availableReplicas is the number of available replicas (ready for at least minReadySeconds) for this MachinePool.\n\nDeprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                  "format": "int32",
                  "type": "integer"
                },
                "conditions": {
                  "description": "conditions define the current service state of the MachinePool.\n\nDeprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                  "items": {
                    "description": "Condition defines an observation of a Cluster API resource operational state.",
                    "properties": {
                      "lastTransitionTime": {
                        "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "message": {
                        "description": "message is a human readable message indicating details about the transition.\nThis field may be empty.",
                        "maxLength": 10240,
                        "minLength": 1,
                        "type": "string"
                      },
                      "reason": {
                        "description": "reason is the reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                      },
                      "severity": {
                        "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                        "maxLength": 32,
                        "type": "string"
                      },
                      "status": {
                        "description": "status of the condition, one of True, False, Unknown.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "required": [
                      "lastTransitionTime",
                      "status",
                      "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "failureMessage": {
                  "description": "failureMessage indicates that there is a problem reconciling the state,\nand will be set to a descriptive error message.\n\nDeprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                  "maxLength": 10240,
                  "minLength": 1,
                  "type": "string"
                },
                "failureReason": {
                  "description": "failureReason indicates that there is a problem reconciling the state, and\nwill be set to a token value suitable for programmatic interpretation.\n\nDeprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                  "type": "string"
                },
                "readyReplicas": {
                  "description": "readyReplicas is the number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is \"Ready\".\n\nDeprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                  "format": "int32",
                  "type": "integer"
                },
                "unavailableReplicas": {
                  "description": "unavailableReplicas is the total number of unavailable machine instances targeted by this machine pool.\nThis is the total number of machine instances that are still required for\nthe machine pool to have 100% available capacity. They may either\nbe machine instances that are running but not yet available or machine instances\nthat still have not been created.\n\nDeprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "initialization": {
          "description": "initialization provides observations of the MachinePool initialization process.\nNOTE: Fields in this struct are part of the Cluster API contract and are used to orchestrate initial MachinePool provisioning.",
          "minProperties": 1,
          "properties": {
            "bootstrapDataSecretCreated": {
              "description": "bootstrapDataSecretCreated is true when the bootstrap provider reports that the MachinePool's boostrap secret is created.\nNOTE: this field is part of the Cluster API contract, and it is used to orchestrate provisioning.\nThe value of this field is never updated after provisioning is completed.",
              "type": "boolean"
            },
            "infrastructureProvisioned": {
              "description": "infrastructureProvisioned is true when the infrastructure provider reports that MachinePool's infrastructure is fully provisioned.\nNOTE: this field is part of the Cluster API contract, and it is used to orchestrate provisioning.\nThe value of this field is never updated after provisioning is completed.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "nodeRefs": {
          "description": "nodeRefs will point to the corresponding Nodes if it they exist.",
          "items": {
            "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "fieldPath": {
                "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                "type": "string"
              },
              "resourceVersion": {
                "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                "type": "string"
              }
            },
            "type": "object",
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false
          },
          "maxItems": 10000,
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "observedGeneration": {
          "description": "observedGeneration is the latest generation observed by the controller.",
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "phase": {
          "description": "phase represents the current phase of cluster actuation.",
          "enum": [
            "Pending",
            "Provisioning",
            "Provisioned",
            "Running",
            "ScalingUp",
            "ScalingDown",
            "Scaling",
            "Deleting",
            "Failed",
            "Unknown"
          ],
          "type": "string"
        },
        "readyReplicas": {
          "description": "readyReplicas is the number of ready replicas for this MachinePool. A machine is considered ready when Machine's Ready condition is true.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "replicas is the most recently observed number of replicas.",
          "format": "int32",
          "type": "integer"
        },
        "upToDateReplicas": {
          "description": "upToDateReplicas is the number of up-to-date replicas targeted by this MachinePool. A machine is considered up-to-date when Machine's UpToDate condition is true.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
