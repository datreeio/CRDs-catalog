{
  "description": "Domain is the Schema for the Domains API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DomainSpec defines the desired state of Domain.",
      "properties": {
        "appNetworkAccessType": {
          "description": "Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly. \n - PublicInternetOnly - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access \n - VpcOnly - All Studio traffic is through the specified VPC and subnets",
          "type": "string"
        },
        "appSecurityGroupManagement": {
          "description": "The entity that creates and manages the required security groups for inter-app communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.",
          "type": "string"
        },
        "authMode": {
          "description": "The mode of authentication that members use to access the domain.",
          "type": "string"
        },
        "defaultUserSettings": {
          "description": "The default settings to use to create a user profile when UserSettings isn't specified in the call to the CreateUserProfile API. \n SecurityGroups is aggregated when specified in both calls. For all other settings in UserSettings, the values specified in CreateUserProfile take precedence over those specified in CreateDomain.",
          "properties": {
            "executionRole": {
              "type": "string"
            },
            "jupyterServerAppSettings": {
              "description": "The JupyterServer app settings.",
              "properties": {
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "lifecycleConfigARNs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "kernelGatewayAppSettings": {
              "description": "The KernelGateway app settings.",
              "properties": {
                "customImages": {
                  "items": {
                    "description": "A custom SageMaker image. For more information, see Bring your own SageMaker image (https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).",
                    "properties": {
                      "appImageConfigName": {
                        "type": "string"
                      },
                      "imageName": {
                        "type": "string"
                      },
                      "imageVersionNumber": {
                        "format": "int64",
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "lifecycleConfigARNs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rStudioServerProAppSettings": {
              "description": "A collection of settings that configure user interaction with the RStudioServerPro app. RStudioServerProAppSettings cannot be updated. The RStudioServerPro app must be deleted and a new one created to make any changes.",
              "properties": {
                "accessStatus": {
                  "type": "string"
                },
                "userGroup": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityGroups": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sharingSettings": {
              "description": "Specifies options for sharing SageMaker Studio notebooks. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called. When SharingSettings is not specified, notebook sharing isn't allowed.",
              "properties": {
                "notebookOutputOption": {
                  "type": "string"
                },
                "s3KMSKeyID": {
                  "type": "string"
                },
                "s3OutputPath": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tensorBoardAppSettings": {
              "description": "The TensorBoard app settings.",
              "properties": {
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "domainName": {
          "description": "A name for the domain.",
          "type": "string"
        },
        "domainSettings": {
          "description": "A collection of Domain settings.",
          "properties": {
            "rStudioServerProDomainSettings": {
              "description": "A collection of settings that configure the RStudioServerPro Domain-level app.",
              "properties": {
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "domainExecutionRoleARN": {
                  "type": "string"
                },
                "rStudioConnectURL": {
                  "type": "string"
                },
                "rStudioPackageManagerURL": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityGroupIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "homeEFSFileSystemKMSKeyID": {
          "description": "Use KmsKeyId.",
          "type": "string"
        },
        "kmsKeyID": {
          "description": "SageMaker uses Amazon Web Services KMS to encrypt the EFS volume attached to the domain with an Amazon Web Services managed key by default. For more control, specify a customer managed key.",
          "type": "string"
        },
        "subnetIDs": {
          "description": "The VPC subnets that Studio uses for communication.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags to associated with the Domain. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API. \n Tags that you specify for the Domain are also added to all Apps that the Domain launches.",
          "items": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources. \n You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see AddTags. \n For more information on adding metadata to your Amazon Web Services resources with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). For advice on best practices for managing Amazon Web Services resources with tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "vpcID": {
          "description": "The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
          "type": "string"
        }
      },
      "required": [
        "authMode",
        "defaultUserSettings",
        "domainName",
        "subnetIDs",
        "vpcID"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DomainStatus defines the observed state of Domain",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "domainID": {
          "description": "The domain ID.",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "url": {
          "description": "The URL to the created domain.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
