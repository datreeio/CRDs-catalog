{
  "description": "MySQL is the Schema for the mysqls API.\nInfo \"Exposes secret keys\": `MYSQL_HOST`, `MYSQL_PORT`, `MYSQL_DATABASE`, `MYSQL_USER`, `MYSQL_PASSWORD`, `MYSQL_SSL_MODE`, `MYSQL_URI`, `MYSQL_REPLICA_URI`, `MYSQL_CA_CERT`",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MySQLSpec defines the desired state of MySQL",
      "properties": {
        "authSecretRef": {
          "description": "Authentication reference to Aiven token in a secret",
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "cloudName": {
          "description": "Cloud the service runs in.",
          "maxLength": 256,
          "type": "string"
        },
        "connInfoSecretTarget": {
          "description": "Secret configuration.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations added to the secret",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels added to the secret",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "name": {
              "description": "Name of the secret resource to be created. By default, it is equal to the resource name",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "prefix": {
              "description": "Prefix for the secret's keys.\nAdded \"as is\" without any transformations.\nBy default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "connInfoSecretTargetDisabled": {
          "description": "When true, the secret containing connection information will not be created, defaults to false. This field cannot be changed after resource creation.",
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "message": "connInfoSecretTargetDisabled is immutable.",
              "rule": "self == oldSelf"
            }
          ]
        },
        "disk_space": {
          "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project.\nReducing will result in the service re-balancing.\nThe removal of this field does not change the value.",
          "pattern": "(?i)^[1-9][0-9]*(GiB|G)?$",
          "type": "string"
        },
        "maintenanceWindowDow": {
          "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "type": "string"
        },
        "maintenanceWindowTime": {
          "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
          "maxLength": 8,
          "type": "string"
        },
        "plan": {
          "description": "Subscription plan.",
          "maxLength": 128,
          "type": "string"
        },
        "project": {
          "description": "Identifies the project this resource belongs to",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVPCRef": {
          "description": "ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically",
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "projectVpcId": {
          "description": "Identifier of the VPC the service should be in, if any.",
          "maxLength": 36,
          "type": "string"
        },
        "serviceIntegrations": {
          "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
          "items": {
            "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
            "properties": {
              "integrationType": {
                "enum": [
                  "read_replica"
                ],
                "type": "string"
              },
              "sourceServiceName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "maxItems": 1,
          "type": "array",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are key-value pairs that allow you to categorize services.",
          "type": "object"
        },
        "technicalEmails": {
          "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.",
          "items": {
            "properties": {
              "email": {
                "description": "Email address.",
                "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "maxItems": 10,
          "type": "array"
        },
        "terminationProtection": {
          "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.",
          "type": "boolean"
        },
        "userConfig": {
          "description": "MySQL specific user configuration options",
          "properties": {
            "additional_backup_regions": {
              "description": "Additional Cloud Regions for Backup Replication",
              "items": {
                "type": "string"
              },
              "maxItems": 1,
              "type": "array"
            },
            "admin_password": {
              "description": "Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.",
              "maxLength": 256,
              "minLength": 8,
              "pattern": "^[a-zA-Z0-9-_]+$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "admin_username": {
              "description": "Custom username for admin user. This must be set only when a new service is being created.",
              "maxLength": 64,
              "pattern": "^[_A-Za-z0-9][-._A-Za-z0-9]{0,63}$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "backup_hour": {
              "description": "The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.",
              "maximum": 23,
              "minimum": 0,
              "type": "integer"
            },
            "backup_minute": {
              "description": "The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.",
              "maximum": 59,
              "minimum": 0,
              "type": "integer"
            },
            "binlog_retention_period": {
              "description": "The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.",
              "maximum": 86400,
              "minimum": 600,
              "type": "integer"
            },
            "ip_filter": {
              "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
              "items": {
                "description": "CIDR address block, either as a string, or in a dict with an optional description field",
                "properties": {
                  "description": {
                    "description": "Description for IP filter list entry",
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "network": {
                    "description": "CIDR address block",
                    "maxLength": 43,
                    "type": "string"
                  }
                },
                "required": [
                  "network"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "maxItems": 1024,
              "type": "array"
            },
            "migration": {
              "description": "Migrate data from existing server",
              "properties": {
                "dbname": {
                  "description": "Database name for bootstrapping the initial connection",
                  "maxLength": 63,
                  "type": "string"
                },
                "host": {
                  "description": "Hostname or IP address of the server where to migrate data from",
                  "maxLength": 255,
                  "type": "string"
                },
                "ignore_dbs": {
                  "description": "Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment)",
                  "maxLength": 2048,
                  "type": "string"
                },
                "method": {
                  "description": "The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types)",
                  "enum": [
                    "dump",
                    "replication"
                  ],
                  "type": "string"
                },
                "password": {
                  "description": "Password for authentication with the server where to migrate data from",
                  "maxLength": 256,
                  "type": "string"
                },
                "port": {
                  "description": "Port number of the server where to migrate data from",
                  "maximum": 65535,
                  "minimum": 1,
                  "type": "integer"
                },
                "ssl": {
                  "description": "The server where to migrate data from is secured with SSL",
                  "type": "boolean"
                },
                "username": {
                  "description": "User name for authentication with the server where to migrate data from",
                  "maxLength": 256,
                  "type": "string"
                }
              },
              "required": [
                "host",
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "mysql": {
              "description": "mysql.conf configuration values",
              "properties": {
                "connect_timeout": {
                  "description": "The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake",
                  "maximum": 3600,
                  "minimum": 2,
                  "type": "integer"
                },
                "default_time_zone": {
                  "description": "Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.",
                  "maxLength": 100,
                  "minLength": 2,
                  "pattern": "^([-+][\\d:]*|[\\w/]*)$",
                  "type": "string"
                },
                "group_concat_max_len": {
                  "description": "The maximum permitted result length in bytes for the GROUP_CONCAT() function.",
                  "minimum": 4,
                  "type": "integer"
                },
                "information_schema_stats_expiry": {
                  "description": "The time, in seconds, before cached statistics expire",
                  "maximum": 31536000,
                  "minimum": 900,
                  "type": "integer"
                },
                "innodb_change_buffer_max_size": {
                  "description": "Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25",
                  "maximum": 50,
                  "minimum": 0,
                  "type": "integer"
                },
                "innodb_flush_neighbors": {
                  "description": "Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent",
                  "maximum": 2,
                  "minimum": 0,
                  "type": "integer"
                },
                "innodb_ft_min_token_size": {
                  "description": "Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.",
                  "maximum": 16,
                  "minimum": 0,
                  "type": "integer"
                },
                "innodb_ft_server_stopword_table": {
                  "description": "This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.",
                  "maxLength": 1024,
                  "pattern": "^.+/.+$",
                  "type": "string"
                },
                "innodb_lock_wait_timeout": {
                  "description": "The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.",
                  "maximum": 3600,
                  "minimum": 1,
                  "type": "integer"
                },
                "innodb_log_buffer_size": {
                  "description": "The size in bytes of the buffer that InnoDB uses to write to the log files on disk.",
                  "maximum": 4294967295,
                  "minimum": 1048576,
                  "type": "integer"
                },
                "innodb_online_alter_log_max_size": {
                  "description": "The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.",
                  "maximum": 1099511627776,
                  "minimum": 65536,
                  "type": "integer"
                },
                "innodb_print_all_deadlocks": {
                  "description": "When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.",
                  "type": "boolean"
                },
                "innodb_read_io_threads": {
                  "description": "The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.",
                  "maximum": 64,
                  "minimum": 1,
                  "type": "integer"
                },
                "innodb_rollback_on_timeout": {
                  "description": "When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.",
                  "type": "boolean"
                },
                "innodb_thread_concurrency": {
                  "description": "Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit)",
                  "maximum": 1000,
                  "minimum": 0,
                  "type": "integer"
                },
                "innodb_write_io_threads": {
                  "description": "The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.",
                  "maximum": 64,
                  "minimum": 1,
                  "type": "integer"
                },
                "interactive_timeout": {
                  "description": "The number of seconds the server waits for activity on an interactive connection before closing it.",
                  "maximum": 604800,
                  "minimum": 30,
                  "type": "integer"
                },
                "internal_tmp_mem_storage_engine": {
                  "description": "The storage engine for in-memory internal temporary tables.",
                  "enum": [
                    "TempTable",
                    "MEMORY"
                  ],
                  "type": "string"
                },
                "long_query_time": {
                  "description": "The slow_query_logs work as SQL statements that take more than long_query_time seconds to execute. Default is 10s",
                  "maximum": 3600,
                  "minimum": 0,
                  "type": "number"
                },
                "max_allowed_packet": {
                  "description": "Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M)",
                  "maximum": 1073741824,
                  "minimum": 102400,
                  "type": "integer"
                },
                "max_heap_table_size": {
                  "description": "Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M)",
                  "maximum": 1073741824,
                  "minimum": 1048576,
                  "type": "integer"
                },
                "net_buffer_length": {
                  "description": "Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.",
                  "maximum": 1048576,
                  "minimum": 1024,
                  "type": "integer"
                },
                "net_read_timeout": {
                  "description": "The number of seconds to wait for more data from a connection before aborting the read.",
                  "maximum": 3600,
                  "minimum": 1,
                  "type": "integer"
                },
                "net_write_timeout": {
                  "description": "The number of seconds to wait for a block to be written to a connection before aborting the write.",
                  "maximum": 3600,
                  "minimum": 1,
                  "type": "integer"
                },
                "slow_query_log": {
                  "description": "Slow query log enables capturing of slow queries. Setting slow_query_log to false also truncates the mysql.slow_log table. Default is off",
                  "type": "boolean"
                },
                "sort_buffer_size": {
                  "description": "Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K)",
                  "maximum": 1073741824,
                  "minimum": 32768,
                  "type": "integer"
                },
                "sql_mode": {
                  "description": "Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.",
                  "maxLength": 1024,
                  "pattern": "^[A-Z_]*(,[A-Z_]+)*$",
                  "type": "string"
                },
                "sql_require_primary_key": {
                  "description": "Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.",
                  "type": "boolean"
                },
                "tmp_table_size": {
                  "description": "Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M)",
                  "maximum": 1073741824,
                  "minimum": 1048576,
                  "type": "integer"
                },
                "wait_timeout": {
                  "description": "The number of seconds the server waits for activity on a noninteractive connection before closing it.",
                  "maximum": 2147483,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "mysql_version": {
              "description": "MySQL major version",
              "enum": [
                "8"
              ],
              "type": "string"
            },
            "private_access": {
              "description": "Allow access to selected service ports from private networks",
              "properties": {
                "mysql": {
                  "description": "Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                },
                "mysqlx": {
                  "description": "Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                },
                "prometheus": {
                  "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "privatelink_access": {
              "description": "Allow access to selected service components through Privatelink",
              "properties": {
                "mysql": {
                  "description": "Enable mysql",
                  "type": "boolean"
                },
                "mysqlx": {
                  "description": "Enable mysqlx",
                  "type": "boolean"
                },
                "prometheus": {
                  "description": "Enable prometheus",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "project_to_fork_from": {
              "description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "maxLength": 63,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "public_access": {
              "description": "Allow access to selected service ports from the public Internet",
              "properties": {
                "mysql": {
                  "description": "Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                },
                "mysqlx": {
                  "description": "Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                },
                "prometheus": {
                  "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "recovery_target_time": {
              "description": "Recovery target time when forking a service. This has effect only when a new service is being created.",
              "maxLength": 32,
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "service_log": {
              "description": "Store logs for the service so that they are available in the HTTP API and console.",
              "type": "boolean"
            },
            "service_to_fork_from": {
              "description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "maxLength": 64,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "static_ips": {
              "description": "Use static public IP addresses",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "plan",
        "project"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "connInfoSecretTargetDisabled can only be set during resource creation.",
          "rule": "has(oldSelf.connInfoSecretTargetDisabled) == has(self.connInfoSecretTargetDisabled)"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "ServiceStatus defines the observed state of service",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of a service state",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "state": {
          "description": "Service state",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
