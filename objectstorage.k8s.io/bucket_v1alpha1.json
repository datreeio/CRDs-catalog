{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "bucketClaim": {
          "description": "Name of the BucketClaim that resulted in the creation of this Bucket\nIn case the Bucket object was created manually, then this should refer\nto the BucketClaim with which this Bucket should be bound",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "bucketClassName": {
          "description": "Name of the BucketClass specified in the BucketRequest",
          "type": "string"
        },
        "deletionPolicy": {
          "default": "Retain",
          "description": "DeletionPolicy is used to specify how COSI should handle deletion of this\nbucket. There are 2 possible values:\n - Retain: Indicates that the bucket should not be deleted from the OSP (default)\n - Delete: Indicates that the bucket should be deleted from the OSP\n       once all the workloads accessing this bucket are done",
          "type": "string"
        },
        "driverName": {
          "description": "DriverName is the name of driver associated with this bucket",
          "type": "string"
        },
        "existingBucketID": {
          "description": "ExistingBucketID is the unique id of the bucket in the OSP. This field should be\nused to specify a bucket that has been created outside of COSI.\nThis field will be empty when the Bucket is dynamically provisioned by COSI.",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "protocols": {
          "description": "Protocols are the set of data APIs this bucket is expected to support.\nThe possible values for protocol are:\n-  S3: Indicates Amazon S3 protocol\n-  Azure: Indicates Microsoft Azure BlobStore protocol\n-  GCS: Indicates Google Cloud Storage protocol",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "bucketClaim",
        "bucketClassName",
        "driverName",
        "protocols"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "bucketID": {
          "description": "BucketID is the unique id of the bucket in the OSP. This field will be\npopulated by COSI.",
          "type": "string"
        },
        "bucketReady": {
          "description": "BucketReady is a boolean condition to reflect the successful creation\nof a bucket.",
          "type": "boolean"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
