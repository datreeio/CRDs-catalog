{
  "description": "CanonicalService is the Schema for the canonicalservices API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CanonicalServiceSpec defines the desired state of CanonicalService",
      "properties": {
        "description": {
          "description": "Description of the service",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "displayName": {
          "description": "Human-friendly name of the service",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "CanonicalServiceStatus defines the observed state of CanonicalService",
      "properties": {
        "inactiveSince": {
          "description": "The time that the service was set to Inactive (if the service is Active, will be empty)",
          "format": "date-time",
          "type": "string"
        },
        "resourceTypes": {
          "description": "Array of the resource types the service is currently found on",
          "items": {
            "description": "CanonicalServiceResourceType represents the types of resource a Canonical Service has been run on. It includes information about whether the resource is currently in use by the service, so that we can track resources that might still have valuable metrics but are not active.",
            "properties": {
              "inactiveSince": {
                "format": "date-time",
                "type": "string"
              },
              "name": {
                "description": "CanonicalServiceResourceTypeName is the name of the resource type",
                "enum": [
                  "Pod",
                  "WorkloadEntry",
                  "ServiceEntry"
                ],
                "type": "string"
              },
              "state": {
                "description": "CanonicalServiceState tells us whether the service is currently Active (aka there is at least one workload running this service) or Inactive.",
                "enum": [
                  "Active",
                  "Inactive",
                  "Error"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "resourceVersionWhenBecameInactive": {
          "description": "The resource version of the Canonical Service resource when it was marked Inactive",
          "type": "string"
        },
        "state": {
          "description": "Current state of the service",
          "enum": [
            "Active",
            "Inactive",
            "Error"
          ],
          "type": "string"
        }
      },
      "required": [
        "state"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
