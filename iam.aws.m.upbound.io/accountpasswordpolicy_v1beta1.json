{
  "description": "AccountPasswordPolicy is the Schema for the AccountPasswordPolicys API. Manages Password Policy for the AWS Account.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AccountPasswordPolicySpec defines the desired state of AccountPasswordPolicy",
      "properties": {
        "forProvider": {
          "properties": {
            "allowUsersToChangePassword": {
              "description": "Whether to allow users to change their own password",
              "type": "boolean"
            },
            "hardExpiry": {
              "description": "Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset)",
              "type": "boolean"
            },
            "maxPasswordAge": {
              "description": "The number of days that an user password is valid.",
              "type": "number"
            },
            "minimumPasswordLength": {
              "description": "Minimum length to require for user passwords.",
              "type": "number"
            },
            "passwordReusePrevention": {
              "description": "The number of previous passwords that users are prevented from reusing.",
              "type": "number"
            },
            "requireLowercaseCharacters": {
              "description": "Whether to require lowercase characters for user passwords.",
              "type": "boolean"
            },
            "requireNumbers": {
              "description": "Whether to require numbers for user passwords.",
              "type": "boolean"
            },
            "requireSymbols": {
              "description": "Whether to require symbols for user passwords.",
              "type": "boolean"
            },
            "requireUppercaseCharacters": {
              "description": "Whether to require uppercase characters for user passwords.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "allowUsersToChangePassword": {
              "description": "Whether to allow users to change their own password",
              "type": "boolean"
            },
            "hardExpiry": {
              "description": "Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset)",
              "type": "boolean"
            },
            "maxPasswordAge": {
              "description": "The number of days that an user password is valid.",
              "type": "number"
            },
            "minimumPasswordLength": {
              "description": "Minimum length to require for user passwords.",
              "type": "number"
            },
            "passwordReusePrevention": {
              "description": "The number of previous passwords that users are prevented from reusing.",
              "type": "number"
            },
            "requireLowercaseCharacters": {
              "description": "Whether to require lowercase characters for user passwords.",
              "type": "boolean"
            },
            "requireNumbers": {
              "description": "Whether to require numbers for user passwords.",
              "type": "boolean"
            },
            "requireSymbols": {
              "description": "Whether to require symbols for user passwords.",
              "type": "boolean"
            },
            "requireUppercaseCharacters": {
              "description": "Whether to require uppercase characters for user passwords.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "required": [
            "kind",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "AccountPasswordPolicyStatus defines the observed state of AccountPasswordPolicy.",
      "properties": {
        "atProvider": {
          "properties": {
            "allowUsersToChangePassword": {
              "description": "Whether to allow users to change their own password",
              "type": "boolean"
            },
            "expirePasswords": {
              "description": "Indicates whether passwords in the account expire. Returns true if max_password_age contains a value greater than 0. Returns false if it is 0 or not present.",
              "type": "boolean"
            },
            "hardExpiry": {
              "description": "Whether users are prevented from setting a new password after their password has expired (i.e., require administrator reset)",
              "type": "boolean"
            },
            "id": {
              "type": "string"
            },
            "maxPasswordAge": {
              "description": "The number of days that an user password is valid.",
              "type": "number"
            },
            "minimumPasswordLength": {
              "description": "Minimum length to require for user passwords.",
              "type": "number"
            },
            "passwordReusePrevention": {
              "description": "The number of previous passwords that users are prevented from reusing.",
              "type": "number"
            },
            "requireLowercaseCharacters": {
              "description": "Whether to require lowercase characters for user passwords.",
              "type": "boolean"
            },
            "requireNumbers": {
              "description": "Whether to require numbers for user passwords.",
              "type": "boolean"
            },
            "requireSymbols": {
              "description": "Whether to require symbols for user passwords.",
              "type": "boolean"
            },
            "requireUppercaseCharacters": {
              "description": "Whether to require uppercase characters for user passwords.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
