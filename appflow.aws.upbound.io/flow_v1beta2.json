{
  "description": "Flow is the Schema for the Flows API. Provides an AppFlow Flow resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FlowSpec defines the desired state of Flow",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "description": {
              "description": "Description of the flow you want to create.",
              "type": "string"
            },
            "destinationFlowConfig": {
              "description": "A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.",
              "items": {
                "properties": {
                  "apiVersion": {
                    "description": "API version that the destination connector uses.",
                    "type": "string"
                  },
                  "connectorProfileName": {
                    "description": "Name of the connector profile. This name must be unique for each connector profile in the AWS account.",
                    "type": "string"
                  },
                  "connectorType": {
                    "description": "Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.",
                    "type": "string"
                  },
                  "destinationConnectorProperties": {
                    "description": "This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.",
                    "properties": {
                      "customConnector": {
                        "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                        "properties": {
                          "customProperties": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.",
                            "type": "object",
                            "x-kubernetes-map-type": "granular"
                          },
                          "entityName": {
                            "description": "Entity specified in the custom connector as a destination in the flow.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "customerProfiles": {
                        "description": "Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.",
                        "properties": {
                          "domainName": {
                            "description": "Unique name of the Amazon Connect Customer Profiles domain.",
                            "type": "string"
                          },
                          "objectTypeName": {
                            "description": "Object specified in the Amazon Connect Customer Profiles flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "eventBridge": {
                        "description": "Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "honeycode": {
                        "description": "Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "lookoutMetrics": {
                        "type": "object"
                      },
                      "marketo": {
                        "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "redshift": {
                        "description": "Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.",
                        "properties": {
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "intermediateBucketName": {
                            "description": "Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "s3": {
                        "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                        "properties": {
                          "bucketName": {
                            "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                            "type": "string"
                          },
                          "bucketNameRef": {
                            "description": "Reference to a BucketPolicy in s3 to populate bucketName.",
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "policy": {
                                "description": "Policies for referencing.",
                                "properties": {
                                  "resolution": {
                                    "default": "Required",
                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                    "enum": [
                                      "Required",
                                      "Optional"
                                    ],
                                    "type": "string"
                                  },
                                  "resolve": {
                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                    "enum": [
                                      "Always",
                                      "IfNotPresent"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "bucketNameSelector": {
                            "description": "Selector for a BucketPolicy in s3 to populate bucketName.",
                            "properties": {
                              "matchControllerRef": {
                                "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                "type": "boolean"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "MatchLabels ensures an object with matching labels is selected.",
                                "type": "object"
                              },
                              "policy": {
                                "description": "Policies for selection.",
                                "properties": {
                                  "resolution": {
                                    "default": "Required",
                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                    "enum": [
                                      "Required",
                                      "Optional"
                                    ],
                                    "type": "string"
                                  },
                                  "resolve": {
                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                    "enum": [
                                      "Always",
                                      "IfNotPresent"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "s3OutputFormatConfig": {
                            "description": "Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.",
                            "properties": {
                              "aggregationConfig": {
                                "description": "Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.",
                                "properties": {
                                  "aggregationType": {
                                    "description": "Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.",
                                    "type": "string"
                                  },
                                  "targetFileSize": {
                                    "description": "The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.",
                                    "type": "number"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fileType": {
                                "description": "File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.",
                                "type": "string"
                              },
                              "prefixConfig": {
                                "description": "Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.",
                                "properties": {
                                  "prefixFormat": {
                                    "description": "Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.",
                                    "type": "string"
                                  },
                                  "prefixHierarchy": {
                                    "description": "Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixType": {
                                    "description": "Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "preserveSourceDataTyping": {
                                "description": "Whether the data types from the source system need to be preserved (Only valid for Parquet file type)",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "salesforce": {
                        "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "sapoData": {
                        "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "objectPath": {
                            "description": "Object path specified in the SAPOData flow destination.",
                            "type": "string"
                          },
                          "successResponseHandlingConfig": {
                            "description": "Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "snowflake": {
                        "description": "Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.",
                        "properties": {
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "intermediateBucketName": {
                            "description": "Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "upsolver": {
                        "description": "Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.",
                        "properties": {
                          "bucketName": {
                            "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                            "type": "string"
                          },
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "s3OutputFormatConfig": {
                            "description": "Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.",
                            "properties": {
                              "aggregationConfig": {
                                "description": "Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.",
                                "properties": {
                                  "aggregationType": {
                                    "description": "Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fileType": {
                                "description": "File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.",
                                "type": "string"
                              },
                              "prefixConfig": {
                                "description": "Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.",
                                "properties": {
                                  "prefixFormat": {
                                    "description": "Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.",
                                    "type": "string"
                                  },
                                  "prefixHierarchy": {
                                    "description": "Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixType": {
                                    "description": "Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "zendesk": {
                        "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kmsArn": {
              "description": "ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.",
              "type": "string"
            },
            "metadataCatalogConfig": {
              "description": "A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data that\u2019s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.",
              "properties": {
                "glueDataCatalog": {
                  "properties": {
                    "databaseName": {
                      "description": "The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.",
                      "type": "string"
                    },
                    "tablePrefix": {
                      "description": "A naming prefix for each Data Catalog table that Amazon AppFlow creates",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "sourceFlowConfig": {
              "description": "The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.",
              "properties": {
                "apiVersion": {
                  "description": "API version that the destination connector uses.",
                  "type": "string"
                },
                "connectorProfileName": {
                  "description": "Name of the connector profile. This name must be unique for each connector profile in the AWS account.",
                  "type": "string"
                },
                "connectorType": {
                  "description": "Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.",
                  "type": "string"
                },
                "incrementalPullConfig": {
                  "description": "Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.",
                  "properties": {
                    "datetimeTypeFieldName": {
                      "description": "Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "sourceConnectorProperties": {
                  "description": "Information that is required to query a particular source connector. See Source Connector Properties for details.",
                  "properties": {
                    "amplitude": {
                      "description": "Information that is required for querying Amplitude. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "customConnector": {
                      "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                      "properties": {
                        "customProperties": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        },
                        "entityName": {
                          "description": "Entity specified in the custom connector as a destination in the flow.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "datadog": {
                      "description": "Information that is required for querying Datadog. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "dynatrace": {
                      "description": "Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "googleAnalytics": {
                      "description": "Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "inforNexus": {
                      "description": "Information that is required for querying Infor Nexus. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "marketo": {
                      "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "s3": {
                      "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                      "properties": {
                        "bucketName": {
                          "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                          "type": "string"
                        },
                        "bucketNameRef": {
                          "description": "Reference to a BucketPolicy in s3 to populate bucketName.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketNameSelector": {
                          "description": "Selector for a BucketPolicy in s3 to populate bucketName.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketPrefix": {
                          "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                          "type": "string"
                        },
                        "s3InputFormatConfig": {
                          "description": "When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.",
                          "properties": {
                            "s3InputFileType": {
                              "description": "File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "salesforce": {
                      "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                      "properties": {
                        "enableDynamicFieldUpdate": {
                          "description": "Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.",
                          "type": "boolean"
                        },
                        "includeDeletedRecords": {
                          "description": "Whether Amazon AppFlow includes deleted files in the flow run.",
                          "type": "boolean"
                        },
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "sapoData": {
                      "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                      "properties": {
                        "objectPath": {
                          "description": "Object path specified in the SAPOData flow destination.",
                          "type": "string"
                        },
                        "paginationConfig": {
                          "description": "Sets the page size for each concurrent process that transfers OData records from your SAP instance.",
                          "properties": {
                            "maxPageSize": {
                              "description": "he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "parallelismConfig": {
                          "description": "Sets the number of concurrent processes that transfers OData records from your SAP instance.",
                          "properties": {
                            "maxPageSize": {
                              "description": "he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceNow": {
                      "description": "Information that is required for querying ServiceNow. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "singular": {
                      "description": "Information that is required for querying Singular. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "slack": {
                      "description": "Information that is required for querying Slack. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "trendmicro": {
                      "description": "Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "veeva": {
                      "description": "Information that is required for querying Veeva. See Veeva Source Properties for more details.",
                      "properties": {
                        "documentType": {
                          "description": "Document type specified in the Veeva document extract flow.",
                          "type": "string"
                        },
                        "includeAllVersions": {
                          "description": "Boolean value to include All Versions of files in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "includeRenditions": {
                          "description": "Boolean value to include file renditions in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "includeSourceFiles": {
                          "description": "Boolean value to include source files in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "zendesk": {
                      "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "task": {
              "description": "A Task that Amazon AppFlow performs while transferring the data in the flow run.",
              "items": {
                "properties": {
                  "connectorOperator": {
                    "description": "Operation to be performed on the provided source fields. See Connector Operator for details.",
                    "items": {
                      "properties": {
                        "amplitude": {
                          "description": "Information that is required for querying Amplitude. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "customConnector": {
                          "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                          "type": "string"
                        },
                        "datadog": {
                          "description": "Information that is required for querying Datadog. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "dynatrace": {
                          "description": "Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                          "type": "string"
                        },
                        "googleAnalytics": {
                          "description": "Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.",
                          "type": "string"
                        },
                        "inforNexus": {
                          "description": "Information that is required for querying Infor Nexus. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "marketo": {
                          "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                          "type": "string"
                        },
                        "s3": {
                          "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                          "type": "string"
                        },
                        "salesforce": {
                          "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                          "type": "string"
                        },
                        "sapoData": {
                          "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                          "type": "string"
                        },
                        "serviceNow": {
                          "description": "Information that is required for querying ServiceNow. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "singular": {
                          "description": "Information that is required for querying Singular. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "slack": {
                          "description": "Information that is required for querying Slack. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "trendmicro": {
                          "description": "Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                          "type": "string"
                        },
                        "veeva": {
                          "description": "Information that is required for querying Veeva. See Veeva Source Properties for more details.",
                          "type": "string"
                        },
                        "zendesk": {
                          "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "destinationField": {
                    "description": "Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.",
                    "type": "string"
                  },
                  "sourceFields": {
                    "description": "Source fields to which a particular task is applied.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "taskProperties": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "taskType": {
                    "description": "Particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "triggerConfig": {
              "description": "A Trigger that determine how and when the flow runs.",
              "properties": {
                "triggerProperties": {
                  "description": "Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.",
                  "properties": {
                    "scheduled": {
                      "properties": {
                        "dataPullMode": {
                          "description": "Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.",
                          "type": "string"
                        },
                        "firstExecutionFrom": {
                          "description": "Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "scheduleEndTime": {
                          "description": "Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "scheduleExpression": {
                          "description": "Scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).",
                          "type": "string"
                        },
                        "scheduleOffset": {
                          "description": "Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.",
                          "type": "number"
                        },
                        "scheduleStartTime": {
                          "description": "Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "timezone": {
                          "description": "Time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "triggerType": {
                  "description": "Type of flow trigger. Valid values are Scheduled, Event, and OnDemand.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "description": {
              "description": "Description of the flow you want to create.",
              "type": "string"
            },
            "destinationFlowConfig": {
              "description": "A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.",
              "items": {
                "properties": {
                  "apiVersion": {
                    "description": "API version that the destination connector uses.",
                    "type": "string"
                  },
                  "connectorProfileName": {
                    "description": "Name of the connector profile. This name must be unique for each connector profile in the AWS account.",
                    "type": "string"
                  },
                  "connectorType": {
                    "description": "Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.",
                    "type": "string"
                  },
                  "destinationConnectorProperties": {
                    "description": "This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.",
                    "properties": {
                      "customConnector": {
                        "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                        "properties": {
                          "customProperties": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.",
                            "type": "object",
                            "x-kubernetes-map-type": "granular"
                          },
                          "entityName": {
                            "description": "Entity specified in the custom connector as a destination in the flow.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "customerProfiles": {
                        "description": "Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.",
                        "properties": {
                          "domainName": {
                            "description": "Unique name of the Amazon Connect Customer Profiles domain.",
                            "type": "string"
                          },
                          "objectTypeName": {
                            "description": "Object specified in the Amazon Connect Customer Profiles flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "eventBridge": {
                        "description": "Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "honeycode": {
                        "description": "Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "lookoutMetrics": {
                        "type": "object"
                      },
                      "marketo": {
                        "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "redshift": {
                        "description": "Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.",
                        "properties": {
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "intermediateBucketName": {
                            "description": "Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "s3": {
                        "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                        "properties": {
                          "bucketName": {
                            "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                            "type": "string"
                          },
                          "bucketNameRef": {
                            "description": "Reference to a BucketPolicy in s3 to populate bucketName.",
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "policy": {
                                "description": "Policies for referencing.",
                                "properties": {
                                  "resolution": {
                                    "default": "Required",
                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                    "enum": [
                                      "Required",
                                      "Optional"
                                    ],
                                    "type": "string"
                                  },
                                  "resolve": {
                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                    "enum": [
                                      "Always",
                                      "IfNotPresent"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "bucketNameSelector": {
                            "description": "Selector for a BucketPolicy in s3 to populate bucketName.",
                            "properties": {
                              "matchControllerRef": {
                                "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                "type": "boolean"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "MatchLabels ensures an object with matching labels is selected.",
                                "type": "object"
                              },
                              "policy": {
                                "description": "Policies for selection.",
                                "properties": {
                                  "resolution": {
                                    "default": "Required",
                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                    "enum": [
                                      "Required",
                                      "Optional"
                                    ],
                                    "type": "string"
                                  },
                                  "resolve": {
                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                    "enum": [
                                      "Always",
                                      "IfNotPresent"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "s3OutputFormatConfig": {
                            "description": "Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.",
                            "properties": {
                              "aggregationConfig": {
                                "description": "Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.",
                                "properties": {
                                  "aggregationType": {
                                    "description": "Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.",
                                    "type": "string"
                                  },
                                  "targetFileSize": {
                                    "description": "The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.",
                                    "type": "number"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fileType": {
                                "description": "File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.",
                                "type": "string"
                              },
                              "prefixConfig": {
                                "description": "Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.",
                                "properties": {
                                  "prefixFormat": {
                                    "description": "Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.",
                                    "type": "string"
                                  },
                                  "prefixHierarchy": {
                                    "description": "Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixType": {
                                    "description": "Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "preserveSourceDataTyping": {
                                "description": "Whether the data types from the source system need to be preserved (Only valid for Parquet file type)",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "salesforce": {
                        "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "sapoData": {
                        "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "objectPath": {
                            "description": "Object path specified in the SAPOData flow destination.",
                            "type": "string"
                          },
                          "successResponseHandlingConfig": {
                            "description": "Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "snowflake": {
                        "description": "Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.",
                        "properties": {
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "intermediateBucketName": {
                            "description": "Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "upsolver": {
                        "description": "Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.",
                        "properties": {
                          "bucketName": {
                            "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                            "type": "string"
                          },
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "s3OutputFormatConfig": {
                            "description": "Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.",
                            "properties": {
                              "aggregationConfig": {
                                "description": "Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.",
                                "properties": {
                                  "aggregationType": {
                                    "description": "Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fileType": {
                                "description": "File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.",
                                "type": "string"
                              },
                              "prefixConfig": {
                                "description": "Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.",
                                "properties": {
                                  "prefixFormat": {
                                    "description": "Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.",
                                    "type": "string"
                                  },
                                  "prefixHierarchy": {
                                    "description": "Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixType": {
                                    "description": "Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "zendesk": {
                        "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kmsArn": {
              "description": "ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.",
              "type": "string"
            },
            "metadataCatalogConfig": {
              "description": "A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data that\u2019s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.",
              "properties": {
                "glueDataCatalog": {
                  "properties": {
                    "databaseName": {
                      "description": "The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.",
                      "type": "string"
                    },
                    "tablePrefix": {
                      "description": "A naming prefix for each Data Catalog table that Amazon AppFlow creates",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "sourceFlowConfig": {
              "description": "The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.",
              "properties": {
                "apiVersion": {
                  "description": "API version that the destination connector uses.",
                  "type": "string"
                },
                "connectorProfileName": {
                  "description": "Name of the connector profile. This name must be unique for each connector profile in the AWS account.",
                  "type": "string"
                },
                "connectorType": {
                  "description": "Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.",
                  "type": "string"
                },
                "incrementalPullConfig": {
                  "description": "Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.",
                  "properties": {
                    "datetimeTypeFieldName": {
                      "description": "Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "sourceConnectorProperties": {
                  "description": "Information that is required to query a particular source connector. See Source Connector Properties for details.",
                  "properties": {
                    "amplitude": {
                      "description": "Information that is required for querying Amplitude. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "customConnector": {
                      "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                      "properties": {
                        "customProperties": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        },
                        "entityName": {
                          "description": "Entity specified in the custom connector as a destination in the flow.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "datadog": {
                      "description": "Information that is required for querying Datadog. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "dynatrace": {
                      "description": "Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "googleAnalytics": {
                      "description": "Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "inforNexus": {
                      "description": "Information that is required for querying Infor Nexus. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "marketo": {
                      "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "s3": {
                      "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                      "properties": {
                        "bucketName": {
                          "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                          "type": "string"
                        },
                        "bucketNameRef": {
                          "description": "Reference to a BucketPolicy in s3 to populate bucketName.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketNameSelector": {
                          "description": "Selector for a BucketPolicy in s3 to populate bucketName.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "bucketPrefix": {
                          "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                          "type": "string"
                        },
                        "s3InputFormatConfig": {
                          "description": "When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.",
                          "properties": {
                            "s3InputFileType": {
                              "description": "File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "salesforce": {
                      "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                      "properties": {
                        "enableDynamicFieldUpdate": {
                          "description": "Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.",
                          "type": "boolean"
                        },
                        "includeDeletedRecords": {
                          "description": "Whether Amazon AppFlow includes deleted files in the flow run.",
                          "type": "boolean"
                        },
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "sapoData": {
                      "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                      "properties": {
                        "objectPath": {
                          "description": "Object path specified in the SAPOData flow destination.",
                          "type": "string"
                        },
                        "paginationConfig": {
                          "description": "Sets the page size for each concurrent process that transfers OData records from your SAP instance.",
                          "properties": {
                            "maxPageSize": {
                              "description": "he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "parallelismConfig": {
                          "description": "Sets the number of concurrent processes that transfers OData records from your SAP instance.",
                          "properties": {
                            "maxPageSize": {
                              "description": "he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceNow": {
                      "description": "Information that is required for querying ServiceNow. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "singular": {
                      "description": "Information that is required for querying Singular. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "slack": {
                      "description": "Information that is required for querying Slack. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "trendmicro": {
                      "description": "Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "veeva": {
                      "description": "Information that is required for querying Veeva. See Veeva Source Properties for more details.",
                      "properties": {
                        "documentType": {
                          "description": "Document type specified in the Veeva document extract flow.",
                          "type": "string"
                        },
                        "includeAllVersions": {
                          "description": "Boolean value to include All Versions of files in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "includeRenditions": {
                          "description": "Boolean value to include file renditions in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "includeSourceFiles": {
                          "description": "Boolean value to include source files in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "zendesk": {
                      "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "task": {
              "description": "A Task that Amazon AppFlow performs while transferring the data in the flow run.",
              "items": {
                "properties": {
                  "connectorOperator": {
                    "description": "Operation to be performed on the provided source fields. See Connector Operator for details.",
                    "items": {
                      "properties": {
                        "amplitude": {
                          "description": "Information that is required for querying Amplitude. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "customConnector": {
                          "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                          "type": "string"
                        },
                        "datadog": {
                          "description": "Information that is required for querying Datadog. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "dynatrace": {
                          "description": "Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                          "type": "string"
                        },
                        "googleAnalytics": {
                          "description": "Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.",
                          "type": "string"
                        },
                        "inforNexus": {
                          "description": "Information that is required for querying Infor Nexus. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "marketo": {
                          "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                          "type": "string"
                        },
                        "s3": {
                          "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                          "type": "string"
                        },
                        "salesforce": {
                          "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                          "type": "string"
                        },
                        "sapoData": {
                          "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                          "type": "string"
                        },
                        "serviceNow": {
                          "description": "Information that is required for querying ServiceNow. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "singular": {
                          "description": "Information that is required for querying Singular. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "slack": {
                          "description": "Information that is required for querying Slack. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "trendmicro": {
                          "description": "Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                          "type": "string"
                        },
                        "veeva": {
                          "description": "Information that is required for querying Veeva. See Veeva Source Properties for more details.",
                          "type": "string"
                        },
                        "zendesk": {
                          "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "destinationField": {
                    "description": "Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.",
                    "type": "string"
                  },
                  "sourceFields": {
                    "description": "Source fields to which a particular task is applied.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "taskProperties": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "taskType": {
                    "description": "Particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "triggerConfig": {
              "description": "A Trigger that determine how and when the flow runs.",
              "properties": {
                "triggerProperties": {
                  "description": "Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.",
                  "properties": {
                    "scheduled": {
                      "properties": {
                        "dataPullMode": {
                          "description": "Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.",
                          "type": "string"
                        },
                        "firstExecutionFrom": {
                          "description": "Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "scheduleEndTime": {
                          "description": "Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "scheduleExpression": {
                          "description": "Scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).",
                          "type": "string"
                        },
                        "scheduleOffset": {
                          "description": "Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.",
                          "type": "number"
                        },
                        "scheduleStartTime": {
                          "description": "Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "timezone": {
                          "description": "Time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "triggerType": {
                  "description": "Type of flow trigger. Valid values are Scheduled, Event, and OnDemand.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.destinationFlowConfig is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destinationFlowConfig) || (has(self.initProvider) && has(self.initProvider.destinationFlowConfig))"
        },
        {
          "message": "spec.forProvider.sourceFlowConfig is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sourceFlowConfig) || (has(self.initProvider) && has(self.initProvider.sourceFlowConfig))"
        },
        {
          "message": "spec.forProvider.task is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.task) || (has(self.initProvider) && has(self.initProvider.task))"
        },
        {
          "message": "spec.forProvider.triggerConfig is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.triggerConfig) || (has(self.initProvider) && has(self.initProvider.triggerConfig))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "FlowStatus defines the observed state of Flow.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "Flow's ARN.",
              "type": "string"
            },
            "description": {
              "description": "Description of the flow you want to create.",
              "type": "string"
            },
            "destinationFlowConfig": {
              "description": "A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.",
              "items": {
                "properties": {
                  "apiVersion": {
                    "description": "API version that the destination connector uses.",
                    "type": "string"
                  },
                  "connectorProfileName": {
                    "description": "Name of the connector profile. This name must be unique for each connector profile in the AWS account.",
                    "type": "string"
                  },
                  "connectorType": {
                    "description": "Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.",
                    "type": "string"
                  },
                  "destinationConnectorProperties": {
                    "description": "This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.",
                    "properties": {
                      "customConnector": {
                        "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                        "properties": {
                          "customProperties": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.",
                            "type": "object",
                            "x-kubernetes-map-type": "granular"
                          },
                          "entityName": {
                            "description": "Entity specified in the custom connector as a destination in the flow.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "customerProfiles": {
                        "description": "Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.",
                        "properties": {
                          "domainName": {
                            "description": "Unique name of the Amazon Connect Customer Profiles domain.",
                            "type": "string"
                          },
                          "objectTypeName": {
                            "description": "Object specified in the Amazon Connect Customer Profiles flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "eventBridge": {
                        "description": "Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "honeycode": {
                        "description": "Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "lookoutMetrics": {
                        "type": "object"
                      },
                      "marketo": {
                        "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "redshift": {
                        "description": "Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.",
                        "properties": {
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "intermediateBucketName": {
                            "description": "Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "s3": {
                        "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                        "properties": {
                          "bucketName": {
                            "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                            "type": "string"
                          },
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "s3OutputFormatConfig": {
                            "description": "Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.",
                            "properties": {
                              "aggregationConfig": {
                                "description": "Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.",
                                "properties": {
                                  "aggregationType": {
                                    "description": "Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.",
                                    "type": "string"
                                  },
                                  "targetFileSize": {
                                    "description": "The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.",
                                    "type": "number"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fileType": {
                                "description": "File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.",
                                "type": "string"
                              },
                              "prefixConfig": {
                                "description": "Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.",
                                "properties": {
                                  "prefixFormat": {
                                    "description": "Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.",
                                    "type": "string"
                                  },
                                  "prefixHierarchy": {
                                    "description": "Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixType": {
                                    "description": "Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "preserveSourceDataTyping": {
                                "description": "Whether the data types from the source system need to be preserved (Only valid for Parquet file type)",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "salesforce": {
                        "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "sapoData": {
                        "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "objectPath": {
                            "description": "Object path specified in the SAPOData flow destination.",
                            "type": "string"
                          },
                          "successResponseHandlingConfig": {
                            "description": "Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "snowflake": {
                        "description": "Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.",
                        "properties": {
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "intermediateBucketName": {
                            "description": "Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.",
                            "type": "string"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "upsolver": {
                        "description": "Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.",
                        "properties": {
                          "bucketName": {
                            "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                            "type": "string"
                          },
                          "bucketPrefix": {
                            "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                            "type": "string"
                          },
                          "s3OutputFormatConfig": {
                            "description": "Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.",
                            "properties": {
                              "aggregationConfig": {
                                "description": "Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.",
                                "properties": {
                                  "aggregationType": {
                                    "description": "Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "fileType": {
                                "description": "File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.",
                                "type": "string"
                              },
                              "prefixConfig": {
                                "description": "Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.",
                                "properties": {
                                  "prefixFormat": {
                                    "description": "Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.",
                                    "type": "string"
                                  },
                                  "prefixHierarchy": {
                                    "description": "Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixType": {
                                    "description": "Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "zendesk": {
                        "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                        "properties": {
                          "errorHandlingConfig": {
                            "description": "Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.",
                            "properties": {
                              "bucketName": {
                                "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                                "type": "string"
                              },
                              "bucketPrefix": {
                                "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                                "type": "string"
                              },
                              "failOnFirstDestinationError": {
                                "description": "If the flow should fail after the first instance of a failure when attempting to place data in the destination.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "idFieldNames": {
                            "description": "Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "object": {
                            "description": "Object specified in the flow destination.",
                            "type": "string"
                          },
                          "writeOperationType": {
                            "description": "Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "flowStatus": {
              "description": "The current status of the flow.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "kmsArn": {
              "description": "ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.",
              "type": "string"
            },
            "metadataCatalogConfig": {
              "description": "A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data that\u2019s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.",
              "properties": {
                "glueDataCatalog": {
                  "properties": {
                    "databaseName": {
                      "description": "The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.",
                      "type": "string"
                    },
                    "tablePrefix": {
                      "description": "A naming prefix for each Data Catalog table that Amazon AppFlow creates",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "sourceFlowConfig": {
              "description": "The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.",
              "properties": {
                "apiVersion": {
                  "description": "API version that the destination connector uses.",
                  "type": "string"
                },
                "connectorProfileName": {
                  "description": "Name of the connector profile. This name must be unique for each connector profile in the AWS account.",
                  "type": "string"
                },
                "connectorType": {
                  "description": "Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.",
                  "type": "string"
                },
                "incrementalPullConfig": {
                  "description": "Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.",
                  "properties": {
                    "datetimeTypeFieldName": {
                      "description": "Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "sourceConnectorProperties": {
                  "description": "Information that is required to query a particular source connector. See Source Connector Properties for details.",
                  "properties": {
                    "amplitude": {
                      "description": "Information that is required for querying Amplitude. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "customConnector": {
                      "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                      "properties": {
                        "customProperties": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        },
                        "entityName": {
                          "description": "Entity specified in the custom connector as a destination in the flow.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "datadog": {
                      "description": "Information that is required for querying Datadog. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "dynatrace": {
                      "description": "Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "googleAnalytics": {
                      "description": "Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "inforNexus": {
                      "description": "Information that is required for querying Infor Nexus. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "marketo": {
                      "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "s3": {
                      "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                      "properties": {
                        "bucketName": {
                          "description": "Amazon S3 bucket name in which Amazon AppFlow places the transferred data.",
                          "type": "string"
                        },
                        "bucketPrefix": {
                          "description": "Object key for the bucket in which Amazon AppFlow places the destination files.",
                          "type": "string"
                        },
                        "s3InputFormatConfig": {
                          "description": "When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.",
                          "properties": {
                            "s3InputFileType": {
                              "description": "File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "salesforce": {
                      "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                      "properties": {
                        "enableDynamicFieldUpdate": {
                          "description": "Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.",
                          "type": "boolean"
                        },
                        "includeDeletedRecords": {
                          "description": "Whether Amazon AppFlow includes deleted files in the flow run.",
                          "type": "boolean"
                        },
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "sapoData": {
                      "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                      "properties": {
                        "objectPath": {
                          "description": "Object path specified in the SAPOData flow destination.",
                          "type": "string"
                        },
                        "paginationConfig": {
                          "description": "Sets the page size for each concurrent process that transfers OData records from your SAP instance.",
                          "properties": {
                            "maxPageSize": {
                              "description": "he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "parallelismConfig": {
                          "description": "Sets the number of concurrent processes that transfers OData records from your SAP instance.",
                          "properties": {
                            "maxPageSize": {
                              "description": "he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.",
                              "type": "number"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceNow": {
                      "description": "Information that is required for querying ServiceNow. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "singular": {
                      "description": "Information that is required for querying Singular. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "slack": {
                      "description": "Information that is required for querying Slack. See Generic Source Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "trendmicro": {
                      "description": "Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "veeva": {
                      "description": "Information that is required for querying Veeva. See Veeva Source Properties for more details.",
                      "properties": {
                        "documentType": {
                          "description": "Document type specified in the Veeva document extract flow.",
                          "type": "string"
                        },
                        "includeAllVersions": {
                          "description": "Boolean value to include All Versions of files in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "includeRenditions": {
                          "description": "Boolean value to include file renditions in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "includeSourceFiles": {
                          "description": "Boolean value to include source files in Veeva document extract flow.",
                          "type": "boolean"
                        },
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "zendesk": {
                      "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                      "properties": {
                        "object": {
                          "description": "Object specified in the flow destination.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "task": {
              "description": "A Task that Amazon AppFlow performs while transferring the data in the flow run.",
              "items": {
                "properties": {
                  "connectorOperator": {
                    "description": "Operation to be performed on the provided source fields. See Connector Operator for details.",
                    "items": {
                      "properties": {
                        "amplitude": {
                          "description": "Information that is required for querying Amplitude. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "customConnector": {
                          "description": "Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.",
                          "type": "string"
                        },
                        "datadog": {
                          "description": "Information that is required for querying Datadog. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "dynatrace": {
                          "description": "Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                          "type": "string"
                        },
                        "googleAnalytics": {
                          "description": "Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.",
                          "type": "string"
                        },
                        "inforNexus": {
                          "description": "Information that is required for querying Infor Nexus. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "marketo": {
                          "description": "Properties that are required to query Marketo. See Generic Destination Properties for more details.",
                          "type": "string"
                        },
                        "s3": {
                          "description": "Properties that are required to query Amazon S3. See S3 Destination Properties for more details.",
                          "type": "string"
                        },
                        "salesforce": {
                          "description": "Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.",
                          "type": "string"
                        },
                        "sapoData": {
                          "description": "Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.",
                          "type": "string"
                        },
                        "serviceNow": {
                          "description": "Information that is required for querying ServiceNow. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "singular": {
                          "description": "Information that is required for querying Singular. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "slack": {
                          "description": "Information that is required for querying Slack. See Generic Source Properties for more details.",
                          "type": "string"
                        },
                        "trendmicro": {
                          "description": "Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.",
                          "type": "string"
                        },
                        "veeva": {
                          "description": "Information that is required for querying Veeva. See Veeva Source Properties for more details.",
                          "type": "string"
                        },
                        "zendesk": {
                          "description": "Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "destinationField": {
                    "description": "Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.",
                    "type": "string"
                  },
                  "sourceFields": {
                    "description": "Source fields to which a particular task is applied.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "taskProperties": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "taskType": {
                    "description": "Particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "triggerConfig": {
              "description": "A Trigger that determine how and when the flow runs.",
              "properties": {
                "triggerProperties": {
                  "description": "Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.",
                  "properties": {
                    "scheduled": {
                      "properties": {
                        "dataPullMode": {
                          "description": "Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.",
                          "type": "string"
                        },
                        "firstExecutionFrom": {
                          "description": "Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "scheduleEndTime": {
                          "description": "Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "scheduleExpression": {
                          "description": "Scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).",
                          "type": "string"
                        },
                        "scheduleOffset": {
                          "description": "Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.",
                          "type": "number"
                        },
                        "scheduleStartTime": {
                          "description": "Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.",
                          "type": "string"
                        },
                        "timezone": {
                          "description": "Time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "triggerType": {
                  "description": "Type of flow trigger. Valid values are Scheduled, Event, and OnDemand.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
