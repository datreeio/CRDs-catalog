{
    "description": "Build configurations define a build process for new container images. There are three types of builds possible - a container image build using a Dockerfile, a Source-to-Image build that uses a specially prepared base image that accepts source code that it can make runnable, and a custom build that can run // arbitrary container images as a base and accept the build parameters. Builds run on the cluster and on completion are pushed to the container image registry specified in the \"output\" section. A build can be triggered via a webhook, when the base image changes, or when a user manually requests a new build be // created. \n Each build created by a build configuration is numbered and refers back to its parent configuration. Multiple builds can be triggered at once. Builds that do not have \"output\" set can be used to test code or run a verification build. \n Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).",
    "properties": {
        "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": "string"
        },
        "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": "string"
        },
        "metadata": {
            "type": "object"
        },
        "spec": {
            "description": "spec holds all the input necessary to produce a new build, and the conditions when to trigger them.",
            "properties": {
                "completionDeadlineSeconds": {
                    "description": "completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer",
                    "format": "int64",
                    "type": "integer",
                    "minimum": -9223372036854776000,
                    "maximum": 9223372036854776000
                },
                "failedBuildsHistoryLimit": {
                    "description": "failedBuildsHistoryLimit is the number of old failed builds to retain. When a BuildConfig is created, the 5 most recent failed builds are retained unless this value is set. If removed after the BuildConfig has been created, all failed builds are retained.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                },
                "mountTrustedCA": {
                    "description": "mountTrustedCA bind mounts the cluster's trusted certificate authorities, as defined in the cluster's proxy configuration, into the build. This lets processes within a build trust components signed by custom PKI certificate authorities, such as private artifact repositories and HTTPS proxies. \n When this field is set to true, the contents of `/etc/pki/ca-trust` within the build are managed by the build container, and any changes to this directory or its subdirectories (for example - within a Dockerfile `RUN` instruction) are not persisted in the build's output image.",
                    "type": "boolean"
                },
                "nodeSelector": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored.",
                    "type": "object"
                },
                "output": {
                    "description": "output describes the container image the Strategy should produce.",
                    "properties": {
                        "imageLabels": {
                            "description": "imageLabels define a list of labels that are applied to the resulting image. If there are multiple labels with the same name then the last one in the list is used.",
                            "items": {
                                "description": "ImageLabel represents a label applied to the resulting image.",
                                "properties": {
                                    "name": {
                                        "description": "name defines the name of the label. It must have non-zero length.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "value defines the literal value of the label.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "type": "array"
                        },
                        "pushSecret": {
                            "description": "PushSecret is the name of a Secret that would be used for setting up the authentication for executing the Docker push to authentication enabled Docker Registry (or Docker Hub).",
                            "properties": {
                                "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "to": {
                            "description": "to defines an optional location to push the output of this build to. Kind must be one of 'ImageStreamTag' or 'DockerImage'. This value will be used to look up a container image repository to push to. In the case of an ImageStreamTag, the ImageStreamTag will be looked for in the namespace of the build unless Namespace is specified.",
                            "properties": {
                                "apiVersion": {
                                    "description": "API version of the referent.",
                                    "type": "string"
                                },
                                "fieldPath": {
                                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                    "type": "string"
                                },
                                "kind": {
                                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string"
                                },
                                "namespace": {
                                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                    "type": "string"
                                },
                                "resourceVersion": {
                                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                    "type": "string"
                                },
                                "uid": {
                                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "postCommit": {
                    "description": "postCommit is a build hook executed after the build output image is committed, before it is pushed to a registry.",
                    "properties": {
                        "args": {
                            "description": "args is a list of arguments that are provided to either Command, Script or the container image's default entrypoint. The arguments are placed immediately after the command to be run.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "command": {
                            "description": "command is the command to run. It may not be specified with Script. This might be needed if the image doesn't have `/bin/sh`, or if you do not want to use a shell. In all other cases, using Script might be more convenient.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "script": {
                            "description": "script is a shell script to be run with `/bin/sh -ic`. It may not be specified with Command. Use Script when a shell script is appropriate to execute the post build hook, for example for running unit tests with `rake test`. If you need control over the image entrypoint, or if the image does not have `/bin/sh`, use Command and/or Args. The `-i` flag is needed to support CentOS and RHEL images that use Software Collections (SCL), in order to have the appropriate collections enabled in the shell. E.g., in the Ruby image, this is necessary to make `ruby`, `bundle` and other binaries available in the PATH.",
                            "type": "string"
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "resources": {
                    "description": "resources computes resource requirements to execute the build.",
                    "properties": {
                        "limits": {
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                            },
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                            "type": "object"
                        },
                        "requests": {
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "integer"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                            },
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                            "type": "object"
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "revision": {
                    "description": "revision is the information from the source for a specific repo snapshot. This is optional.",
                    "properties": {
                        "git": {
                            "description": "Git contains information about git-based build source",
                            "properties": {
                                "author": {
                                    "description": "author is the author of a specific commit",
                                    "properties": {
                                        "email": {
                                            "description": "email of the source control user",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "name of the source control user",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "commit": {
                                    "description": "commit is the commit hash identifying a specific commit",
                                    "type": "string"
                                },
                                "committer": {
                                    "description": "committer is the committer of a specific commit",
                                    "properties": {
                                        "email": {
                                            "description": "email of the source control user",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "name of the source control user",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "message": {
                                    "description": "message is the description of a specific commit",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "type": {
                            "description": "type of the build source, may be one of 'Source', 'Dockerfile', 'Binary', or 'Images'",
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object",
                    "additionalProperties": false
                },
                "runPolicy": {
                    "description": "RunPolicy describes how the new build created from this build configuration will be scheduled for execution. This is optional, if not specified we default to \"Serial\".",
                    "type": "string"
                },
                "serviceAccount": {
                    "description": "serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount",
                    "type": "string"
                },
                "source": {
                    "description": "source describes the SCM in use.",
                    "properties": {
                        "binary": {
                            "description": "binary builds accept a binary as their input. The binary is generally assumed to be a tar, gzipped tar, or zip file depending on the strategy. For container image builds, this is the build context and an optional Dockerfile may be specified to override any Dockerfile in the build context. For Source builds, this is assumed to be an archive as described above. For Source and container image builds, if binary.asFile is set the build will receive a directory with a single file. contextDir may be used when an archive is provided. Custom builds will receive this binary as input on STDIN.",
                            "properties": {
                                "asFile": {
                                    "description": "asFile indicates that the provided binary input should be considered a single file within the build input. For example, specifying \"webapp.war\" would place the provided binary as `/webapp.war` for the builder. If left empty, the Docker and Source build strategies assume this file is a zip, tar, or tar.gz file and extract it as the source. The custom strategy receives this binary as standard input. This filename may not contain slashes or be '..' or '.'.",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "configMaps": {
                            "description": "configMaps represents a list of configMaps and their destinations that will be used for the build.",
                            "items": {
                                "description": "ConfigMapBuildSource describes a configmap and its destination directory that will be used only at the build time. The content of the configmap referenced here will be copied into the destination directory instead of mounting.",
                                "properties": {
                                    "configMap": {
                                        "description": "configMap is a reference to an existing configmap that you want to use in your build.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "destinationDir": {
                                        "description": "destinationDir is the directory where the files from the configmap should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. For the container image build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during container image build.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "configMap"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "type": "array"
                        },
                        "contextDir": {
                            "description": "contextDir specifies the sub-directory where the source code for the application exists. This allows to have buildable sources in directory other than root of repository.",
                            "type": "string"
                        },
                        "dockerfile": {
                            "description": "dockerfile is the raw contents of a Dockerfile which should be built. When this option is specified, the FROM may be modified based on your strategy base image and additional ENV stanzas from your strategy environment will be added after the FROM, but before the rest of your Dockerfile stanzas. The Dockerfile source type may be used with other options like git - in those cases the Git repo will have any innate Dockerfile replaced in the context dir.",
                            "type": "string"
                        },
                        "git": {
                            "description": "git contains optional information about git build source",
                            "properties": {
                                "httpProxy": {
                                    "description": "httpProxy is a proxy used to reach the git repository over http",
                                    "type": "string"
                                },
                                "httpsProxy": {
                                    "description": "httpsProxy is a proxy used to reach the git repository over https",
                                    "type": "string"
                                },
                                "noProxy": {
                                    "description": "noProxy is the list of domains for which the proxy should not be used",
                                    "type": "string"
                                },
                                "ref": {
                                    "description": "ref is the branch/tag/ref to build.",
                                    "type": "string"
                                },
                                "uri": {
                                    "description": "uri points to the source that will be built. The structure of the source will depend on the type of build to run",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "uri"
                            ],
                            "type": "object",
                            "additionalProperties": false
                        },
                        "images": {
                            "description": "images describes a set of images to be used to provide source for the build",
                            "items": {
                                "description": "ImageSource is used to describe build source that will be extracted from an image or used during a multi stage build. A reference of type ImageStreamTag, ImageStreamImage or DockerImage may be used. A pull secret can be specified to pull the image from an external registry or override the default service account secret if pulling from the internal registry. Image sources can either be used to extract content from an image and place it into the build context along with the repository source, or used directly during a multi-stage container image build to allow content to be copied without overwriting the contents of the repository source (see the 'paths' and 'as' fields).",
                                "properties": {
                                    "as": {
                                        "description": "A list of image names that this source will be used in place of during a multi-stage container image build. For instance, a Dockerfile that uses \"COPY --from=nginx:latest\" will first check for an image source that has \"nginx:latest\" in this field before attempting to pull directly. If the Dockerfile does not reference an image source it is ignored. This field and paths may both be set, in which case the contents will be used twice.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "from": {
                                        "description": "from is a reference to an ImageStreamTag, ImageStreamImage, or DockerImage to copy source from.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "API version of the referent.",
                                                "type": "string"
                                            },
                                            "fieldPath": {
                                                "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                            },
                                            "namespace": {
                                                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                "type": "string"
                                            },
                                            "resourceVersion": {
                                                "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                "type": "string"
                                            },
                                            "uid": {
                                                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "paths": {
                                        "description": "paths is a list of source and destination paths to copy from the image. This content will be copied into the build context prior to starting the build. If no paths are set, the build context will not be altered.",
                                        "items": {
                                            "description": "ImageSourcePath describes a path to be copied from a source image and its destination within the build directory.",
                                            "properties": {
                                                "destinationDir": {
                                                    "description": "destinationDir is the relative directory within the build directory where files copied from the image are placed.",
                                                    "type": "string"
                                                },
                                                "sourcePath": {
                                                    "description": "sourcePath is the absolute path of the file or directory inside the image to copy to the build directory.  If the source path ends in /. then the content of the directory will be copied, but the directory itself will not be created at the destination.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "destinationDir",
                                                "sourcePath"
                                            ],
                                            "type": "object",
                                            "additionalProperties": false
                                        },
                                        "type": "array"
                                    },
                                    "pullSecret": {
                                        "description": "pullSecret is a reference to a secret to be used to pull the image from a registry If the image is pulled from the OpenShift registry, this field does not need to be set.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "required": [
                                    "from"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "type": "array"
                        },
                        "secrets": {
                            "description": "secrets represents a list of secrets and their destinations that will be used only for the build.",
                            "items": {
                                "description": "SecretBuildSource describes a secret and its destination directory that will be used only at the build time. The content of the secret referenced here will be copied into the destination directory instead of mounting.",
                                "properties": {
                                    "destinationDir": {
                                        "description": "destinationDir is the directory where the files from the secret should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. Later, when the script finishes, all files injected will be truncated to zero length. For the container image build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during container image build.",
                                        "type": "string"
                                    },
                                    "secret": {
                                        "description": "secret is a reference to an existing secret that you want to use in your build.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "required": [
                                    "secret"
                                ],
                                "type": "object",
                                "additionalProperties": false
                            },
                            "type": "array"
                        },
                        "sourceSecret": {
                            "description": "sourceSecret is the name of a Secret that would be used for setting up the authentication for cloning private repository. The secret contains valid credentials for remote repository, where the data's key represent the authentication method to be used and value is the base64 encoded credentials. Supported auth methods are: ssh-privatekey.",
                            "properties": {
                                "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "type": {
                            "description": "type of build input to accept",
                            "type": "string"
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "strategy": {
                    "description": "strategy defines how to perform a build.",
                    "properties": {
                        "customStrategy": {
                            "description": "customStrategy holds the parameters to the Custom build strategy",
                            "properties": {
                                "buildAPIVersion": {
                                    "description": "buildAPIVersion is the requested API version for the Build object serialized and passed to the custom builder",
                                    "type": "string"
                                },
                                "env": {
                                    "description": "env contains additional environment variables you want to pass into a builder container.",
                                    "items": {
                                        "description": "EnvVar represents an environment variable present in a Container.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                "type": "string"
                                            },
                                            "valueFrom": {
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "description": "Selects a key of a ConfigMap.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key to select.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "fieldRef": {
                                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                "type": "string"
                                                            },
                                                            "fieldPath": {
                                                                "description": "Path of the field to select in the specified API version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fieldPath"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "resourceFieldRef": {
                                                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                        "properties": {
                                                            "containerName": {
                                                                "description": "Container name: required for volumes, optional for env vars",
                                                                "type": "string"
                                                            },
                                                            "divisor": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                "x-kubernetes-int-or-string": true
                                                            },
                                                            "resource": {
                                                                "description": "Required: resource to select",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secretKeyRef": {
                                                        "description": "Selects a key of a secret in the pod's namespace",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the Secret or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                },
                                "exposeDockerSocket": {
                                    "description": "exposeDockerSocket will allow running Docker commands (and build container images) from inside the container. TODO: Allow admins to enforce 'false' for this option",
                                    "type": "boolean"
                                },
                                "forcePull": {
                                    "description": "forcePull describes if the controller should configure the build pod to always pull the images for the builder or only pull if it is not present locally",
                                    "type": "boolean"
                                },
                                "from": {
                                    "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the container image should be pulled",
                                    "properties": {
                                        "apiVersion": {
                                            "description": "API version of the referent.",
                                            "type": "string"
                                        },
                                        "fieldPath": {
                                            "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                            "type": "string"
                                        },
                                        "kind": {
                                            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string"
                                        },
                                        "namespace": {
                                            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                            "type": "string"
                                        },
                                        "resourceVersion": {
                                            "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                            "type": "string"
                                        },
                                        "uid": {
                                            "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "pullSecret": {
                                    "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the container images from the private Docker registries",
                                    "properties": {
                                        "name": {
                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "secrets": {
                                    "description": "secrets is a list of additional secrets that will be included in the build pod",
                                    "items": {
                                        "description": "SecretSpec specifies a secret to be included in a build pod and its corresponding mount point",
                                        "properties": {
                                            "mountPath": {
                                                "description": "mountPath is the path at which to mount the secret",
                                                "type": "string"
                                            },
                                            "secretSource": {
                                                "description": "secretSource is a reference to the secret",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "mountPath",
                                            "secretSource"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "from"
                            ],
                            "type": "object",
                            "additionalProperties": false
                        },
                        "dockerStrategy": {
                            "description": "dockerStrategy holds the parameters to the container image build strategy.",
                            "properties": {
                                "buildArgs": {
                                    "description": "buildArgs contains build arguments that will be resolved in the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg for more details. NOTE: Only the 'name' and 'value' fields are supported. Any settings on the 'valueFrom' field are ignored.",
                                    "items": {
                                        "description": "EnvVar represents an environment variable present in a Container.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                "type": "string"
                                            },
                                            "valueFrom": {
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "description": "Selects a key of a ConfigMap.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key to select.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "fieldRef": {
                                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                "type": "string"
                                                            },
                                                            "fieldPath": {
                                                                "description": "Path of the field to select in the specified API version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fieldPath"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "resourceFieldRef": {
                                                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                        "properties": {
                                                            "containerName": {
                                                                "description": "Container name: required for volumes, optional for env vars",
                                                                "type": "string"
                                                            },
                                                            "divisor": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                "x-kubernetes-int-or-string": true
                                                            },
                                                            "resource": {
                                                                "description": "Required: resource to select",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secretKeyRef": {
                                                        "description": "Selects a key of a secret in the pod's namespace",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the Secret or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                },
                                "dockerfilePath": {
                                    "description": "dockerfilePath is the path of the Dockerfile that will be used to build the container image, relative to the root of the context (contextDir). Defaults to `Dockerfile` if unset.",
                                    "type": "string"
                                },
                                "env": {
                                    "description": "env contains additional environment variables you want to pass into a builder container.",
                                    "items": {
                                        "description": "EnvVar represents an environment variable present in a Container.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                "type": "string"
                                            },
                                            "valueFrom": {
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "description": "Selects a key of a ConfigMap.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key to select.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "fieldRef": {
                                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                "type": "string"
                                                            },
                                                            "fieldPath": {
                                                                "description": "Path of the field to select in the specified API version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fieldPath"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "resourceFieldRef": {
                                                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                        "properties": {
                                                            "containerName": {
                                                                "description": "Container name: required for volumes, optional for env vars",
                                                                "type": "string"
                                                            },
                                                            "divisor": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                "x-kubernetes-int-or-string": true
                                                            },
                                                            "resource": {
                                                                "description": "Required: resource to select",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secretKeyRef": {
                                                        "description": "Selects a key of a secret in the pod's namespace",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the Secret or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                },
                                "forcePull": {
                                    "description": "forcePull describes if the builder should pull the images from registry prior to building.",
                                    "type": "boolean"
                                },
                                "from": {
                                    "description": "from is a reference to an DockerImage, ImageStreamTag, or ImageStreamImage which overrides the FROM image in the Dockerfile for the build. If the Dockerfile uses multi-stage builds, this will replace the image in the last FROM directive of the file.",
                                    "properties": {
                                        "apiVersion": {
                                            "description": "API version of the referent.",
                                            "type": "string"
                                        },
                                        "fieldPath": {
                                            "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                            "type": "string"
                                        },
                                        "kind": {
                                            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string"
                                        },
                                        "namespace": {
                                            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                            "type": "string"
                                        },
                                        "resourceVersion": {
                                            "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                            "type": "string"
                                        },
                                        "uid": {
                                            "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "imageOptimizationPolicy": {
                                    "description": "imageOptimizationPolicy describes what optimizations the system can use when building images to reduce the final size or time spent building the image. The default policy is 'None' which means the final build image will be equivalent to an image created by the container image build API. The experimental policy 'SkipLayers' will avoid commiting new layers in between each image step, and will fail if the Dockerfile cannot provide compatibility with the 'None' policy. An additional experimental policy 'SkipLayersAndWarn' is the same as 'SkipLayers' but simply warns if compatibility cannot be preserved.",
                                    "type": "string"
                                },
                                "noCache": {
                                    "description": "noCache if set to true indicates that the container image build must be executed with the --no-cache=true flag",
                                    "type": "boolean"
                                },
                                "pullSecret": {
                                    "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the container images from the private Docker registries",
                                    "properties": {
                                        "name": {
                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "volumes": {
                                    "description": "volumes is a list of input volumes that can be mounted into the builds runtime environment. Only a subset of Kubernetes Volume sources are supported by builds. More info: https://kubernetes.io/docs/concepts/storage/volumes",
                                    "items": {
                                        "description": "BuildVolume describes a volume that is made available to build pods, such that it can be mounted into buildah's runtime environment. Only a subset of Kubernetes Volume sources are supported.",
                                        "properties": {
                                            "mounts": {
                                                "description": "mounts represents the location of the volume in the image build container",
                                                "items": {
                                                    "description": "BuildVolumeMount describes the mounting of a Volume within buildah's runtime environment.",
                                                    "properties": {
                                                        "destinationPath": {
                                                            "description": "destinationPath is the path within the buildah runtime environment at which the volume should be mounted. The transient mount within the build image and the backing volume will both be mounted read only. Must be an absolute path, must not contain '..' or ':', and must not collide with a destination path generated by the builder process Paths that collide with those added by the build controller will result in a failed build with an error message detailing which path caused the error.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "destinationPath"
                                                    ],
                                                    "type": "object",
                                                    "additionalProperties": false
                                                },
                                                "type": "array",
                                                "x-kubernetes-list-map-keys": [
                                                    "destinationPath"
                                                ],
                                                "x-kubernetes-list-type": "map"
                                            },
                                            "name": {
                                                "description": "name is a unique identifier for this BuildVolume. It must conform to the Kubernetes DNS label standard and be unique within the pod. Names that collide with those added by the build controller will result in a failed build with an error message detailing which name caused the error. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                            },
                                            "source": {
                                                "description": "source represents the location and type of the mounted volume.",
                                                "properties": {
                                                    "configMap": {
                                                        "description": "configMap represents a ConfigMap that should populate this volume",
                                                        "properties": {
                                                            "defaultMode": {
                                                                "description": "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "format": "int32",
                                                                "type": "integer",
                                                                "minimum": -2147483648,
                                                                "maximum": 2147483647
                                                            },
                                                            "items": {
                                                                "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                "items": {
                                                                    "description": "Maps a string key to a path within a volume.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the key to project.",
                                                                            "type": "string"
                                                                        },
                                                                        "mode": {
                                                                            "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                            "format": "int32",
                                                                            "type": "integer",
                                                                            "minimum": -2147483648,
                                                                            "maximum": 2147483647
                                                                        },
                                                                        "path": {
                                                                            "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "path"
                                                                    ],
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "optional specify whether the ConfigMap or its keys must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "csi": {
                                                        "description": "csi represents ephemeral storage provided by external CSI drivers which support this capability",
                                                        "properties": {
                                                            "driver": {
                                                                "description": "driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
                                                                "type": "string"
                                                            },
                                                            "fsType": {
                                                                "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
                                                                "type": "string"
                                                            },
                                                            "nodePublishSecretRef": {
                                                                "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "additionalProperties": false
                                                            },
                                                            "readOnly": {
                                                                "description": "readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).",
                                                                "type": "boolean"
                                                            },
                                                            "volumeAttributes": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "driver"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secret": {
                                                        "description": "secret represents a Secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                        "properties": {
                                                            "defaultMode": {
                                                                "description": "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "format": "int32",
                                                                "type": "integer",
                                                                "minimum": -2147483648,
                                                                "maximum": 2147483647
                                                            },
                                                            "items": {
                                                                "description": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                "items": {
                                                                    "description": "Maps a string key to a path within a volume.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the key to project.",
                                                                            "type": "string"
                                                                        },
                                                                        "mode": {
                                                                            "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                            "format": "int32",
                                                                            "type": "integer",
                                                                            "minimum": -2147483648,
                                                                            "maximum": 2147483647
                                                                        },
                                                                        "path": {
                                                                            "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "path"
                                                                    ],
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "type": "array"
                                                            },
                                                            "optional": {
                                                                "description": "optional field specify whether the Secret or its keys must be defined",
                                                                "type": "boolean"
                                                            },
                                                            "secretName": {
                                                                "description": "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "type": {
                                                        "description": "type is the BuildVolumeSourceType for the volume source. Type must match the populated volume source. Valid types are: Secret, ConfigMap",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "mounts",
                                            "name",
                                            "source"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-map-keys": [
                                        "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "jenkinsPipelineStrategy": {
                            "description": "JenkinsPipelineStrategy holds the parameters to the Jenkins Pipeline build strategy. Deprecated: use OpenShift Pipelines",
                            "properties": {
                                "env": {
                                    "description": "env contains additional environment variables you want to pass into a build pipeline.",
                                    "items": {
                                        "description": "EnvVar represents an environment variable present in a Container.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                "type": "string"
                                            },
                                            "valueFrom": {
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "description": "Selects a key of a ConfigMap.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key to select.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "fieldRef": {
                                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                "type": "string"
                                                            },
                                                            "fieldPath": {
                                                                "description": "Path of the field to select in the specified API version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fieldPath"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "resourceFieldRef": {
                                                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                        "properties": {
                                                            "containerName": {
                                                                "description": "Container name: required for volumes, optional for env vars",
                                                                "type": "string"
                                                            },
                                                            "divisor": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                "x-kubernetes-int-or-string": true
                                                            },
                                                            "resource": {
                                                                "description": "Required: resource to select",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secretKeyRef": {
                                                        "description": "Selects a key of a secret in the pod's namespace",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the Secret or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                },
                                "jenkinsfile": {
                                    "description": "Jenkinsfile defines the optional raw contents of a Jenkinsfile which defines a Jenkins pipeline build.",
                                    "type": "string"
                                },
                                "jenkinsfilePath": {
                                    "description": "JenkinsfilePath is the optional path of the Jenkinsfile that will be used to configure the pipeline relative to the root of the context (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified, this defaults to Jenkinsfile in the root of the specified contextDir.",
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": false
                        },
                        "sourceStrategy": {
                            "description": "sourceStrategy holds the parameters to the Source build strategy.",
                            "properties": {
                                "env": {
                                    "description": "env contains additional environment variables you want to pass into a builder container.",
                                    "items": {
                                        "description": "EnvVar represents an environment variable present in a Container.",
                                        "properties": {
                                            "name": {
                                                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                "type": "string"
                                            },
                                            "valueFrom": {
                                                "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                "properties": {
                                                    "configMapKeyRef": {
                                                        "description": "Selects a key of a ConfigMap.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key to select.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "fieldRef": {
                                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                "type": "string"
                                                            },
                                                            "fieldPath": {
                                                                "description": "Path of the field to select in the specified API version.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "fieldPath"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "resourceFieldRef": {
                                                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                        "properties": {
                                                            "containerName": {
                                                                "description": "Container name: required for volumes, optional for env vars",
                                                                "type": "string"
                                                            },
                                                            "divisor": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "integer"
                                                                    },
                                                                    {
                                                                        "type": "string"
                                                                    }
                                                                ],
                                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                "x-kubernetes-int-or-string": true
                                                            },
                                                            "resource": {
                                                                "description": "Required: resource to select",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "resource"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secretKeyRef": {
                                                        "description": "Selects a key of a secret in the pod's namespace",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "Specify whether the Secret or its key must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "key"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    }
                                                },
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array"
                                },
                                "forcePull": {
                                    "description": "forcePull describes if the builder should pull the images from registry prior to building.",
                                    "type": "boolean"
                                },
                                "from": {
                                    "description": "from is reference to an DockerImage, ImageStreamTag, or ImageStreamImage from which the container image should be pulled",
                                    "properties": {
                                        "apiVersion": {
                                            "description": "API version of the referent.",
                                            "type": "string"
                                        },
                                        "fieldPath": {
                                            "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                            "type": "string"
                                        },
                                        "kind": {
                                            "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string"
                                        },
                                        "namespace": {
                                            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                            "type": "string"
                                        },
                                        "resourceVersion": {
                                            "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                            "type": "string"
                                        },
                                        "uid": {
                                            "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "incremental": {
                                    "description": "incremental flag forces the Source build to do incremental builds if true.",
                                    "type": "boolean"
                                },
                                "pullSecret": {
                                    "description": "pullSecret is the name of a Secret that would be used for setting up the authentication for pulling the container images from the private Docker registries",
                                    "properties": {
                                        "name": {
                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                },
                                "scripts": {
                                    "description": "scripts is the location of Source scripts",
                                    "type": "string"
                                },
                                "volumes": {
                                    "description": "volumes is a list of input volumes that can be mounted into the builds runtime environment. Only a subset of Kubernetes Volume sources are supported by builds. More info: https://kubernetes.io/docs/concepts/storage/volumes",
                                    "items": {
                                        "description": "BuildVolume describes a volume that is made available to build pods, such that it can be mounted into buildah's runtime environment. Only a subset of Kubernetes Volume sources are supported.",
                                        "properties": {
                                            "mounts": {
                                                "description": "mounts represents the location of the volume in the image build container",
                                                "items": {
                                                    "description": "BuildVolumeMount describes the mounting of a Volume within buildah's runtime environment.",
                                                    "properties": {
                                                        "destinationPath": {
                                                            "description": "destinationPath is the path within the buildah runtime environment at which the volume should be mounted. The transient mount within the build image and the backing volume will both be mounted read only. Must be an absolute path, must not contain '..' or ':', and must not collide with a destination path generated by the builder process Paths that collide with those added by the build controller will result in a failed build with an error message detailing which path caused the error.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "destinationPath"
                                                    ],
                                                    "type": "object",
                                                    "additionalProperties": false
                                                },
                                                "type": "array",
                                                "x-kubernetes-list-map-keys": [
                                                    "destinationPath"
                                                ],
                                                "x-kubernetes-list-type": "map"
                                            },
                                            "name": {
                                                "description": "name is a unique identifier for this BuildVolume. It must conform to the Kubernetes DNS label standard and be unique within the pod. Names that collide with those added by the build controller will result in a failed build with an error message detailing which name caused the error. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                            },
                                            "source": {
                                                "description": "source represents the location and type of the mounted volume.",
                                                "properties": {
                                                    "configMap": {
                                                        "description": "configMap represents a ConfigMap that should populate this volume",
                                                        "properties": {
                                                            "defaultMode": {
                                                                "description": "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "format": "int32",
                                                                "type": "integer",
                                                                "minimum": -2147483648,
                                                                "maximum": 2147483647
                                                            },
                                                            "items": {
                                                                "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                "items": {
                                                                    "description": "Maps a string key to a path within a volume.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the key to project.",
                                                                            "type": "string"
                                                                        },
                                                                        "mode": {
                                                                            "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                            "format": "int32",
                                                                            "type": "integer",
                                                                            "minimum": -2147483648,
                                                                            "maximum": 2147483647
                                                                        },
                                                                        "path": {
                                                                            "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "path"
                                                                    ],
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            },
                                                            "optional": {
                                                                "description": "optional specify whether the ConfigMap or its keys must be defined",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "csi": {
                                                        "description": "csi represents ephemeral storage provided by external CSI drivers which support this capability",
                                                        "properties": {
                                                            "driver": {
                                                                "description": "driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
                                                                "type": "string"
                                                            },
                                                            "fsType": {
                                                                "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
                                                                "type": "string"
                                                            },
                                                            "nodePublishSecretRef": {
                                                                "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "additionalProperties": false
                                                            },
                                                            "readOnly": {
                                                                "description": "readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).",
                                                                "type": "boolean"
                                                            },
                                                            "volumeAttributes": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "driver"
                                                        ],
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "secret": {
                                                        "description": "secret represents a Secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                        "properties": {
                                                            "defaultMode": {
                                                                "description": "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                "format": "int32",
                                                                "type": "integer",
                                                                "minimum": -2147483648,
                                                                "maximum": 2147483647
                                                            },
                                                            "items": {
                                                                "description": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                "items": {
                                                                    "description": "Maps a string key to a path within a volume.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the key to project.",
                                                                            "type": "string"
                                                                        },
                                                                        "mode": {
                                                                            "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                            "format": "int32",
                                                                            "type": "integer",
                                                                            "minimum": -2147483648,
                                                                            "maximum": 2147483647
                                                                        },
                                                                        "path": {
                                                                            "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "path"
                                                                    ],
                                                                    "type": "object",
                                                                    "additionalProperties": false
                                                                },
                                                                "type": "array"
                                                            },
                                                            "optional": {
                                                                "description": "optional field specify whether the Secret or its keys must be defined",
                                                                "type": "boolean"
                                                            },
                                                            "secretName": {
                                                                "description": "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "additionalProperties": false
                                                    },
                                                    "type": {
                                                        "description": "type is the BuildVolumeSourceType for the volume source. Type must match the populated volume source. Valid types are: Secret, ConfigMap",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object",
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "mounts",
                                            "name",
                                            "source"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-map-keys": [
                                        "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                }
                            },
                            "required": [
                                "from"
                            ],
                            "type": "object",
                            "additionalProperties": false
                        },
                        "type": {
                            "description": "type is the kind of build strategy.",
                            "type": "string"
                        }
                    },
                    "type": "object",
                    "additionalProperties": false
                },
                "successfulBuildsHistoryLimit": {
                    "description": "successfulBuildsHistoryLimit is the number of old successful builds to retain. When a BuildConfig is created, the 5 most recent successful builds are retained unless this value is set. If removed after the BuildConfig has been created, all successful builds are retained.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                },
                "triggers": {
                    "description": "triggers determine how new Builds can be launched from a BuildConfig. If no triggers are defined, a new build can only occur as a result of an explicit client build creation.",
                    "items": {
                        "description": "BuildTriggerPolicy describes a policy for a single trigger that results in a new Build.",
                        "properties": {
                            "bitbucket": {
                                "description": "BitbucketWebHook contains the parameters for a Bitbucket webhook type of trigger",
                                "properties": {
                                    "allowEnv": {
                                        "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
                                        "type": "boolean"
                                    },
                                    "secret": {
                                        "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
                                        "type": "string"
                                    },
                                    "secretReference": {
                                        "description": "secretReference is a reference to a secret in the same namespace, containing the value to be validated when the webhook is invoked. The secret being referenced must contain a key named \"WebHookSecretKey\", the value of which will be checked against the value supplied in the webhook invocation.",
                                        "properties": {
                                            "name": {
                                                "description": "Name is the name of the resource in the same namespace being referenced",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "generic": {
                                "description": "generic contains the parameters for a Generic webhook type of trigger",
                                "properties": {
                                    "allowEnv": {
                                        "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
                                        "type": "boolean"
                                    },
                                    "secret": {
                                        "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
                                        "type": "string"
                                    },
                                    "secretReference": {
                                        "description": "secretReference is a reference to a secret in the same namespace, containing the value to be validated when the webhook is invoked. The secret being referenced must contain a key named \"WebHookSecretKey\", the value of which will be checked against the value supplied in the webhook invocation.",
                                        "properties": {
                                            "name": {
                                                "description": "Name is the name of the resource in the same namespace being referenced",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "github": {
                                "description": "github contains the parameters for a GitHub webhook type of trigger",
                                "properties": {
                                    "allowEnv": {
                                        "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
                                        "type": "boolean"
                                    },
                                    "secret": {
                                        "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
                                        "type": "string"
                                    },
                                    "secretReference": {
                                        "description": "secretReference is a reference to a secret in the same namespace, containing the value to be validated when the webhook is invoked. The secret being referenced must contain a key named \"WebHookSecretKey\", the value of which will be checked against the value supplied in the webhook invocation.",
                                        "properties": {
                                            "name": {
                                                "description": "Name is the name of the resource in the same namespace being referenced",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "gitlab": {
                                "description": "GitLabWebHook contains the parameters for a GitLab webhook type of trigger",
                                "properties": {
                                    "allowEnv": {
                                        "description": "allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.",
                                        "type": "boolean"
                                    },
                                    "secret": {
                                        "description": "secret used to validate requests. Deprecated: use SecretReference instead.",
                                        "type": "string"
                                    },
                                    "secretReference": {
                                        "description": "secretReference is a reference to a secret in the same namespace, containing the value to be validated when the webhook is invoked. The secret being referenced must contain a key named \"WebHookSecretKey\", the value of which will be checked against the value supplied in the webhook invocation.",
                                        "properties": {
                                            "name": {
                                                "description": "Name is the name of the resource in the same namespace being referenced",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name"
                                        ],
                                        "type": "object",
                                        "additionalProperties": false
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "imageChange": {
                                "description": "imageChange contains parameters for an ImageChange type of trigger",
                                "properties": {
                                    "from": {
                                        "description": "from is a reference to an ImageStreamTag that will trigger a build when updated It is optional. If no From is specified, the From image from the build strategy will be used. Only one ImageChangeTrigger with an empty From reference is allowed in a build configuration.",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "API version of the referent.",
                                                "type": "string"
                                            },
                                            "fieldPath": {
                                                "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                            },
                                            "namespace": {
                                                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                "type": "string"
                                            },
                                            "resourceVersion": {
                                                "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                "type": "string"
                                            },
                                            "uid": {
                                                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                    },
                                    "lastTriggeredImageID": {
                                        "description": "lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build This field is deprecated and will be removed in a future release. Deprecated",
                                        "type": "string"
                                    },
                                    "paused": {
                                        "description": "paused is true if this trigger is temporarily disabled. Optional.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "type": {
                                "description": "type is the type of build trigger. Valid values: \n - GitHub GitHubWebHookBuildTriggerType represents a trigger that launches builds on GitHub webhook invocations \n - Generic GenericWebHookBuildTriggerType represents a trigger that launches builds on generic webhook invocations \n - GitLab GitLabWebHookBuildTriggerType represents a trigger that launches builds on GitLab webhook invocations \n - Bitbucket BitbucketWebHookBuildTriggerType represents a trigger that launches builds on Bitbucket webhook invocations \n - ImageChange ImageChangeBuildTriggerType represents a trigger that launches builds on availability of a new version of an image \n - ConfigChange ConfigChangeBuildTriggerType will trigger a build on an initial build config creation WARNING: In the future the behavior will change to trigger a build on any config change",
                                "type": "string"
                            }
                        },
                        "required": [
                            "type"
                        ],
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array"
                }
            },
            "required": [
                "strategy"
            ],
            "type": "object",
            "additionalProperties": false
        },
        "status": {
            "description": "status holds any relevant information about a build config",
            "properties": {
                "imageChangeTriggers": {
                    "description": "ImageChangeTriggers captures the runtime state of any ImageChangeTrigger specified in the BuildConfigSpec, including the value reconciled by the OpenShift APIServer for the lastTriggeredImageID. There is a single entry in this array for each image change trigger in spec. Each trigger status references the ImageStreamTag that acts as the source of the trigger.",
                    "items": {
                        "description": "ImageChangeTriggerStatus tracks the latest resolved status of the associated ImageChangeTrigger policy specified in the BuildConfigSpec.Triggers struct.",
                        "properties": {
                            "from": {
                                "description": "from is the ImageStreamTag that is the source of the trigger.",
                                "properties": {
                                    "name": {
                                        "description": "name is the name of the ImageStreamTag for an ImageChangeTrigger",
                                        "type": "string"
                                    },
                                    "namespace": {
                                        "description": "namespace is the namespace where the ImageStreamTag for an ImageChangeTrigger is located",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "additionalProperties": false
                            },
                            "lastTriggerTime": {
                                "description": "lastTriggerTime is the last time this particular ImageStreamTag triggered a Build to start. This field is only updated when this trigger specifically started a Build.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "lastTriggeredImageID": {
                                "description": "lastTriggeredImageID represents the sha/id of the ImageStreamTag when a Build for this BuildConfig was started. The lastTriggeredImageID is updated each time a Build for this BuildConfig is started, even if this ImageStreamTag is not the reason the Build is started.",
                                "type": "string"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "type": "array"
                },
                "lastVersion": {
                    "description": "lastVersion is used to inform about number of last triggered build.",
                    "format": "int64",
                    "type": "integer",
                    "minimum": -9223372036854776000,
                    "maximum": 9223372036854776000
                }
            },
            "required": [
                "lastVersion"
            ],
            "type": "object",
            "additionalProperties": false
        }
    },
    "required": [
        "spec"
    ],
    "type": "object",
    "additionalProperties": false,
    "$schema": "http://json-schema.org/draft-04/schema#"
}
