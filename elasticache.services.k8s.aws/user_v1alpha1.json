{
  "description": "User is the Schema for the Users API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "accessString": {
          "description": "Access permissions string used for this user.",
          "type": "string"
        },
        "engine": {
          "description": "The current supported value is Redis.",
          "type": "string"
        },
        "noPasswordRequired": {
          "description": "Indicates a password is not required for this user.",
          "type": "boolean"
        },
        "passwords": {
          "description": "Passwords used for this user. You can create up to two passwords for each\nuser.",
          "items": {
            "description": "SecretKeyReference combines a k8s corev1.SecretReference with a\nspecific key within the referred-to Secret",
            "properties": {
              "key": {
                "description": "Key is the key within the secret",
                "type": "string"
              },
              "name": {
                "description": "name is unique within a namespace to reference a secret resource.",
                "type": "string"
              },
              "namespace": {
                "description": "namespace defines the space within which the secret name must be unique.",
                "type": "string"
              }
            },
            "required": [
              "key"
            ],
            "type": "object",
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false
          },
          "type": "array"
        },
        "tags": {
          "description": "A list of tags to be added to this resource. A tag is a key-value pair. A\ntag key must be accompanied by a tag value, although null is accepted.",
          "items": {
            "description": "A tag that can be added to an ElastiCache cluster or replication group. Tags\nare composed of a Key/Value pair. You can use tags to categorize and track\nall your ElastiCache resources, with the exception of global replication\ngroup. When you add or remove tags on replication groups, those actions will\nbe replicated to all nodes in the replication group. A tag with a null Value\nis permitted.",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "userID": {
          "description": "The ID of the user.",
          "type": "string"
        },
        "userName": {
          "description": "The username of the user.",
          "type": "string"
        }
      },
      "required": [
        "accessString",
        "engine",
        "userID",
        "userName"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "UserStatus defines the observed state of User",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "authentication": {
          "description": "Denotes whether the user requires a password to authenticate.",
          "properties": {
            "passwordCount": {
              "format": "int64",
              "type": "integer"
            },
            "type_": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "expandedAccessString": {
          "description": "Access permissions string used for this user.",
          "type": "string"
        },
        "lastRequestedAccessString": {
          "description": "Access permissions string used for this user.",
          "type": "string"
        },
        "minimumEngineVersion": {
          "description": "The minimum engine version required, which is Redis OSS 6.0",
          "type": "string"
        },
        "status": {
          "description": "Indicates the user status. Can be \"active\", \"modifying\" or \"deleting\".",
          "type": "string"
        },
        "userGroupIDs": {
          "description": "Returns a list of the user group IDs the user belongs to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
