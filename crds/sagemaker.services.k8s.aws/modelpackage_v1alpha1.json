{
  "description": "ModelPackage is the Schema for the ModelPackages API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ModelPackageSpec defines the desired state of ModelPackage. \n A versioned model that can be deployed for SageMaker inference.",
      "properties": {
        "additionalInferenceSpecifications": {
          "description": "An array of additional Inference Specification objects. Each additional Inference Specification specifies artifacts based on this model package that can be used on inference endpoints. Generally used with SageMaker Neo to store the compiled artifacts.",
          "items": {
            "description": "A structure of additional Inference Specification. Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package",
            "properties": {
              "containers": {
                "items": {
                  "description": "Describes the Docker container for the model package.",
                  "properties": {
                    "containerHostname": {
                      "type": "string"
                    },
                    "environment": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "framework": {
                      "type": "string"
                    },
                    "frameworkVersion": {
                      "type": "string"
                    },
                    "image": {
                      "type": "string"
                    },
                    "imageDigest": {
                      "type": "string"
                    },
                    "modelDataURL": {
                      "type": "string"
                    },
                    "modelInput": {
                      "description": "Input object for the model.",
                      "properties": {
                        "dataInputConfig": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "nearestModelName": {
                      "type": "string"
                    },
                    "productID": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "supportedContentTypes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "supportedRealtimeInferenceInstanceTypes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "supportedResponseMIMETypes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "supportedTransformInstanceTypes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "approvalDescription": {
          "description": "A description for the approval status of the model.",
          "type": "string"
        },
        "certifyForMarketplace": {
          "description": "Whether to certify the model package for listing on Amazon Web Services Marketplace. \n This parameter is optional for unversioned models, and does not apply to versioned models.",
          "type": "boolean"
        },
        "clientToken": {
          "description": "A unique token that guarantees that the call to this API is idempotent.",
          "type": "string"
        },
        "customerMetadataProperties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata properties associated with the model package versions.",
          "type": "object"
        },
        "domain": {
          "description": "The machine learning domain of your model package and its components. Common machine learning domains include computer vision and natural language processing.",
          "type": "string"
        },
        "driftCheckBaselines": {
          "description": "Represents the drift check baselines that can be used when the model monitor is set using the model package. For more information, see the topic on Drift Detection against Previous Baselines in SageMaker Pipelines (https://docs.aws.amazon.com/sagemaker/latest/dg/pipelines-quality-clarify-baseline-lifecycle.html#pipelines-quality-clarify-baseline-drift-detection) in the Amazon SageMaker Developer Guide.",
          "properties": {
            "bias": {
              "description": "Represents the drift check bias baselines that can be used when the model monitor is set using the model package.",
              "properties": {
                "configFile": {
                  "description": "Contains details regarding the file source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "postTrainingConstraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "preTrainingConstraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "explainability": {
              "description": "Represents the drift check explainability baselines that can be used when the model monitor is set using the model package.",
              "properties": {
                "configFile": {
                  "description": "Contains details regarding the file source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "constraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "modelDataQuality": {
              "description": "Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.",
              "properties": {
                "constraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "statistics": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "modelQuality": {
              "description": "Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.",
              "properties": {
                "constraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "statistics": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "inferenceSpecification": {
          "description": "Specifies details about inference jobs that can be run with models based on this model package, including the following: \n - The Amazon ECR paths of containers that contain the inference code and model artifacts. \n - The instance types that the model package supports for transform jobs and real-time endpoints used for inference. \n - The input and output content formats that the model package supports for inference.",
          "properties": {
            "containers": {
              "items": {
                "description": "Describes the Docker container for the model package.",
                "properties": {
                  "containerHostname": {
                    "type": "string"
                  },
                  "environment": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "framework": {
                    "type": "string"
                  },
                  "frameworkVersion": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "imageDigest": {
                    "type": "string"
                  },
                  "modelDataURL": {
                    "type": "string"
                  },
                  "modelInput": {
                    "description": "Input object for the model.",
                    "properties": {
                      "dataInputConfig": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "nearestModelName": {
                    "type": "string"
                  },
                  "productID": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "supportedContentTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "supportedRealtimeInferenceInstanceTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "supportedResponseMIMETypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "supportedTransformInstanceTypes": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "metadataProperties": {
          "description": "Metadata properties of the tracking entity, trial, or trial component.",
          "properties": {
            "commitID": {
              "type": "string"
            },
            "generatedBy": {
              "type": "string"
            },
            "projectID": {
              "type": "string"
            },
            "repository": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "modelApprovalStatus": {
          "description": "Whether the model is approved for deployment. \n This parameter is optional for versioned models, and does not apply to unversioned models. \n For versioned models, the value of this parameter must be set to Approved to deploy the model.",
          "type": "string"
        },
        "modelMetrics": {
          "description": "A structure that contains model metrics reports.",
          "properties": {
            "bias": {
              "description": "Contains bias metrics for a model.",
              "properties": {
                "postTrainingReport": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "preTrainingReport": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "report": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "explainability": {
              "description": "Contains explainability metrics for a model.",
              "properties": {
                "report": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "modelDataQuality": {
              "description": "Data quality constraints and statistics for a model.",
              "properties": {
                "constraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "statistics": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "modelQuality": {
              "description": "Model quality statistics and constraints.",
              "properties": {
                "constraints": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "statistics": {
                  "description": "Details about the metrics source.",
                  "properties": {
                    "contentDigest": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "s3URI": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "modelPackageDescription": {
          "description": "A description of the model package.",
          "type": "string"
        },
        "modelPackageGroupName": {
          "description": "The name or Amazon Resource Name (ARN) of the model package group that this model version belongs to. \n This parameter is required for versioned models, and does not apply to unversioned models.",
          "type": "string"
        },
        "modelPackageName": {
          "description": "The name of the model package. The name must have 1 to 63 characters. Valid characters are a-z, A-Z, 0-9, and - (hyphen). \n This parameter is required for unversioned models. It is not applicable to versioned models.",
          "type": "string"
        },
        "samplePayloadURL": {
          "description": "The Amazon Simple Storage Service (Amazon S3) path where the sample payload is stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). This archive can hold multiple files that are all equally used in the load test. Each file in the archive must satisfy the size constraints of the InvokeEndpoint (https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpoint.html#API_runtime_InvokeEndpoint_RequestSyntax) call.",
          "type": "string"
        },
        "sourceAlgorithmSpecification": {
          "description": "Details about the algorithm that was used to create the model package.",
          "properties": {
            "sourceAlgorithms": {
              "items": {
                "description": "Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your SageMaker account or an algorithm in Amazon Web Services Marketplace that you are subscribed to.",
                "properties": {
                  "algorithmName": {
                    "type": "string"
                  },
                  "modelDataURL": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "description": "A list of key value pairs associated with the model. For more information, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the Amazon Web Services General Reference Guide.",
          "items": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources. \n You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see AddTags. \n For more information on adding metadata to your Amazon Web Services resources with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). For advice on best practices for managing Amazon Web Services resources with tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "task": {
          "description": "The machine learning task your model package accomplishes. Common machine learning tasks include object detection and image classification. The following tasks are supported by Inference Recommender: \"IMAGE_CLASSIFICATION\" | \"OBJECT_DETECTION\" | \"TEXT_GENERATION\" |\"IMAGE_SEGMENTATION\" | \"FILL_MASK\" | \"CLASSIFICATION\" | \"REGRESSION\" | \"OTHER\". \n Specify \"OTHER\" if none of the tasks listed fit your use case.",
          "type": "string"
        },
        "validationSpecification": {
          "description": "Specifies configurations for one or more transform jobs that SageMaker runs to test the model package.",
          "properties": {
            "validationProfiles": {
              "items": {
                "description": "Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package. \n The data provided in the validation profile is made available to your buyers on Amazon Web Services Marketplace.",
                "properties": {
                  "profileName": {
                    "type": "string"
                  },
                  "transformJobDefinition": {
                    "description": "Defines the input needed to run a transform job using the inference specification specified in the algorithm.",
                    "properties": {
                      "batchStrategy": {
                        "type": "string"
                      },
                      "environment": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      "maxConcurrentTransforms": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "maxPayloadInMB": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "transformInput": {
                        "description": "Describes the input source of a transform job and the way the transform job consumes it.",
                        "properties": {
                          "compressionType": {
                            "type": "string"
                          },
                          "contentType": {
                            "type": "string"
                          },
                          "dataSource": {
                            "description": "Describes the location of the channel data.",
                            "properties": {
                              "s3DataSource": {
                                "description": "Describes the S3 data source.",
                                "properties": {
                                  "s3DataType": {
                                    "type": "string"
                                  },
                                  "s3URI": {
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "splitType": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "transformOutput": {
                        "description": "Describes the results of a transform job.",
                        "properties": {
                          "accept": {
                            "type": "string"
                          },
                          "assembleWith": {
                            "type": "string"
                          },
                          "kmsKeyID": {
                            "type": "string"
                          },
                          "s3OutputPath": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "transformResources": {
                        "description": "Describes the resources, including ML instance types and ML instance count, to use for transform job.",
                        "properties": {
                          "instanceCount": {
                            "format": "int64",
                            "type": "integer"
                          },
                          "instanceType": {
                            "type": "string"
                          },
                          "volumeKMSKeyID": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "validationRole": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ModelPackageStatus defines the observed state of ModelPackage",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "creationTime": {
          "description": "A timestamp specifying when the model package was created.",
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedTime": {
          "description": "The last time that the model package was modified.",
          "format": "date-time",
          "type": "string"
        },
        "modelPackageStatus": {
          "description": "The current status of the model package.",
          "type": "string"
        },
        "modelPackageStatusDetails": {
          "description": "Details about the current status of the model package.",
          "properties": {
            "imageScanStatuses": {
              "items": {
                "description": "Represents the overall status of a model package.",
                "properties": {
                  "failureReason": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "validationStatuses": {
              "items": {
                "description": "Represents the overall status of a model package.",
                "properties": {
                  "failureReason": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
