{
  "description": "SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "SecretStore"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": [
                  "string",
                  "null"
                ]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": [
                  "object",
                  "null"
                ]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "spec": {
      "description": "SecretStoreSpec defines the desired state of SecretStore.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "provider"
      ],
      "properties": {
        "conditions": {
          "description": "Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in\nfor a ClusterSecretStore instance.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "namespaceSelector": {
                "description": "Choose namespace using a labelSelector",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "namespaces": {
                "description": "Choose namespaces by name",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "controller": {
          "description": "Used to select the correct ESO controller (think: ingress.ingressClassName)\nThe ESO controller is instantiated with a specific controller name and filters ES based on this property",
          "type": [
            "string",
            "null"
          ]
        },
        "provider": {
          "description": "Used to configure the provider. Only one provider may be set",
          "type": "object",
          "maxProperties": 1,
          "minProperties": 1,
          "properties": {
            "akeyless": {
              "description": "Akeyless configures this store to sync secrets using Akeyless Vault provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "akeylessGWApiURL",
                "authSecretRef"
              ],
              "properties": {
                "akeylessGWApiURL": {
                  "description": "Akeyless GW API Url from which the secrets to be fetched from.",
                  "type": "string"
                },
                "authSecretRef": {
                  "description": "Auth configures how the operator authenticates with Akeyless.",
                  "type": "object",
                  "properties": {
                    "kubernetesAuth": {
                      "description": "Kubernetes authenticates with Akeyless by passing the ServiceAccount\ntoken stored in the named Secret resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "accessID",
                        "k8sConfName"
                      ],
                      "properties": {
                        "accessID": {
                          "description": "the Akeyless Kubernetes auth-method access-id",
                          "type": "string"
                        },
                        "k8sConfName": {
                          "description": "Kubernetes-auth configuration name in Akeyless-Gateway",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Optional secret field containing a Kubernetes ServiceAccount JWT used\nfor authenticating with Akeyless. If a name is specified without a key,\n`token` is the default. If one is not specified, the one bound to\nthe controller will be used.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "serviceAccountRef": {
                          "description": "Optional service account field containing the name of a kubernetes ServiceAccount.\nIf the service account is specified, the service account secret token JWT will be used\nfor authenticating with Akeyless. If the service account selector is not supplied,\nthe secretRef will be used instead.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "secretRef": {
                      "description": "Reference to a Secret that contains the details\nto authenticate with Akeyless.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "accessID": {
                          "description": "The SecretAccessID is used for authentication",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "accessType": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "accessTypeParam": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "caBundle": {
                  "description": "PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used\nif the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates\nare used to validate the TLS connection.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "byte"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Akeyless Gateway certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key where the CA certificate can be found in the Secret or ConfigMap.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.\nCan only be defined when used in a ClusterSecretStore.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "type": "string",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ]
                    }
                  }
                }
              }
            },
            "alibaba": {
              "description": "Alibaba configures this store to sync secrets using Alibaba Cloud provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth",
                "regionID"
              ],
              "properties": {
                "auth": {
                  "description": "AlibabaAuth contains a secretRef for credentials.",
                  "type": "object",
                  "properties": {
                    "rrsa": {
                      "description": "Authenticate against Alibaba using RRSA.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "oidcProviderArn",
                        "oidcTokenFilePath",
                        "roleArn",
                        "sessionName"
                      ],
                      "properties": {
                        "oidcProviderArn": {
                          "type": "string"
                        },
                        "oidcTokenFilePath": {
                          "type": "string"
                        },
                        "roleArn": {
                          "type": "string"
                        },
                        "sessionName": {
                          "type": "string"
                        }
                      }
                    },
                    "secretRef": {
                      "description": "AlibabaAuthSecretRef holds secret references for Alibaba credentials.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "accessKeyIDSecretRef",
                        "accessKeySecretSecretRef"
                      ],
                      "properties": {
                        "accessKeyIDSecretRef": {
                          "description": "The AccessKeyID is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "accessKeySecretSecretRef": {
                          "description": "The AccessKeySecret is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "regionID": {
                  "description": "Alibaba Region to be used for the provider",
                  "type": "string"
                }
              }
            },
            "aws": {
              "description": "AWS configures this store to sync secrets using AWS Secret Manager provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "region",
                "service"
              ],
              "properties": {
                "additionalRoles": {
                  "description": "AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against AWS\nif not set aws sdk will infer credentials from your environment\nsee: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "jwt": {
                      "description": "Authenticate against AWS using service account tokens.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "secretRef": {
                      "description": "AWSAuthSecretRef holds secret references for AWS credentials\nboth AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "accessKeyIDSecretRef": {
                          "description": "The AccessKeyID is used for authentication",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "sessionTokenSecretRef": {
                          "description": "The SessionToken used for authentication\nThis must be defined if AccessKeyID and SecretAccessKey are temporary credentials\nsee: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "externalID": {
                  "description": "AWS External ID set on assumed IAM roles",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "region": {
                  "description": "AWS Region to be used for the provider",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a Role ARN which the provider will assume",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "secretsManager": {
                  "description": "SecretsManager defines how the provider behaves when interacting with AWS SecretsManager",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "forceDeleteWithoutRecovery": {
                      "description": "Specifies whether to delete the secret without any recovery window. You\ncan't use both this parameter and RecoveryWindowInDays in the same call.\nIf you don't use either, then by default Secrets Manager uses a 30 day\nrecovery window.\nsee: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "recoveryWindowInDays": {
                      "description": "The number of days from 7 to 30 that Secrets Manager waits before\npermanently deleting the secret. You can't use both this parameter and\nForceDeleteWithoutRecovery in the same call. If you don't use either,\nthen by default Secrets Manager uses a 30 day recovery window.\nsee: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    }
                  }
                },
                "service": {
                  "description": "Service defines which service should be used to fetch the secrets",
                  "type": "string",
                  "enum": [
                    "SecretsManager",
                    "ParameterStore"
                  ]
                },
                "sessionTags": {
                  "description": "AWS STS assume role session tags",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "transitiveTagKeys": {
                  "description": "AWS STS assume role transitive session tags. Required when multiple rules are used with the provider",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "azurekv": {
              "description": "AzureKV configures this store to sync secrets using Azure Key Vault provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "vaultUrl"
              ],
              "properties": {
                "authSecretRef": {
                  "description": "Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "clientId": {
                      "description": "The Azure clientId of the service principle used for authentication.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "clientSecret": {
                      "description": "The Azure ClientSecret of the service principle used for authentication.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "authType": {
                  "description": "Auth type defines how to authenticate to the keyvault service.\nValid values are:\n- \"ServicePrincipal\" (default): Using a service principal (tenantId, clientId, clientSecret)\n- \"ManagedIdentity\": Using Managed Identity assigned to the pod (see aad-pod-identity)",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "ServicePrincipal",
                    "ManagedIdentity",
                    "WorkloadIdentity"
                  ]
                },
                "environmentType": {
                  "description": "EnvironmentType specifies the Azure cloud environment endpoints to use for\nconnecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.\nThe following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152\nPublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "PublicCloud",
                    "USGovernmentCloud",
                    "ChinaCloud",
                    "GermanCloud"
                  ]
                },
                "identityId": {
                  "description": "If multiple Managed Identity is assigned to the pod, you can select the one to be used",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "serviceAccountRef": {
                  "description": "ServiceAccountRef specified the service account\nthat should be used when authenticating with WorkloadIdentity.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "tenantId": {
                  "description": "TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "vaultUrl": {
                  "description": "Vault Url from which the secrets to be fetched from.",
                  "type": "string"
                }
              }
            },
            "chef": {
              "description": "Chef configures this store to sync secrets with chef server",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth",
                "serverUrl",
                "username"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against chef Server",
                  "type": "object",
                  "required": [
                    "secretRef"
                  ],
                  "properties": {
                    "secretRef": {
                      "description": "ChefAuthSecretRef holds secret references for chef server login credentials.",
                      "type": "object",
                      "required": [
                        "privateKeySecretRef"
                      ],
                      "properties": {
                        "privateKeySecretRef": {
                          "description": "SecretKey is the Signing Key in PEM format, used for authentication.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "serverUrl": {
                  "description": "ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a \"/\"",
                  "type": "string"
                },
                "username": {
                  "description": "UserName should be the user ID on the chef server",
                  "type": "string"
                }
              }
            },
            "conjur": {
              "description": "Conjur configures this store to sync secrets using conjur provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth",
                "url"
              ],
              "properties": {
                "auth": {
                  "type": "object",
                  "properties": {
                    "apikey": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "account",
                        "apiKeyRef",
                        "userRef"
                      ],
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "apiKeyRef": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "userRef": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "jwt": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "account",
                        "serviceID"
                      ],
                      "properties": {
                        "account": {
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Optional SecretRef that refers to a key in a Secret resource containing JWT token to\nauthenticate with Conjur using the JWT authentication method.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "serviceAccountRef": {
                          "description": "Optional ServiceAccountRef specifies the Kubernetes service account for which to request\na token for with the `TokenRequest` API.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "serviceID": {
                          "description": "The conjur authn jwt webservice id",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "caBundle": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "caProvider": {
                  "description": "Used to provide custom certificate authority (CA) certificates\nfor a secret store. The CAProvider points to a Secret or ConfigMap resource\nthat contains a PEM-encoded certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key where the CA certificate can be found in the Secret or ConfigMap.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.\nCan only be defined when used in a ClusterSecretStore.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "type": "string",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ]
                    }
                  }
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "delinea": {
              "description": "Delinea DevOps Secrets Vault\nhttps://docs.delinea.com/online-help/products/devops-secrets-vault/current",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "clientId",
                "clientSecret",
                "tenant"
              ],
              "properties": {
                "clientId": {
                  "description": "ClientID is the non-secret part of the credential.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef references a key in a secret that will be used as value.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "value": {
                      "description": "Value can be specified directly to set a value without using a secret.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "clientSecret": {
                  "description": "ClientSecret is the secret part of the credential.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef references a key in a secret that will be used as value.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "value": {
                      "description": "Value can be specified directly to set a value without using a secret.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "tenant": {
                  "description": "Tenant is the chosen hostname / site name.",
                  "type": "string"
                },
                "tld": {
                  "description": "TLD is based on the server location that was chosen during provisioning.\nIf unset, defaults to \"com\".",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "urlTemplate": {
                  "description": "URLTemplate\nIf unset, defaults to \"https://%s.secretsvaultcloud.%s/v1/%s%s\".",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "doppler": {
              "description": "Doppler configures this store to sync secrets using the Doppler provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth"
              ],
              "properties": {
                "auth": {
                  "description": "Auth configures how the Operator authenticates with the Doppler API",
                  "type": "object",
                  "required": [
                    "secretRef"
                  ],
                  "properties": {
                    "secretRef": {
                      "type": "object",
                      "required": [
                        "dopplerToken"
                      ],
                      "properties": {
                        "dopplerToken": {
                          "description": "The DopplerToken is used for authentication.\nSee https://docs.doppler.com/reference/api#authentication for auth token types.\nThe Key attribute defaults to dopplerToken if not specified.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "config": {
                  "description": "Doppler config (required if not using a Service Token)",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "format": {
                  "description": "Format enables the downloading of secrets as a file (string)",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "json",
                    "dotnet-json",
                    "env",
                    "yaml",
                    "docker"
                  ]
                },
                "nameTransformer": {
                  "description": "Environment variable compatible name transforms that change secret names to a different format",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "upper-camel",
                    "camel",
                    "lower-snake",
                    "tf-var",
                    "dotnet-env",
                    "lower-kebab"
                  ]
                },
                "project": {
                  "description": "Doppler project (required if not using a Service Token)",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "fake": {
              "description": "Fake configures a store with static key/value pairs",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueMap": {
                        "description": "Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "version": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "gcpsm": {
              "description": "GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against GCP",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "secretRef": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "workloadIdentity": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "clusterLocation",
                        "clusterName",
                        "serviceAccountRef"
                      ],
                      "properties": {
                        "clusterLocation": {
                          "type": "string"
                        },
                        "clusterName": {
                          "type": "string"
                        },
                        "clusterProjectID": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "projectID": {
                  "description": "ProjectID project where secret is located",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "gitlab": {
              "description": "GitLab configures this store to sync secrets using GitLab Variables provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth"
              ],
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with a GitLab instance.",
                  "type": "object",
                  "required": [
                    "SecretRef"
                  ],
                  "properties": {
                    "SecretRef": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "description": "AccessToken is used for authentication.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "environment": {
                  "description": "Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "groupIDs": {
                  "description": "GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "inheritFromGroups": {
                  "description": "InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "projectID": {
                  "description": "ProjectID specifies a project where secrets are located.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "url": {
                  "description": "URL configures the GitLab instance URL. Defaults to https://gitlab.com/.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "ibm": {
              "description": "IBM configures this store to sync secrets using IBM Cloud provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth"
              ],
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with the IBM secrets manager.",
                  "type": "object",
                  "maxProperties": 1,
                  "minProperties": 1,
                  "properties": {
                    "containerAuth": {
                      "description": "IBM Container-based auth with IAM Trusted Profile.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "profile"
                      ],
                      "properties": {
                        "iamEndpoint": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "profile": {
                          "description": "the IBM Trusted Profile",
                          "type": "string"
                        },
                        "tokenLocation": {
                          "description": "Location the token is mounted on the pod",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "secretRef": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "secretApiKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "serviceUrl": {
                  "description": "ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "keepersecurity": {
              "description": "KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "authRef",
                "folderID"
              ],
              "properties": {
                "authRef": {
                  "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "The name of the Secret resource being referred to.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "folderID": {
                  "type": "string"
                }
              }
            },
            "kubernetes": {
              "description": "Kubernetes configures this store to sync secrets using a Kubernetes cluster provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth"
              ],
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with a Kubernetes instance.",
                  "type": "object",
                  "maxProperties": 1,
                  "minProperties": 1,
                  "properties": {
                    "cert": {
                      "description": "has both clientCert and clientKey as secretKeySelector",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "clientCert": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "clientKey": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "serviceAccount": {
                      "description": "points to a service account that should be used for authentication",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "audiences": {
                          "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "name": {
                          "description": "The name of the ServiceAccount resource being referred to.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "token": {
                      "description": "use static token to authenticate with",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "bearerToken": {
                          "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "remoteNamespace": {
                  "description": "Remote namespace to fetch the secrets from",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "server": {
                  "description": "configures the Kubernetes server Address.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "caBundle": {
                      "description": "CABundle is a base64-encoded CA certificate",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "byte"
                    },
                    "caProvider": {
                      "description": "see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name",
                        "type"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key where the CA certificate can be found in the Secret or ConfigMap.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the object located at the provider type.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "The namespace the Provider type is in.\nCan only be defined when used in a ClusterSecretStore.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                          "type": "string",
                          "enum": [
                            "Secret",
                            "ConfigMap"
                          ]
                        }
                      }
                    },
                    "url": {
                      "description": "configures the Kubernetes server Address.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "onepassword": {
              "description": "OnePassword configures this store to sync secrets using the 1Password Cloud provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth",
                "connectHost",
                "vaults"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against OnePassword Connect Server",
                  "type": "object",
                  "required": [
                    "secretRef"
                  ],
                  "properties": {
                    "secretRef": {
                      "description": "OnePasswordAuthSecretRef holds secret references for 1Password credentials.",
                      "type": "object",
                      "required": [
                        "connectTokenSecretRef"
                      ],
                      "properties": {
                        "connectTokenSecretRef": {
                          "description": "The ConnectToken is used for authentication to a 1Password Connect Server.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "connectHost": {
                  "description": "ConnectHost defines the OnePassword Connect Server to connect to",
                  "type": "string"
                },
                "vaults": {
                  "description": "Vaults defines which OnePassword vaults to search in which order",
                  "type": "object",
                  "additionalProperties": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                }
              }
            },
            "oracle": {
              "description": "Oracle configures this store to sync secrets using Oracle Vault provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "region",
                "vault"
              ],
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with the Oracle Vault.\nIf empty, use the instance principal, otherwise the user credentials specified in Auth.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "secretRef",
                    "tenancy",
                    "user"
                  ],
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef to pass through sensitive information.",
                      "type": "object",
                      "required": [
                        "fingerprint",
                        "privatekey"
                      ],
                      "properties": {
                        "fingerprint": {
                          "description": "Fingerprint is the fingerprint of the API private key.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "privatekey": {
                          "description": "PrivateKey is the user's API Signing Key in PEM format, used for authentication.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "tenancy": {
                      "description": "Tenancy is the tenancy OCID where user is located.",
                      "type": "string"
                    },
                    "user": {
                      "description": "User is an access OCID specific to the account.",
                      "type": "string"
                    }
                  }
                },
                "compartment": {
                  "description": "Compartment is the vault compartment OCID.\nRequired for PushSecret",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "encryptionKey": {
                  "description": "EncryptionKey is the OCID of the encryption key within the vault.\nRequired for PushSecret",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "principalType": {
                  "description": "The type of principal to use for authentication. If left blank, the Auth struct will\ndetermine the principal type. This optional field must be specified if using\nworkload identity.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "",
                    "UserPrincipal",
                    "InstancePrincipal",
                    "Workload"
                  ]
                },
                "region": {
                  "description": "Region is the region where vault is located.",
                  "type": "string"
                },
                "serviceAccountRef": {
                  "description": "ServiceAccountRef specified the service account\nthat should be used when authenticating with WorkloadIdentity.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "vault": {
                  "description": "Vault is the vault's OCID of the specific vault where secret is located.",
                  "type": "string"
                }
              }
            },
            "pulumi": {
              "description": "Pulumi configures this store to sync secrets using the Pulumi provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "accessToken",
                "environment",
                "organization"
              ],
              "properties": {
                "accessToken": {
                  "description": "AccessToken is the access tokens to sign in to the Pulumi Cloud Console.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef is a reference to a secret containing the Pulumi API token.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "apiUrl": {
                  "description": "APIURL is the URL of the Pulumi API.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "environment": {
                  "description": "Environment are YAML documents composed of static key-value pairs, programmatic expressions,\ndynamically retrieved values from supported providers including all major clouds,\nand other Pulumi ESC environments.\nTo create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.",
                  "type": "string"
                },
                "organization": {
                  "description": "Organization are a space to collaborate on shared projects and stacks.\nTo create a new organization, visit https://app.pulumi.com/ and click \"New Organization\".",
                  "type": "string"
                }
              }
            },
            "scaleway": {
              "description": "Scaleway",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "accessKey",
                "projectId",
                "region",
                "secretKey"
              ],
              "properties": {
                "accessKey": {
                  "description": "AccessKey is the non-secret part of the api key.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef references a key in a secret that will be used as value.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "value": {
                      "description": "Value can be specified directly to set a value without using a secret.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "apiUrl": {
                  "description": "APIURL is the url of the api to use. Defaults to https://api.scaleway.com",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "projectId": {
                  "description": "ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings",
                  "type": "string"
                },
                "region": {
                  "description": "Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone",
                  "type": "string"
                },
                "secretKey": {
                  "description": "SecretKey is the non-secret part of the api key.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "SecretRef references a key in a secret that will be used as value.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "value": {
                      "description": "Value can be specified directly to set a value without using a secret.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            },
            "senhasegura": {
              "description": "Senhasegura configures this store to sync secrets using senhasegura provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth",
                "module",
                "url"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines parameters to authenticate in senhasegura",
                  "type": "object",
                  "required": [
                    "clientId",
                    "clientSecretSecretRef"
                  ],
                  "properties": {
                    "clientId": {
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "ignoreSslCertificate": {
                  "description": "IgnoreSslCertificate defines if SSL certificate must be ignored",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "module": {
                  "description": "Module defines which senhasegura module should be used to get secrets",
                  "type": "string"
                },
                "url": {
                  "description": "URL of senhasegura",
                  "type": "string"
                }
              }
            },
            "vault": {
              "description": "Vault configures this store to sync secrets using Hashi provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth",
                "server"
              ],
              "properties": {
                "auth": {
                  "description": "Auth configures how secret-manager authenticates with the Vault server.",
                  "type": "object",
                  "properties": {
                    "appRole": {
                      "description": "AppRole authenticates with Vault using the App Role auth mechanism,\nwith the role and secret stored in a Kubernetes Secret resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "path",
                        "secretRef"
                      ],
                      "properties": {
                        "path": {
                          "description": "Path where the App Role authentication backend is mounted\nin Vault, e.g: \"approle\"",
                          "type": "string"
                        },
                        "roleId": {
                          "description": "RoleID configured in the App Role authentication backend when setting\nup the authentication backend in Vault.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "roleRef": {
                          "description": "Reference to a key in a Secret that contains the App Role ID used\nto authenticate with Vault.\nThe `key` field must be specified and denotes which entry within the Secret\nresource is used as the app role id.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "secretRef": {
                          "description": "Reference to a key in a Secret that contains the App Role secret used\nto authenticate with Vault.\nThe `key` field must be specified and denotes which entry within the Secret\nresource is used as the app role secret.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "cert": {
                      "description": "Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate\nCert authentication method",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "clientCert": {
                          "description": "ClientCert is a certificate to authenticate using the Cert Vault\nauthentication method",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "secretRef": {
                          "description": "SecretRef to a key in a Secret resource containing client private key to\nauthenticate with Vault using the Cert authentication method",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "iam": {
                      "description": "Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials\nAWS IAM authentication method",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "vaultRole"
                      ],
                      "properties": {
                        "externalID": {
                          "description": "AWS External ID set on assumed IAM roles",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "jwt": {
                          "description": "Specify a service account with IRSA enabled",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "serviceAccountRef": {
                              "description": "A reference to a ServiceAccount resource.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "audiences": {
                                  "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "name": {
                                  "description": "The name of the ServiceAccount resource being referred to.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "path": {
                          "description": "Path where the AWS auth method is enabled in Vault, e.g: \"aws\"",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "region": {
                          "description": "AWS region",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "role": {
                          "description": "This is the AWS role to be assumed before talking to vault",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "secretRef": {
                          "description": "Specify credentials in a Secret object",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "accessKeyIDSecretRef": {
                              "description": "The AccessKeyID is used for authentication",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "secretAccessKeySecretRef": {
                              "description": "The SecretAccessKey is used for authentication",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "sessionTokenSecretRef": {
                              "description": "The SessionToken used for authentication\nThis must be defined if AccessKeyID and SecretAccessKey are temporary credentials\nsee: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "vaultAwsIamServerID": {
                          "description": "X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "vaultRole": {
                          "description": "Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine",
                          "type": "string"
                        }
                      }
                    },
                    "jwt": {
                      "description": "Jwt authenticates with Vault by passing role and JWT token using the\nJWT/OIDC authentication method",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "kubernetesServiceAccountToken": {
                          "description": "Optional ServiceAccountToken specifies the Kubernetes service account for which to request\na token for with the `TokenRequest` API.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "serviceAccountRef"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Optional audiences field that will be used to request a temporary Kubernetes service\naccount token for the service account referenced by `serviceAccountRef`.\nDefaults to a single audience `vault` it not specified.\nDeprecated: use serviceAccountRef.Audiences instead",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "expirationSeconds": {
                              "description": "Optional expiration time in seconds that will be used to request a temporary\nKubernetes service account token for the service account referenced by\n`serviceAccountRef`.\nDeprecated: this will be removed in the future.\nDefaults to 10 minutes.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int64"
                            },
                            "serviceAccountRef": {
                              "description": "Service account field containing the name of a kubernetes ServiceAccount.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "audiences": {
                                  "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "name": {
                                  "description": "The name of the ServiceAccount resource being referred to.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "path": {
                          "description": "Path where the JWT authentication backend is mounted\nin Vault, e.g: \"jwt\"",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a JWT role to authenticate using the JWT/OIDC Vault\nauthentication method",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "secretRef": {
                          "description": "Optional SecretRef that refers to a key in a Secret resource containing JWT token to\nauthenticate with Vault using the JWT/OIDC authentication method.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "kubernetes": {
                      "description": "Kubernetes authenticates with Vault by passing the ServiceAccount\ntoken stored in the named Secret resource to the Vault server.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "mountPath",
                        "role"
                      ],
                      "properties": {
                        "mountPath": {
                          "description": "Path where the Kubernetes authentication backend is mounted in Vault, e.g:\n\"kubernetes\"",
                          "type": "string"
                        },
                        "role": {
                          "description": "A required field containing the Vault Role to assume. A Role binds a\nKubernetes ServiceAccount with a set of Vault policies.",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Optional secret field containing a Kubernetes ServiceAccount JWT used\nfor authenticating with Vault. If a name is specified without a key,\n`token` is the default. If one is not specified, the one bound to\nthe controller will be used.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "serviceAccountRef": {
                          "description": "Optional service account field containing the name of a kubernetes ServiceAccount.\nIf the service account is specified, the service account secret token JWT will be used\nfor authenticating with Vault. If the service account selector is not supplied,\nthe secretRef will be used instead.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "ldap": {
                      "description": "Ldap authenticates with Vault by passing username/password pair using\nthe LDAP authentication method",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "path",
                        "username"
                      ],
                      "properties": {
                        "path": {
                          "description": "Path where the LDAP authentication backend is mounted\nin Vault, e.g: \"ldap\"",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "SecretRef to a key in a Secret resource containing password for the LDAP\nuser used to authenticate with Vault using the LDAP authentication\nmethod",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "username": {
                          "description": "Username is a LDAP user name used to authenticate using the LDAP Vault\nauthentication method",
                          "type": "string"
                        }
                      }
                    },
                    "tokenSecretRef": {
                      "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "userPass": {
                      "description": "UserPass authenticates with Vault by passing username/password pair",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "path",
                        "username"
                      ],
                      "properties": {
                        "path": {
                          "description": "Path where the UserPassword authentication backend is mounted\nin Vault, e.g: \"user\"",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "SecretRef to a key in a Secret resource containing password for the\nuser used to authenticate with Vault using the UserPass authentication\nmethod",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "username": {
                          "description": "Username is a user name used to authenticate using the UserPass Vault\nauthentication method",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "caBundle": {
                  "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used\nif the Server URL is using HTTPS protocol. This parameter is ignored for\nplain HTTP protocol connection. If not set the system root certificates\nare used to validate the TLS connection.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "byte"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Vault server certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key where the CA certificate can be found in the Secret or ConfigMap.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.\nCan only be defined when used in a ClusterSecretStore.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "type": "string",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ]
                    }
                  }
                },
                "forwardInconsistent": {
                  "description": "ForwardInconsistent tells Vault to forward read-after-write requests to the Vault\nleader instead of simply retrying within a loop. This can increase performance if\nthe option is enabled serverside.\nhttps://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "namespace": {
                  "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows\nVault environments to support Secure Multi-tenancy. e.g: \"ns1\".\nMore about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "path": {
                  "description": "Path is the mount path of the Vault KV backend endpoint, e.g:\n\"secret\". The v2 KV secret engine version specific \"/data\" path suffix\nfor fetching secrets from Vault is optional and will be appended\nif not present in specified path.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "readYourWrites": {
                  "description": "ReadYourWrites ensures isolated read-after-write semantics by\nproviding discovered cluster replication states in each request.\nMore information about eventual consistency in Vault can be found here\nhttps://www.vaultproject.io/docs/enterprise/consistency",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "server": {
                  "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                  "type": "string"
                },
                "tls": {
                  "description": "The configuration used for client side related TLS communication, when the Vault server\nrequires mutual authentication. Only used if the Server URL is using HTTPS protocol.\nThis parameter is ignored for plain HTTP protocol connection.\nIt's worth noting this configuration is different from the \"TLS certificates auth method\",\nwhich is available under the `auth.cert` section.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "certSecretRef": {
                      "description": "CertSecretRef is a certificate added to the transport layer\nwhen communicating with the Vault server.\nIf no key for the Secret is specified, external-secret will default to 'tls.crt'.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "keySecretRef": {
                      "description": "KeySecretRef to a key in a Secret resource containing client private key\nadded to the transport layer when communicating with the Vault server.\nIf no key for the Secret is specified, external-secret will default to 'tls.key'.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "version": {
                  "description": "Version is the Vault KV secret engine version. This can be either \"v1\" or\n\"v2\". Version defaults to \"v2\".",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "v1",
                    "v2"
                  ]
                }
              }
            },
            "webhook": {
              "description": "Webhook configures this store to sync secrets using a generic templated webhook",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "result",
                "url"
              ],
              "properties": {
                "body": {
                  "description": "Body",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "caBundle": {
                  "description": "PEM encoded CA bundle used to validate webhook server certificate. Only used\nif the Server URL is using HTTPS protocol. This parameter is ignored for\nplain HTTP protocol connection. If not set the system root certificates\nare used to validate the TLS connection.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "byte"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate webhook server certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key the value inside of the provider type to use, only used with \"Secret\" type",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "type": "string",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ]
                    }
                  }
                },
                "headers": {
                  "description": "Headers",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "method": {
                  "description": "Webhook Method",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "result": {
                  "description": "Result formatting",
                  "type": "object",
                  "properties": {
                    "jsonPath": {
                      "description": "Json path of return value",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "secrets": {
                  "description": "Secrets to fill in templates\nThese secrets will be passed to the templating function as key value pairs under the given name",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "secretRef"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of this secret in templates",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "Secret ref to fill in credentials",
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "The name of the Secret resource being referred to.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "namespace": {
                            "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "timeout": {
                  "description": "Timeout",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "url": {
                  "description": "Webhook url to call",
                  "type": "string"
                }
              }
            },
            "yandexcertificatemanager": {
              "description": "YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth"
              ],
              "properties": {
                "apiEndpoint": {
                  "description": "Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against Yandex Certificate Manager",
                  "type": "object",
                  "properties": {
                    "authorizedKeySecretRef": {
                      "description": "The authorized key used for authentication",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Yandex.Cloud server certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "certSecretRef": {
                      "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "yandexlockbox": {
              "description": "YandexLockbox configures this store to sync secrets using Yandex Lockbox provider",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "auth"
              ],
              "properties": {
                "apiEndpoint": {
                  "description": "Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "auth": {
                  "description": "Auth defines the information necessary to authenticate against Yandex Lockbox",
                  "type": "object",
                  "properties": {
                    "authorizedKeySecretRef": {
                      "description": "The authorized key used for authentication",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate Yandex.Cloud server certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "certSecretRef": {
                      "description": "A reference to a specific 'key' within a Secret resource,\nIn some instances, `key` is a required field.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be\ndefaulted, in others it may be required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "namespace": {
                          "description": "Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults\nto the namespace of the referent.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "refreshInterval": {
          "description": "Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.",
          "type": [
            "integer",
            "null"
          ]
        },
        "retrySettings": {
          "description": "Used to configure http retries if failed",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "maxRetries": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "retryInterval": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    },
    "status": {
      "description": "SecretStoreStatus defines the observed state of the SecretStore.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "capabilities": {
          "description": "SecretStoreCapabilities defines the possible operations a SecretStore can do.",
          "type": [
            "string",
            "null"
          ]
        },
        "conditions": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "external-secrets.io",
      "kind": "SecretStore",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}
