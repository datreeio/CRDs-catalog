{
  "description": "Connect is the Schema for the connects API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ConnectSpec defines the desired state of Connect",
      "properties": {
        "kafkaCluster": {
          "default": "kafka-cluster",
          "description": "The Kafka cluster to provision topics in.",
          "type": "string"
        },
        "scale": {
          "description": "Defines an optional autoscaling configuration.",
          "properties": {
            "maxReplicas": {
              "default": 1,
              "description": "MaxReplicas is the upper limit for the number of replicas to which the Autoscaler can scale up. It cannot be less that minReplicas.",
              "format": "int32",
              "type": "integer"
            },
            "minReplicas": {
              "default": 1,
              "description": "MinReplicas is the lower limit for the number of replicas to which the Autoscaler can scale down.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "maxReplicas"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "schemaRegistry": {
          "default": "http://schema-registry.kafka.svc.cluster.local",
          "description": "SchemaRegistry is the uri of a confluent compatible schema registry.",
          "type": "string"
        },
        "template": {
          "description": "Template describes the KafkaConnect and Topics that will be created.",
          "properties": {
            "metadata": {
              "description": "Metadata sets the resource's metadata, i.e. annotations and labels",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "spec": {
              "description": "Spec defines the specification of the KafkaConnect to create from the template.",
              "properties": {
                "authentication": {
                  "description": "Authentication configuration for Kafka Connect.",
                  "properties": {
                    "accessToken": {
                      "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                      "properties": {
                        "key": {
                          "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Kubernetes Secret containing the secret value.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "secretName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "accessTokenIsJwt": {
                      "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                      "type": "boolean"
                    },
                    "audience": {
                      "description": "OAuth audience to use when authenticating against the authorization server. Some authorization servers require the audience to be explicitly set. The possible values depend on how the authorization server is configured. By default, `audience` is not specified when performing the token endpoint request.",
                      "type": "string"
                    },
                    "certificateAndKey": {
                      "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                      "properties": {
                        "certificate": {
                          "description": "The name of the file certificate in the Secret.",
                          "type": "string"
                        },
                        "key": {
                          "description": "The name of the private key in the Secret.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Secret containing the certificate.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "certificate",
                        "key",
                        "secretName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "clientId": {
                      "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                      "type": "string"
                    },
                    "clientSecret": {
                      "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                      "properties": {
                        "key": {
                          "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Kubernetes Secret containing the secret value.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "secretName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "connectTimeoutSeconds": {
                      "description": "The connect timeout in seconds when connecting to authorization server. If not set, the effective connect timeout is 60 seconds.",
                      "type": "integer"
                    },
                    "disableTlsHostnameVerification": {
                      "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                      "type": "boolean"
                    },
                    "enableMetrics": {
                      "description": "Enable or disable OAuth metrics. Default value is `false`.",
                      "type": "boolean"
                    },
                    "httpRetries": {
                      "description": "The maximum number of retries to attempt if an initial HTTP request fails. If not set, the default is to not attempt any retries.",
                      "type": "integer"
                    },
                    "httpRetryPauseMs": {
                      "description": "The pause to take before retrying a failed HTTP request. If not set, the default is to not pause at all but to immediately repeat a request.",
                      "type": "integer"
                    },
                    "maxTokenExpirySeconds": {
                      "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                      "type": "integer"
                    },
                    "passwordSecret": {
                      "description": "Reference to the `Secret` which holds the password.",
                      "properties": {
                        "password": {
                          "description": "The name of the key in the Secret under which the password is stored.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Secret containing the password.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "password",
                        "secretName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "readTimeoutSeconds": {
                      "description": "The read timeout in seconds when connecting to authorization server. If not set, the effective read timeout is 60 seconds.",
                      "type": "integer"
                    },
                    "refreshToken": {
                      "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                      "properties": {
                        "key": {
                          "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Kubernetes Secret containing the secret value.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "secretName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "scope": {
                      "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                      "type": "string"
                    },
                    "tlsTrustedCertificates": {
                      "description": "Trusted certificates for TLS connection to the OAuth server.",
                      "items": {
                        "properties": {
                          "certificate": {
                            "description": "The name of the file certificate in the Secret.",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "The name of the Secret containing the certificate.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "secretName"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "tokenEndpointUri": {
                      "description": "Authorization server token endpoint URI.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Authentication type. Currently the supported types are `tls`, `scram-sha-256`, `scram-sha-512`, `plain`, and 'oauth'. `scram-sha-256` and `scram-sha-512` types use SASL SCRAM-SHA-256 and SASL SCRAM-SHA-512 Authentication, respectively. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                      "type": "string"
                    },
                    "username": {
                      "description": "Username used for the authentication.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "bootstrapServers": {
                  "description": "Bootstrap servers to connect to. This should be given as a comma separated list of _<hostname>_:_<port>_ pairs.",
                  "type": "string"
                },
                "build": {
                  "description": "Configures how the Connect container image should be built. Optional.",
                  "properties": {
                    "output": {
                      "description": "Configures where should the newly built image be stored. Required.",
                      "properties": {
                        "additionalKanikoOptions": {
                          "description": "Configures additional options which will be passed to the Kaniko executor when building the new Connect image. Allowed options are: --customPlatform, --insecure, --insecure-pull, --insecure-registry, --log-format, --log-timestamp, --registry-mirror, --reproducible, --single-snapshot, --skip-tls-verify, --skip-tls-verify-pull, --skip-tls-verify-registry, --verbosity, --snapshotMode, --use-new-run. These options will be used only on Kubernetes where the Kaniko executor is used. They will be ignored on OpenShift. The options are described in the link:https://github.com/GoogleContainerTools/kaniko[Kaniko GitHub repository^]. Changing this field does not trigger new build of the Kafka Connect image.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "image": {
                          "description": "The name of the image which will be built. Required.",
                          "type": "string"
                        },
                        "pushSecret": {
                          "description": "Container Registry Secret with the credentials for pushing the newly built image.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Output type. Must be either `docker` for pushing the newly build image to Docker compatible registry or `imagestream` for pushing the image to OpenShift ImageStream. Required.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "image",
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "plugins": {
                      "description": "List of connector plugins which should be added to the Kafka Connect. Required.",
                      "items": {
                        "properties": {
                          "artifacts": {
                            "description": "List of artifacts which belong to this connector plugin. Required.",
                            "items": {
                              "properties": {
                                "artifact": {
                                  "description": "Maven artifact id. Applicable to the `maven` artifact type only.",
                                  "type": "string"
                                },
                                "fileName": {
                                  "description": "Name under which the artifact will be stored.",
                                  "type": "string"
                                },
                                "group": {
                                  "description": "Maven group id. Applicable to the `maven` artifact type only.",
                                  "type": "string"
                                },
                                "insecure": {
                                  "description": "By default, connections using TLS are verified to check they are secure. The server certificate used must be valid, trusted, and contain the server name. By setting this option to `true`, all TLS verification is disabled and the artifact will be downloaded, even when the server is considered insecure.",
                                  "type": "boolean"
                                },
                                "repository": {
                                  "description": "Maven repository to download the artifact from. Applicable to the `maven` artifact type only.",
                                  "type": "string"
                                },
                                "sha512sum": {
                                  "description": "SHA512 checksum of the artifact. Optional. If specified, the checksum will be verified while building the new container. If not specified, the downloaded artifact will not be verified. Not applicable to the `maven` artifact type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Artifact type. Currently, the supported artifact types are `tgz`, `jar`, `zip`, `other` and `maven`.",
                                  "type": "string"
                                },
                                "url": {
                                  "description": "URL of the artifact which will be downloaded. Strimzi does not do any security scanning of the downloaded artifacts. For security reasons, you should first verify the artifacts manually and configure the checksum verification to make sure the same artifact is used in the automated build. Required for `jar`, `zip`, `tgz` and `other` artifacts. Not applicable to the `maven` artifact type.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Maven version number. Applicable to the `maven` artifact type only.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "The unique name of the connector plugin. Will be used to generate the path where the connector artifacts will be stored. The name has to be unique within the KafkaConnect resource. The name has to follow the following pattern: `^[a-z][-_a-z0-9]*[a-z]$`. Required.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "artifacts",
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "resources": {
                      "description": "CPU and memory resources to reserve for the build.",
                      "properties": {
                        "limits": {
                          "description": "Limits corresponds to the JSON schema field \"limits\".",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "requests": {
                          "description": "Requests corresponds to the JSON schema field \"requests\".",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "output",
                    "plugins"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "clientRackInitImage": {
                  "description": "The image of the init container used for initializing the `client.rack`.",
                  "type": "string"
                },
                "config": {
                  "description": "The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "externalConfiguration": {
                  "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
                  "properties": {
                    "env": {
                      "description": "Makes data from a Secret or ConfigMap available in the Kafka Connect pods as environment variables.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Reference to a key in a ConfigMap.",
                                "properties": {
                                  "key": {
                                    "description": "Key corresponds to the JSON schema field \"key\".",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name corresponds to the JSON schema field \"name\".",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Optional corresponds to the JSON schema field \"optional\".",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "secretKeyRef": {
                                "description": "Reference to a key in a Secret.",
                                "properties": {
                                  "key": {
                                    "description": "Key corresponds to the JSON schema field \"key\".",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name corresponds to the JSON schema field \"name\".",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Optional corresponds to the JSON schema field \"optional\".",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "name",
                          "valueFrom"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "volumes": {
                      "description": "Makes data from a Secret or ConfigMap available in the Kafka Connect pods as volumes.",
                      "items": {
                        "properties": {
                          "configMap": {
                            "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                            "properties": {
                              "defaultMode": {
                                "description": "DefaultMode corresponds to the JSON schema field \"defaultMode\".",
                                "type": "integer"
                              },
                              "items": {
                                "description": "Items corresponds to the JSON schema field \"items\".",
                                "items": {
                                  "properties": {
                                    "key": {
                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                      "type": "string"
                                    },
                                    "mode": {
                                      "description": "Mode corresponds to the JSON schema field \"mode\".",
                                      "type": "integer"
                                    },
                                    "path": {
                                      "description": "Path corresponds to the JSON schema field \"path\".",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "name": {
                                "description": "Name corresponds to the JSON schema field \"name\".",
                                "type": "string"
                              },
                              "optional": {
                                "description": "Optional corresponds to the JSON schema field \"optional\".",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name of the volume which will be added to the Kafka Connect pods.",
                            "type": "string"
                          },
                          "secret": {
                            "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                            "properties": {
                              "defaultMode": {
                                "description": "DefaultMode corresponds to the JSON schema field \"defaultMode\".",
                                "type": "integer"
                              },
                              "items": {
                                "description": "Items corresponds to the JSON schema field \"items\".",
                                "items": {
                                  "properties": {
                                    "key": {
                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                      "type": "string"
                                    },
                                    "mode": {
                                      "description": "Mode corresponds to the JSON schema field \"mode\".",
                                      "type": "integer"
                                    },
                                    "path": {
                                      "description": "Path corresponds to the JSON schema field \"path\".",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "optional": {
                                "description": "Optional corresponds to the JSON schema field \"optional\".",
                                "type": "boolean"
                              },
                              "secretName": {
                                "description": "SecretName corresponds to the JSON schema field \"secretName\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "image": {
                  "description": "The docker image for the pods.",
                  "type": "string"
                },
                "jmxOptions": {
                  "description": "JMX Options.",
                  "properties": {
                    "authentication": {
                      "description": "Authentication configuration for connecting to the JMX port.",
                      "properties": {
                        "type": {
                          "description": "Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "jvmOptions": {
                  "description": "JVM Options for pods.",
                  "properties": {
                    "-XX": {
                      "description": "A map of -XX options to the JVM.",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "-Xms": {
                      "description": "-Xms option to to the JVM.",
                      "type": "string"
                    },
                    "-Xmx": {
                      "description": "-Xmx option to to the JVM.",
                      "type": "string"
                    },
                    "gcLoggingEnabled": {
                      "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                      "type": "boolean"
                    },
                    "javaSystemProperties": {
                      "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The system property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The system property value.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "livenessProbe": {
                  "description": "Pod liveness checking.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "logging": {
                  "description": "Logging configuration for Kafka Connect.",
                  "properties": {
                    "loggers": {
                      "description": "A Map from logger name to logger level.",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "type": {
                      "description": "Logging type, must be either 'inline' or 'external'.",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "`ConfigMap` entry where the logging configuration is stored.",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Reference to the key in the ConfigMap containing the configuration.",
                          "properties": {
                            "key": {
                              "description": "Key corresponds to the JSON schema field \"key\".",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name corresponds to the JSON schema field \"name\".",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Optional corresponds to the JSON schema field \"optional\".",
                              "type": "boolean"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "metricsConfig": {
                  "description": "Metrics configuration.",
                  "properties": {
                    "type": {
                      "description": "Metrics type. Only 'jmxPrometheusExporter' supported currently.",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "ConfigMap entry where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Reference to the key in the ConfigMap containing the configuration.",
                          "properties": {
                            "key": {
                              "description": "Key corresponds to the JSON schema field \"key\".",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name corresponds to the JSON schema field \"name\".",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Optional corresponds to the JSON schema field \"optional\".",
                              "type": "boolean"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "type",
                    "valueFrom"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "rack": {
                  "description": "Configuration of the node label which will be used as the `client.rack` consumer configuration.",
                  "properties": {
                    "topologyKey": {
                      "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set a broker's `broker.rack` config, and the `client.rack` config for Kafka Connect or MirrorMaker 2.0.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "topologyKey"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "readinessProbe": {
                  "description": "Pod readiness checking.",
                  "properties": {
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                      "type": "integer"
                    },
                    "initialDelaySeconds": {
                      "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "replicas": {
                  "description": "The number of pods in the Kafka Connect group.",
                  "type": "integer"
                },
                "resources": {
                  "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
                  "properties": {
                    "limits": {
                      "description": "Limits corresponds to the JSON schema field \"limits\".",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "requests": {
                      "description": "Requests corresponds to the JSON schema field \"requests\".",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "template": {
                  "description": "Template for Kafka Connect and Kafka Mirror Maker 2 resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
                  "properties": {
                    "apiService": {
                      "description": "Template for Kafka Connect API `Service`.",
                      "properties": {
                        "ipFamilies": {
                          "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "ipFamilyPolicy": {
                          "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.",
                          "type": "string"
                        },
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "buildConfig": {
                      "description": "Template for the Kafka Connect BuildConfig used to build new container images. The BuildConfig is used only on OpenShift.",
                      "properties": {
                        "metadata": {
                          "description": "Metadata to apply to the `PodDisruptionBudgetTemplate` resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "pullSecret": {
                          "description": "Container Registry Secret with the credentials for pulling the base image.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "buildContainer": {
                      "description": "Template for the Kafka Connect Build container. The build container is used only on Kubernetes.",
                      "properties": {
                        "env": {
                          "description": "Environment variables which should be applied to the container.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The environment variable key.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The environment variable value.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "Security context for the container.",
                          "properties": {
                            "allowPrivilegeEscalation": {
                              "description": "AllowPrivilegeEscalation corresponds to the JSON schema field \"allowPrivilegeEscalation\".",
                              "type": "boolean"
                            },
                            "capabilities": {
                              "description": "Capabilities corresponds to the JSON schema field \"capabilities\".",
                              "properties": {
                                "add": {
                                  "description": "Add corresponds to the JSON schema field \"add\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "drop": {
                                  "description": "Drop corresponds to the JSON schema field \"drop\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "privileged": {
                              "description": "Privileged corresponds to the JSON schema field \"privileged\".",
                              "type": "boolean"
                            },
                            "procMount": {
                              "description": "ProcMount corresponds to the JSON schema field \"procMount\".",
                              "type": "string"
                            },
                            "readOnlyRootFilesystem": {
                              "description": "ReadOnlyRootFilesystem corresponds to the JSON schema field \"readOnlyRootFilesystem\".",
                              "type": "boolean"
                            },
                            "runAsGroup": {
                              "description": "RunAsGroup corresponds to the JSON schema field \"runAsGroup\".",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "RunAsNonRoot corresponds to the JSON schema field \"runAsNonRoot\".",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "RunAsUser corresponds to the JSON schema field \"runAsUser\".",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SeLinuxOptions corresponds to the JSON schema field \"seLinuxOptions\".",
                              "properties": {
                                "level": {
                                  "description": "Level corresponds to the JSON schema field \"level\".",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role corresponds to the JSON schema field \"role\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User corresponds to the JSON schema field \"user\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfile corresponds to the JSON schema field \"seccompProfile\".",
                              "properties": {
                                "localhostProfile": {
                                  "description": "LocalhostProfile corresponds to the JSON schema field \"localhostProfile\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "windowsOptions": {
                              "description": "WindowsOptions corresponds to the JSON schema field \"windowsOptions\".",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GmsaCredentialSpec corresponds to the JSON schema field \"gmsaCredentialSpec\".",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GmsaCredentialSpecName corresponds to the JSON schema field \"gmsaCredentialSpecName\".",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess corresponds to the JSON schema field \"hostProcess\".",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "RunAsUserName corresponds to the JSON schema field \"runAsUserName\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "buildPod": {
                      "description": "Template for Kafka Connect Build `Pods`. The build pod is used only on Kubernetes.",
                      "properties": {
                        "affinity": {
                          "description": "The pod's affinity rules.",
                          "properties": {
                            "nodeAffinity": {
                              "description": "NodeAffinity corresponds to the JSON schema field \"nodeAffinity\".",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"preferredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "preference": {
                                        "description": "Preference corresponds to the JSON schema field \"preference\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "description": "MatchFields corresponds to the JSON schema field \"matchFields\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "description": "Weight corresponds to the JSON schema field \"weight\".",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"requiredDuringSchedulingIgnoredDuringExecution\".",
                                  "properties": {
                                    "nodeSelectorTerms": {
                                      "description": "NodeSelectorTerms corresponds to the JSON schema field \"nodeSelectorTerms\".",
                                      "items": {
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "description": "MatchFields corresponds to the JSON schema field \"matchFields\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAffinity": {
                              "description": "PodAffinity corresponds to the JSON schema field \"podAffinity\".",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"preferredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTerm corresponds to the JSON schema field \"podAffinityTerm\".",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaceSelector": {
                                            "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "description": "Weight corresponds to the JSON schema field \"weight\".",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"requiredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaceSelector": {
                                        "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAntiAffinity": {
                              "description": "PodAntiAffinity corresponds to the JSON schema field \"podAntiAffinity\".",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"preferredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTerm corresponds to the JSON schema field \"podAffinityTerm\".",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaceSelector": {
                                            "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "description": "Weight corresponds to the JSON schema field \"weight\".",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"requiredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaceSelector": {
                                        "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "enableServiceLinks": {
                          "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                          "type": "boolean"
                        },
                        "hostAliases": {
                          "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                          "items": {
                            "properties": {
                              "hostnames": {
                                "description": "Hostnames corresponds to the JSON schema field \"hostnames\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ip": {
                                "description": "Ip corresponds to the JSON schema field \"ip\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "imagePullSecrets": {
                          "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Name corresponds to the JSON schema field \"name\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "priorityClassName": {
                          "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                          "type": "string"
                        },
                        "schedulerName": {
                          "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                          "type": "string"
                        },
                        "securityContext": {
                          "description": "Configures pod-level security attributes and common container settings.",
                          "properties": {
                            "fsGroup": {
                              "description": "FsGroup corresponds to the JSON schema field \"fsGroup\".",
                              "type": "integer"
                            },
                            "fsGroupChangePolicy": {
                              "description": "FsGroupChangePolicy corresponds to the JSON schema field \"fsGroupChangePolicy\".",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "description": "RunAsGroup corresponds to the JSON schema field \"runAsGroup\".",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "RunAsNonRoot corresponds to the JSON schema field \"runAsNonRoot\".",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "RunAsUser corresponds to the JSON schema field \"runAsUser\".",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SeLinuxOptions corresponds to the JSON schema field \"seLinuxOptions\".",
                              "properties": {
                                "level": {
                                  "description": "Level corresponds to the JSON schema field \"level\".",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role corresponds to the JSON schema field \"role\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User corresponds to the JSON schema field \"user\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfile corresponds to the JSON schema field \"seccompProfile\".",
                              "properties": {
                                "localhostProfile": {
                                  "description": "LocalhostProfile corresponds to the JSON schema field \"localhostProfile\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "supplementalGroups": {
                              "description": "SupplementalGroups corresponds to the JSON schema field \"supplementalGroups\".",
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "sysctls": {
                              "description": "Sysctls corresponds to the JSON schema field \"sysctls\".",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "Name corresponds to the JSON schema field \"name\".",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value corresponds to the JSON schema field \"value\".",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "windowsOptions": {
                              "description": "WindowsOptions corresponds to the JSON schema field \"windowsOptions\".",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GmsaCredentialSpec corresponds to the JSON schema field \"gmsaCredentialSpec\".",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GmsaCredentialSpecName corresponds to the JSON schema field \"gmsaCredentialSpecName\".",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess corresponds to the JSON schema field \"hostProcess\".",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "RunAsUserName corresponds to the JSON schema field \"runAsUserName\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                          "type": "integer"
                        },
                        "tmpDirSizeLimit": {
                          "description": "Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.",
                          "type": "string"
                        },
                        "tolerations": {
                          "description": "The pod's tolerations.",
                          "items": {
                            "properties": {
                              "effect": {
                                "description": "Effect corresponds to the JSON schema field \"effect\".",
                                "type": "string"
                              },
                              "key": {
                                "description": "Key corresponds to the JSON schema field \"key\".",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Operator corresponds to the JSON schema field \"operator\".",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "description": "TolerationSeconds corresponds to the JSON schema field \"tolerationSeconds\".",
                                "type": "integer"
                              },
                              "value": {
                                "description": "Value corresponds to the JSON schema field \"value\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "topologySpreadConstraints": {
                          "description": "The pod's topology spread constraints.",
                          "items": {
                            "properties": {
                              "labelSelector": {
                                "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                    "items": {
                                      "properties": {
                                        "key": {
                                          "description": "Key corresponds to the JSON schema field \"key\".",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Operator corresponds to the JSON schema field \"operator\".",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "Values corresponds to the JSON schema field \"values\".",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys corresponds to the JSON schema field \"matchLabelKeys\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "maxSkew": {
                                "description": "MaxSkew corresponds to the JSON schema field \"maxSkew\".",
                                "type": "integer"
                              },
                              "minDomains": {
                                "description": "MinDomains corresponds to the JSON schema field \"minDomains\".",
                                "type": "integer"
                              },
                              "nodeAffinityPolicy": {
                                "description": "NodeAffinityPolicy corresponds to the JSON schema field \"nodeAffinityPolicy\".",
                                "type": "string"
                              },
                              "nodeTaintsPolicy": {
                                "description": "NodeTaintsPolicy corresponds to the JSON schema field \"nodeTaintsPolicy\".",
                                "type": "string"
                              },
                              "topologyKey": {
                                "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                "type": "string"
                              },
                              "whenUnsatisfiable": {
                                "description": "WhenUnsatisfiable corresponds to the JSON schema field \"whenUnsatisfiable\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "buildServiceAccount": {
                      "description": "Template for the Kafka Connect Build service account.",
                      "properties": {
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "clusterRoleBinding": {
                      "description": "Template for the Kafka Connect ClusterRoleBinding.",
                      "properties": {
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "connectContainer": {
                      "description": "Template for the Kafka Connect container.",
                      "properties": {
                        "env": {
                          "description": "Environment variables which should be applied to the container.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The environment variable key.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The environment variable value.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "Security context for the container.",
                          "properties": {
                            "allowPrivilegeEscalation": {
                              "description": "AllowPrivilegeEscalation corresponds to the JSON schema field \"allowPrivilegeEscalation\".",
                              "type": "boolean"
                            },
                            "capabilities": {
                              "description": "Capabilities corresponds to the JSON schema field \"capabilities\".",
                              "properties": {
                                "add": {
                                  "description": "Add corresponds to the JSON schema field \"add\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "drop": {
                                  "description": "Drop corresponds to the JSON schema field \"drop\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "privileged": {
                              "description": "Privileged corresponds to the JSON schema field \"privileged\".",
                              "type": "boolean"
                            },
                            "procMount": {
                              "description": "ProcMount corresponds to the JSON schema field \"procMount\".",
                              "type": "string"
                            },
                            "readOnlyRootFilesystem": {
                              "description": "ReadOnlyRootFilesystem corresponds to the JSON schema field \"readOnlyRootFilesystem\".",
                              "type": "boolean"
                            },
                            "runAsGroup": {
                              "description": "RunAsGroup corresponds to the JSON schema field \"runAsGroup\".",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "RunAsNonRoot corresponds to the JSON schema field \"runAsNonRoot\".",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "RunAsUser corresponds to the JSON schema field \"runAsUser\".",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SeLinuxOptions corresponds to the JSON schema field \"seLinuxOptions\".",
                              "properties": {
                                "level": {
                                  "description": "Level corresponds to the JSON schema field \"level\".",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role corresponds to the JSON schema field \"role\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User corresponds to the JSON schema field \"user\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfile corresponds to the JSON schema field \"seccompProfile\".",
                              "properties": {
                                "localhostProfile": {
                                  "description": "LocalhostProfile corresponds to the JSON schema field \"localhostProfile\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "windowsOptions": {
                              "description": "WindowsOptions corresponds to the JSON schema field \"windowsOptions\".",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GmsaCredentialSpec corresponds to the JSON schema field \"gmsaCredentialSpec\".",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GmsaCredentialSpecName corresponds to the JSON schema field \"gmsaCredentialSpecName\".",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess corresponds to the JSON schema field \"hostProcess\".",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "RunAsUserName corresponds to the JSON schema field \"runAsUserName\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "deployment": {
                      "description": "Template for Kafka Connect `Deployment`.",
                      "properties": {
                        "deploymentStrategy": {
                          "description": "Pod replacement strategy for deployment configuration changes. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.",
                          "type": "string"
                        },
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "headlessService": {
                      "description": "Template for Kafka Connect headless `Service`.",
                      "properties": {
                        "ipFamilies": {
                          "description": "Specifies the IP Families used by the service. Available options are `IPv4` and `IPv6. If unspecified, Kubernetes will choose the default value based on the `ipFamilyPolicy` setting. Available on Kubernetes 1.20 and newer.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "ipFamilyPolicy": {
                          "description": "Specifies the IP Family Policy used by the service. Available options are `SingleStack`, `PreferDualStack` and `RequireDualStack`. `SingleStack` is for a single IP family. `PreferDualStack` is for two IP families on dual-stack configured clusters or a single IP family on single-stack clusters. `RequireDualStack` fails unless there are two IP families on dual-stack configured clusters. If unspecified, Kubernetes will choose the default value based on the service type. Available on Kubernetes 1.20 and newer.",
                          "type": "string"
                        },
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "initContainer": {
                      "description": "Template for the Kafka init container.",
                      "properties": {
                        "env": {
                          "description": "Environment variables which should be applied to the container.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The environment variable key.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The environment variable value.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "securityContext": {
                          "description": "Security context for the container.",
                          "properties": {
                            "allowPrivilegeEscalation": {
                              "description": "AllowPrivilegeEscalation corresponds to the JSON schema field \"allowPrivilegeEscalation\".",
                              "type": "boolean"
                            },
                            "capabilities": {
                              "description": "Capabilities corresponds to the JSON schema field \"capabilities\".",
                              "properties": {
                                "add": {
                                  "description": "Add corresponds to the JSON schema field \"add\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "drop": {
                                  "description": "Drop corresponds to the JSON schema field \"drop\".",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "privileged": {
                              "description": "Privileged corresponds to the JSON schema field \"privileged\".",
                              "type": "boolean"
                            },
                            "procMount": {
                              "description": "ProcMount corresponds to the JSON schema field \"procMount\".",
                              "type": "string"
                            },
                            "readOnlyRootFilesystem": {
                              "description": "ReadOnlyRootFilesystem corresponds to the JSON schema field \"readOnlyRootFilesystem\".",
                              "type": "boolean"
                            },
                            "runAsGroup": {
                              "description": "RunAsGroup corresponds to the JSON schema field \"runAsGroup\".",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "RunAsNonRoot corresponds to the JSON schema field \"runAsNonRoot\".",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "RunAsUser corresponds to the JSON schema field \"runAsUser\".",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SeLinuxOptions corresponds to the JSON schema field \"seLinuxOptions\".",
                              "properties": {
                                "level": {
                                  "description": "Level corresponds to the JSON schema field \"level\".",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role corresponds to the JSON schema field \"role\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User corresponds to the JSON schema field \"user\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfile corresponds to the JSON schema field \"seccompProfile\".",
                              "properties": {
                                "localhostProfile": {
                                  "description": "LocalhostProfile corresponds to the JSON schema field \"localhostProfile\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "windowsOptions": {
                              "description": "WindowsOptions corresponds to the JSON schema field \"windowsOptions\".",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GmsaCredentialSpec corresponds to the JSON schema field \"gmsaCredentialSpec\".",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GmsaCredentialSpecName corresponds to the JSON schema field \"gmsaCredentialSpecName\".",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess corresponds to the JSON schema field \"hostProcess\".",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "RunAsUserName corresponds to the JSON schema field \"runAsUserName\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "jmxSecret": {
                      "description": "Template for Secret of the Kafka Connect Cluster JMX authentication.",
                      "properties": {
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "pod": {
                      "description": "Template for Kafka Connect `Pods`.",
                      "properties": {
                        "affinity": {
                          "description": "The pod's affinity rules.",
                          "properties": {
                            "nodeAffinity": {
                              "description": "NodeAffinity corresponds to the JSON schema field \"nodeAffinity\".",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"preferredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "preference": {
                                        "description": "Preference corresponds to the JSON schema field \"preference\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "description": "MatchFields corresponds to the JSON schema field \"matchFields\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "description": "Weight corresponds to the JSON schema field \"weight\".",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"requiredDuringSchedulingIgnoredDuringExecution\".",
                                  "properties": {
                                    "nodeSelectorTerms": {
                                      "description": "NodeSelectorTerms corresponds to the JSON schema field \"nodeSelectorTerms\".",
                                      "items": {
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchFields": {
                                            "description": "MatchFields corresponds to the JSON schema field \"matchFields\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAffinity": {
                              "description": "PodAffinity corresponds to the JSON schema field \"podAffinity\".",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"preferredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTerm corresponds to the JSON schema field \"podAffinityTerm\".",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaceSelector": {
                                            "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "description": "Weight corresponds to the JSON schema field \"weight\".",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"requiredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaceSelector": {
                                        "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "podAntiAffinity": {
                              "description": "PodAntiAffinity corresponds to the JSON schema field \"podAntiAffinity\".",
                              "properties": {
                                "preferredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "PreferredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"preferredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "podAffinityTerm": {
                                        "description": "PodAffinityTerm corresponds to the JSON schema field \"podAffinityTerm\".",
                                        "properties": {
                                          "labelSelector": {
                                            "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaceSelector": {
                                            "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                                "items": {
                                                  "properties": {
                                                    "key": {
                                                      "description": "Key corresponds to the JSON schema field \"key\".",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "Values corresponds to the JSON schema field \"values\".",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object",
                                                  "additionalProperties": false
                                                },
                                                "type": "array"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                                "x-kubernetes-preserve-unknown-fields": true
                                              }
                                            },
                                            "type": "object",
                                            "additionalProperties": false
                                          },
                                          "namespaces": {
                                            "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                            "items": {
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "topologyKey": {
                                            "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "weight": {
                                        "description": "Weight corresponds to the JSON schema field \"weight\".",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                  "description": "RequiredDuringSchedulingIgnoredDuringExecution corresponds to the JSON schema field \"requiredDuringSchedulingIgnoredDuringExecution\".",
                                  "items": {
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaceSelector": {
                                        "description": "NamespaceSelector corresponds to the JSON schema field \"namespaceSelector\".",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "Key corresponds to the JSON schema field \"key\".",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "Operator corresponds to the JSON schema field \"operator\".",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "Values corresponds to the JSON schema field \"values\".",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "matchLabels": {
                                            "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "namespaces": {
                                        "description": "Namespaces corresponds to the JSON schema field \"namespaces\".",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "topologyKey": {
                                        "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "enableServiceLinks": {
                          "description": "Indicates whether information about services should be injected into Pod's environment variables.",
                          "type": "boolean"
                        },
                        "hostAliases": {
                          "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.",
                          "items": {
                            "properties": {
                              "hostnames": {
                                "description": "Hostnames corresponds to the JSON schema field \"hostnames\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "ip": {
                                "description": "Ip corresponds to the JSON schema field \"ip\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "imagePullSecrets": {
                          "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "Name corresponds to the JSON schema field \"name\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "priorityClassName": {
                          "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                          "type": "string"
                        },
                        "schedulerName": {
                          "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                          "type": "string"
                        },
                        "securityContext": {
                          "description": "Configures pod-level security attributes and common container settings.",
                          "properties": {
                            "fsGroup": {
                              "description": "FsGroup corresponds to the JSON schema field \"fsGroup\".",
                              "type": "integer"
                            },
                            "fsGroupChangePolicy": {
                              "description": "FsGroupChangePolicy corresponds to the JSON schema field \"fsGroupChangePolicy\".",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "description": "RunAsGroup corresponds to the JSON schema field \"runAsGroup\".",
                              "type": "integer"
                            },
                            "runAsNonRoot": {
                              "description": "RunAsNonRoot corresponds to the JSON schema field \"runAsNonRoot\".",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "RunAsUser corresponds to the JSON schema field \"runAsUser\".",
                              "type": "integer"
                            },
                            "seLinuxOptions": {
                              "description": "SeLinuxOptions corresponds to the JSON schema field \"seLinuxOptions\".",
                              "properties": {
                                "level": {
                                  "description": "Level corresponds to the JSON schema field \"level\".",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role corresponds to the JSON schema field \"role\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User corresponds to the JSON schema field \"user\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "seccompProfile": {
                              "description": "SeccompProfile corresponds to the JSON schema field \"seccompProfile\".",
                              "properties": {
                                "localhostProfile": {
                                  "description": "LocalhostProfile corresponds to the JSON schema field \"localhostProfile\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type corresponds to the JSON schema field \"type\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "supplementalGroups": {
                              "description": "SupplementalGroups corresponds to the JSON schema field \"supplementalGroups\".",
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "sysctls": {
                              "description": "Sysctls corresponds to the JSON schema field \"sysctls\".",
                              "items": {
                                "properties": {
                                  "name": {
                                    "description": "Name corresponds to the JSON schema field \"name\".",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value corresponds to the JSON schema field \"value\".",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "windowsOptions": {
                              "description": "WindowsOptions corresponds to the JSON schema field \"windowsOptions\".",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GmsaCredentialSpec corresponds to the JSON schema field \"gmsaCredentialSpec\".",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GmsaCredentialSpecName corresponds to the JSON schema field \"gmsaCredentialSpecName\".",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess corresponds to the JSON schema field \"hostProcess\".",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "RunAsUserName corresponds to the JSON schema field \"runAsUserName\".",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                          "type": "integer"
                        },
                        "tmpDirSizeLimit": {
                          "description": "Defines the total amount (for example `1Gi`) of local storage required for temporary EmptyDir volume (`/tmp`). Default value is `5Mi`.",
                          "type": "string"
                        },
                        "tolerations": {
                          "description": "The pod's tolerations.",
                          "items": {
                            "properties": {
                              "effect": {
                                "description": "Effect corresponds to the JSON schema field \"effect\".",
                                "type": "string"
                              },
                              "key": {
                                "description": "Key corresponds to the JSON schema field \"key\".",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Operator corresponds to the JSON schema field \"operator\".",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "description": "TolerationSeconds corresponds to the JSON schema field \"tolerationSeconds\".",
                                "type": "integer"
                              },
                              "value": {
                                "description": "Value corresponds to the JSON schema field \"value\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "topologySpreadConstraints": {
                          "description": "The pod's topology spread constraints.",
                          "items": {
                            "properties": {
                              "labelSelector": {
                                "description": "LabelSelector corresponds to the JSON schema field \"labelSelector\".",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "MatchExpressions corresponds to the JSON schema field \"matchExpressions\".",
                                    "items": {
                                      "properties": {
                                        "key": {
                                          "description": "Key corresponds to the JSON schema field \"key\".",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Operator corresponds to the JSON schema field \"operator\".",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "Values corresponds to the JSON schema field \"values\".",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels corresponds to the JSON schema field \"matchLabels\".",
                                    "x-kubernetes-preserve-unknown-fields": true
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "matchLabelKeys": {
                                "description": "MatchLabelKeys corresponds to the JSON schema field \"matchLabelKeys\".",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "maxSkew": {
                                "description": "MaxSkew corresponds to the JSON schema field \"maxSkew\".",
                                "type": "integer"
                              },
                              "minDomains": {
                                "description": "MinDomains corresponds to the JSON schema field \"minDomains\".",
                                "type": "integer"
                              },
                              "nodeAffinityPolicy": {
                                "description": "NodeAffinityPolicy corresponds to the JSON schema field \"nodeAffinityPolicy\".",
                                "type": "string"
                              },
                              "nodeTaintsPolicy": {
                                "description": "NodeTaintsPolicy corresponds to the JSON schema field \"nodeTaintsPolicy\".",
                                "type": "string"
                              },
                              "topologyKey": {
                                "description": "TopologyKey corresponds to the JSON schema field \"topologyKey\".",
                                "type": "string"
                              },
                              "whenUnsatisfiable": {
                                "description": "WhenUnsatisfiable corresponds to the JSON schema field \"whenUnsatisfiable\".",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podDisruptionBudget": {
                      "description": "Template for Kafka Connect `PodDisruptionBudget`.",
                      "properties": {
                        "maxUnavailable": {
                          "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                          "type": "integer"
                        },
                        "metadata": {
                          "description": "Metadata to apply to the `PodDisruptionBudgetTemplate` resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podSet": {
                      "description": "Template for Kafka Connect `StrimziPodSet` resource.",
                      "properties": {
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceAccount": {
                      "description": "Template for the Kafka Connect service account.",
                      "properties": {
                        "metadata": {
                          "description": "Metadata applied to the resource.",
                          "properties": {
                            "annotations": {
                              "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "labels": {
                              "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                              "x-kubernetes-preserve-unknown-fields": true
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tls": {
                  "description": "TLS configuration.",
                  "properties": {
                    "trustedCertificates": {
                      "description": "Trusted certificates for TLS connection.",
                      "items": {
                        "properties": {
                          "certificate": {
                            "description": "The name of the file certificate in the Secret.",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "The name of the Secret containing the certificate.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "certificate",
                          "secretName"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tracing": {
                  "description": "The configuration of tracing in Kafka Connect.",
                  "properties": {
                    "type": {
                      "description": "Type of the tracing used. Currently the only supported types are `jaeger` for OpenTracing (Jaeger) tracing and `opentelemetry` for OpenTelemetry tracing. The OpenTracing (Jaeger) tracing is deprecated.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "version": {
                  "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                  "type": "string"
                }
              },
              "required": [
                "bootstrapServers"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "topics": {
              "description": "Topics defines the configuration of the KafkaTopics.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                  "type": "object"
                },
                "config": {
                  "description": "The topic configuration.",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "existing": {
                  "description": "Whether the KafkaTopics already exist, and should not be created.",
                  "type": "boolean"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                  "type": "object"
                },
                "namespace": {
                  "default": "kafka",
                  "description": "Namespace in which to create the TopicProvider",
                  "maxLength": 63,
                  "type": "string"
                },
                "partitions": {
                  "description": "The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning. When absent this will default to the broker configuration for `num.partitions`.",
                  "format": "int32",
                  "type": "integer"
                },
                "replicas": {
                  "description": "The number of replicas the topic should have. When absent this will default to the broker configuration for `default.replication.factor`.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ConnectStatus defines the observed state of Connect",
      "properties": {
        "HPAReplicas": {
          "description": "HPAReplicas the number of non-terminated replicas that are active",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Conditions represents the observations of Connects current state. Known .status.conditions.type are: \"Ready\" and \"Degraded\"",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "resources": {
          "additionalProperties": {
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "conditions": {
                "description": "Conditions represents the observations of the current state of any resources owned by the resource. Known .status.conditions.type are: \"Ready\" and \"Degraded\"",
                "items": {
                  "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
                  "properties": {
                    "lastTransitionTime": {
                      "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "message": {
                      "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                      "maxLength": 32768,
                      "type": "string"
                    },
                    "observedGeneration": {
                      "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                      "format": "int64",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "reason": {
                      "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array",
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "description": "Resources represent the observations of the current state of any resources owned by the Connect resource.",
          "type": "object"
        },
        "selector": {
          "description": "Selector that identifies the pods that are active",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
