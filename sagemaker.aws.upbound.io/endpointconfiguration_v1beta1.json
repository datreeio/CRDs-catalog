{
  "description": "EndpointConfiguration is the Schema for the EndpointConfigurations API. Provides a SageMaker Endpoint Configuration resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EndpointConfigurationSpec defines the desired state of EndpointConfiguration",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "asyncInferenceConfig": {
              "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
              "items": {
                "properties": {
                  "clientConfig": {
                    "description": "Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrentInvocationsPerInstance": {
                          "description": "The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "outputConfig": {
                    "description": "Specifies the configuration for asynchronous inference invocation outputs.",
                    "items": {
                      "properties": {
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.",
                          "type": "string"
                        },
                        "notificationConfig": {
                          "description": "Specifies the configuration for notifications of inference results for asynchronous inference.",
                          "items": {
                            "properties": {
                              "errorTopic": {
                                "description": "Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.",
                                "type": "string"
                              },
                              "includeInferenceResponseIn": {
                                "description": "The Amazon SNS topics where you want the inference response to be included. Valid values are SUCCESS_NOTIFICATION_TOPIC and ERROR_NOTIFICATION_TOPIC.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "set"
                              },
                              "successTopic": {
                                "description": "Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "s3FailurePath": {
                          "description": "The Amazon S3 location to upload failure inference responses to.",
                          "type": "string"
                        },
                        "s3OutputPath": {
                          "description": "The Amazon S3 location to upload inference responses to.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "dataCaptureConfig": {
              "description": "Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.",
              "items": {
                "properties": {
                  "captureContentTypeHeader": {
                    "description": "The content type headers to capture. Fields are documented below.",
                    "items": {
                      "properties": {
                        "csvContentTypes": {
                          "description": "The CSV content type headers to capture.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "jsonContentTypes": {
                          "description": "The JSON content type headers to capture.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "captureOptions": {
                    "description": "Specifies what data to capture. Fields are documented below.",
                    "items": {
                      "properties": {
                        "captureMode": {
                          "description": "Specifies the data to be captured. Should be one of Input or Output.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "destinationS3Uri": {
                    "description": "The URL for S3 location where the captured data is stored.",
                    "type": "string"
                  },
                  "enableCapture": {
                    "description": "Flag to enable data capture. Defaults to false.",
                    "type": "boolean"
                  },
                  "initialSamplingPercentage": {
                    "description": "Portion of data to capture. Should be between 0 and 100.",
                    "type": "number"
                  },
                  "kmsKeyId": {
                    "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kmsKeyArn": {
              "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
              "type": "string"
            },
            "kmsKeyArnRef": {
              "description": "Reference to a Key in kms to populate kmsKeyArn.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "kmsKeyArnSelector": {
              "description": "Selector for a Key in kms to populate kmsKeyArn.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "productionVariants": {
              "description": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.",
              "items": {
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "items": {
                      "properties": {
                        "destinationS3Uri": {
                          "description": "The Amazon S3 bucket to send the core dump to.",
                          "type": "string"
                        },
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "modelNameRef": {
                    "description": "Reference to a Model in sagemaker to populate modelName.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "modelNameSelector": {
                    "description": "Selector for a Model in sagemaker to populate modelName.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrency": {
                          "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                          "type": "number"
                        },
                        "memorySizeInMb": {
                          "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                          "type": "number"
                        },
                        "provisionedConcurrency": {
                          "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "shadowProductionVariants": {
              "description": "Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.",
              "items": {
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "items": {
                      "properties": {
                        "destinationS3Uri": {
                          "description": "The Amazon S3 bucket to send the core dump to.",
                          "type": "string"
                        },
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrency": {
                          "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                          "type": "number"
                        },
                        "memorySizeInMb": {
                          "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                          "type": "number"
                        },
                        "provisionedConcurrency": {
                          "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "properties": {
            "asyncInferenceConfig": {
              "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
              "items": {
                "properties": {
                  "clientConfig": {
                    "description": "Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrentInvocationsPerInstance": {
                          "description": "The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "outputConfig": {
                    "description": "Specifies the configuration for asynchronous inference invocation outputs.",
                    "items": {
                      "properties": {
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.",
                          "type": "string"
                        },
                        "notificationConfig": {
                          "description": "Specifies the configuration for notifications of inference results for asynchronous inference.",
                          "items": {
                            "properties": {
                              "errorTopic": {
                                "description": "Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.",
                                "type": "string"
                              },
                              "includeInferenceResponseIn": {
                                "description": "The Amazon SNS topics where you want the inference response to be included. Valid values are SUCCESS_NOTIFICATION_TOPIC and ERROR_NOTIFICATION_TOPIC.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "set"
                              },
                              "successTopic": {
                                "description": "Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "s3FailurePath": {
                          "description": "The Amazon S3 location to upload failure inference responses to.",
                          "type": "string"
                        },
                        "s3OutputPath": {
                          "description": "The Amazon S3 location to upload inference responses to.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "dataCaptureConfig": {
              "description": "Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.",
              "items": {
                "properties": {
                  "captureContentTypeHeader": {
                    "description": "The content type headers to capture. Fields are documented below.",
                    "items": {
                      "properties": {
                        "csvContentTypes": {
                          "description": "The CSV content type headers to capture.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "jsonContentTypes": {
                          "description": "The JSON content type headers to capture.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "captureOptions": {
                    "description": "Specifies what data to capture. Fields are documented below.",
                    "items": {
                      "properties": {
                        "captureMode": {
                          "description": "Specifies the data to be captured. Should be one of Input or Output.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "destinationS3Uri": {
                    "description": "The URL for S3 location where the captured data is stored.",
                    "type": "string"
                  },
                  "enableCapture": {
                    "description": "Flag to enable data capture. Defaults to false.",
                    "type": "boolean"
                  },
                  "initialSamplingPercentage": {
                    "description": "Portion of data to capture. Should be between 0 and 100.",
                    "type": "number"
                  },
                  "kmsKeyId": {
                    "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kmsKeyArn": {
              "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
              "type": "string"
            },
            "kmsKeyArnRef": {
              "description": "Reference to a Key in kms to populate kmsKeyArn.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "kmsKeyArnSelector": {
              "description": "Selector for a Key in kms to populate kmsKeyArn.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "productionVariants": {
              "description": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.",
              "items": {
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "items": {
                      "properties": {
                        "destinationS3Uri": {
                          "description": "The Amazon S3 bucket to send the core dump to.",
                          "type": "string"
                        },
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "modelNameRef": {
                    "description": "Reference to a Model in sagemaker to populate modelName.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "modelNameSelector": {
                    "description": "Selector for a Model in sagemaker to populate modelName.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrency": {
                          "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                          "type": "number"
                        },
                        "memorySizeInMb": {
                          "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                          "type": "number"
                        },
                        "provisionedConcurrency": {
                          "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "shadowProductionVariants": {
              "description": "Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.",
              "items": {
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "items": {
                      "properties": {
                        "destinationS3Uri": {
                          "description": "The Amazon S3 bucket to send the core dump to.",
                          "type": "string"
                        },
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrency": {
                          "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                          "type": "number"
                        },
                        "memorySizeInMb": {
                          "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                          "type": "number"
                        },
                        "provisionedConcurrency": {
                          "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.productionVariants is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productionVariants) || (has(self.initProvider) && has(self.initProvider.productionVariants))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "EndpointConfigurationStatus defines the observed state of EndpointConfiguration.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.",
              "type": "string"
            },
            "asyncInferenceConfig": {
              "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
              "items": {
                "properties": {
                  "clientConfig": {
                    "description": "Configures the behavior of the client used by Amazon SageMaker to interact with the model container during asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrentInvocationsPerInstance": {
                          "description": "The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, Amazon SageMaker will choose an optimal value for you.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "outputConfig": {
                    "description": "Specifies the configuration for asynchronous inference invocation outputs.",
                    "items": {
                      "properties": {
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the asynchronous inference output in Amazon S3.",
                          "type": "string"
                        },
                        "notificationConfig": {
                          "description": "Specifies the configuration for notifications of inference results for asynchronous inference.",
                          "items": {
                            "properties": {
                              "errorTopic": {
                                "description": "Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.",
                                "type": "string"
                              },
                              "includeInferenceResponseIn": {
                                "description": "The Amazon SNS topics where you want the inference response to be included. Valid values are SUCCESS_NOTIFICATION_TOPIC and ERROR_NOTIFICATION_TOPIC.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "set"
                              },
                              "successTopic": {
                                "description": "Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "s3FailurePath": {
                          "description": "The Amazon S3 location to upload failure inference responses to.",
                          "type": "string"
                        },
                        "s3OutputPath": {
                          "description": "The Amazon S3 location to upload inference responses to.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "dataCaptureConfig": {
              "description": "Specifies the parameters to capture input/output of SageMaker models endpoints. Fields are documented below.",
              "items": {
                "properties": {
                  "captureContentTypeHeader": {
                    "description": "The content type headers to capture. Fields are documented below.",
                    "items": {
                      "properties": {
                        "csvContentTypes": {
                          "description": "The CSV content type headers to capture.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        },
                        "jsonContentTypes": {
                          "description": "The JSON content type headers to capture.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "captureOptions": {
                    "description": "Specifies what data to capture. Fields are documented below.",
                    "items": {
                      "properties": {
                        "captureMode": {
                          "description": "Specifies the data to be captured. Should be one of Input or Output.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "destinationS3Uri": {
                    "description": "The URL for S3 location where the captured data is stored.",
                    "type": "string"
                  },
                  "enableCapture": {
                    "description": "Flag to enable data capture. Defaults to false.",
                    "type": "boolean"
                  },
                  "initialSamplingPercentage": {
                    "description": "Portion of data to capture. Should be between 0 and 100.",
                    "type": "number"
                  },
                  "kmsKeyId": {
                    "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt the captured data on Amazon S3.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "id": {
              "type": "string"
            },
            "kmsKeyArn": {
              "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
              "type": "string"
            },
            "productionVariants": {
              "description": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.",
              "items": {
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "items": {
                      "properties": {
                        "destinationS3Uri": {
                          "description": "The Amazon S3 bucket to send the core dump to.",
                          "type": "string"
                        },
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrency": {
                          "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                          "type": "number"
                        },
                        "memorySizeInMb": {
                          "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                          "type": "number"
                        },
                        "provisionedConcurrency": {
                          "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "shadowProductionVariants": {
              "description": "Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants.If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.",
              "items": {
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "items": {
                      "properties": {
                        "destinationS3Uri": {
                          "description": "The Amazon S3 bucket to send the core dump to.",
                          "type": "string"
                        },
                        "kmsKeyId": {
                          "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "items": {
                      "properties": {
                        "maxConcurrency": {
                          "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                          "type": "number"
                        },
                        "memorySizeInMb": {
                          "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                          "type": "number"
                        },
                        "provisionedConcurrency": {
                          "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
