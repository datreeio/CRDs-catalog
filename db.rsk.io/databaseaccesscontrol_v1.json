{
  "description": "DatabaseAccessControl is the Schema for the databaseaccesscontrols API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DatabaseAccessControlSpec defines the desired state of DatabaseAccessControl",
      "properties": {
        "customRoles": {
          "items": {
            "properties": {
              "name": {
                "minLength": 1,
                "pattern": "[A-Za-z_-]+",
                "type": "string"
              },
              "privileges": {
                "properties": {
                  "global": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "tables": {
                    "properties": {
                      "alter": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "alterRoutine": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "create": {
                        "description": "Connect               []string `json:\"connect,omitempty\"`",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "createRoutine": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "createTemporaryTables": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "createView": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "delete": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "drop": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "event": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "execute": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "grantOption": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "index": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "insert": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "lockTables": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "references": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "select": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "showDatabases": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "showView": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "trigger": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "update": {
                        "description": "Truncate              []string `json:\"truncate,omitempty\"`",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "usage": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "dataSensitivity": {
          "description": "Classify database tables by the sensitivity of the data they contain. This will be used to auto-generate a list of roles with access to each level of sensitivity.",
          "properties": {
            "extraordinary": {
              "description": "Nonpublic data or combinations of data with a statutory requirement for notification to affected parties in case of a confidentiality breach; or nonpublic data or combinations of data, the disclosure of which may cause a severe adverse business impact (e.g., identity theft).",
              "items": {
                "maxLength": 63,
                "minLength": 1,
                "pattern": "[A-Za-z-_*]+",
                "type": "string"
              },
              "type": "array"
            },
            "high": {
              "description": "Nonpublic data or combinations of data, the disclosure of which may cause a moderate adverse business impact (e.g., disclosure of client account balance).",
              "items": {
                "maxLength": 63,
                "minLength": 1,
                "pattern": "[A-Za-z-_*]+",
                "type": "string"
              },
              "type": "array"
            },
            "low": {
              "description": "Data that is or was available to the general public (e.g., by way of business directories, business cards, the internet, or government records).",
              "items": {
                "maxLength": 63,
                "minLength": 1,
                "pattern": "[A-Za-z-_*]+",
                "type": "string"
              },
              "type": "array"
            },
            "medium": {
              "description": "Nonpublic data or combinations of data, the disclosure of which is unlikely to cause an adverse business impact.",
              "items": {
                "maxLength": 63,
                "minLength": 1,
                "pattern": "[A-Za-z-_*]+",
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "name": {
          "description": "The name of the database that access is being described for. There must be a matching DatabaseHost resource.",
          "maxLength": 63,
          "minLength": 1,
          "pattern": "[A-Za-z-_*]+",
          "type": "string"
        }
      },
      "required": [
        "dataSensitivity",
        "name"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DatabaseAccessControlStatus defines the observed state of DatabaseAccessControl",
      "properties": {
        "conditions": {
          "description": "Represents the observations of a DatabaseAccessControl's current state.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
