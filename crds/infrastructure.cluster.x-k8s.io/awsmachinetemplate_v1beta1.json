{
  "description": "AWSMachineTemplate is the schema for the Amazon EC2 Machine Templates API.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.",
      "properties": {
        "template": {
          "description": "AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template.",
          "properties": {
            "metadata": {
              "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "spec": {
              "description": "Spec is the specification of the desired behavior of the machine.",
              "properties": {
                "additionalSecurityGroups": {
                  "description": "AdditionalSecurityGroups is an array of references to security groups that should be applied to the\ninstance. These security groups would be set in addition to any security groups defined\nat the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters\nwill cause additional requests to AWS API and if tags change the attached security groups might change too.",
                  "items": {
                    "description": "AWSResourceReference is a reference to a specific AWS resource by ID or filters.\nOnly one of ID or Filters may be specified. Specifying more than one will result in\na validation error.",
                    "properties": {
                      "arn": {
                        "description": "ARN of resource.\nDeprecated: This field has no function and is going to be removed in the next release.",
                        "type": "string"
                      },
                      "filters": {
                        "description": "Filters is a set of key/value pairs used to identify a resource\nThey are applied according to the rules defined by the AWS API:\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                        "items": {
                          "description": "Filter is a filter used to identify an AWS resource.",
                          "properties": {
                            "name": {
                              "description": "Name of the filter. Filter names are case-sensitive.",
                              "type": "string"
                            },
                            "values": {
                              "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "name",
                            "values"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "ID of resource",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "additionalTags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the\nAWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the\nAWSMachine's value takes precedence.",
                  "type": "object"
                },
                "ami": {
                  "description": "AMI is the reference to the AMI from which to create the machine instance.",
                  "properties": {
                    "eksLookupType": {
                      "description": "EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store",
                      "enum": [
                        "AmazonLinux",
                        "AmazonLinuxGPU"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "description": "ID of resource",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "cloudInit": {
                  "description": "CloudInit defines options related to the bootstrapping systems where\nCloudInit is used.",
                  "properties": {
                    "insecureSkipSecretsManager": {
                      "description": "InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager\nor AWS Systems Manager Parameter Store to ensure privacy of userdata.\nBy default, a cloud-init boothook shell script is prepended to download\nthe userdata from Secrets Manager and additionally delete the secret.",
                      "type": "boolean"
                    },
                    "secretCount": {
                      "description": "SecretCount is the number of secrets used to form the complete secret",
                      "format": "int32",
                      "type": "integer"
                    },
                    "secretPrefix": {
                      "description": "SecretPrefix is the prefix for the secret name. This is stored\ntemporarily, and deleted when the machine registers as a node against\nthe workload cluster.",
                      "type": "string"
                    },
                    "secureSecretsBackend": {
                      "description": "SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager\nParameter Storage to distribute secrets. By default or with the value of secrets-manager,\nwill use AWS Secrets Manager instead.",
                      "enum": [
                        "secrets-manager",
                        "ssm-parameter-store"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "failureDomain": {
                  "description": "FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API.\nFor this infrastructure provider, the ID is equivalent to an AWS Availability Zone.\nIf multiple subnets are matched for the availability zone, the first one returned is picked.",
                  "type": "string"
                },
                "iamInstanceProfile": {
                  "description": "IAMInstanceProfile is a name of an IAM instance profile to assign to the instance",
                  "type": "string"
                },
                "ignition": {
                  "description": "Ignition defined options related to the bootstrapping systems where Ignition is used.",
                  "properties": {
                    "version": {
                      "default": "2.3",
                      "description": "Version defines which version of Ignition will be used to generate bootstrap data.",
                      "enum": [
                        "2.3"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "imageLookupBaseOS": {
                  "description": "ImageLookupBaseOS is the name of the base operating system to use for\nimage lookup the AMI is not set.",
                  "type": "string"
                },
                "imageLookupFormat": {
                  "description": "ImageLookupFormat is the AMI naming format to look up the image for this\nmachine It will be ignored if an explicit AMI is set. Supports\nsubstitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and\nkubernetes version, respectively. The BaseOS will be the value in\nImageLookupBaseOS or ubuntu (the default), and the kubernetes version as\ndefined by the packages produced by kubernetes/release without v as a\nprefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default\nimage format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up\nsearching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a\nMachine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See\nalso: https://golang.org/pkg/text/template/",
                  "type": "string"
                },
                "imageLookupOrg": {
                  "description": "ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.",
                  "type": "string"
                },
                "instanceID": {
                  "description": "InstanceID is the EC2 instance ID for this machine.",
                  "type": "string"
                },
                "instanceType": {
                  "description": "InstanceType is the type of instance to create. Example: m4.xlarge",
                  "minLength": 2,
                  "type": "string"
                },
                "networkInterfaces": {
                  "description": "NetworkInterfaces is a list of ENIs to associate with the instance.\nA maximum of 2 may be specified.",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 2,
                  "type": "array"
                },
                "nonRootVolumes": {
                  "description": "Configuration options for the non root storage volumes.",
                  "items": {
                    "description": "Volume encapsulates the configuration options for the storage device.",
                    "properties": {
                      "deviceName": {
                        "description": "Device name",
                        "type": "string"
                      },
                      "encrypted": {
                        "description": "Encrypted is whether the volume should be encrypted or not.",
                        "type": "boolean"
                      },
                      "encryptionKey": {
                        "description": "EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.\nIf Encrypted is set and this is omitted, the default AWS key will be used.\nThe key must already exist and be accessible by the controller.",
                        "type": "string"
                      },
                      "iops": {
                        "description": "IOPS is the number of IOPS requested for the disk. Not applicable to all types.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "size": {
                        "description": "Size specifies size (in Gi) of the storage device.\nMust be greater than the image snapshot size or 8 (whichever is greater).",
                        "format": "int64",
                        "minimum": 8,
                        "type": "integer"
                      },
                      "throughput": {
                        "description": "Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "type": {
                        "description": "Type is the type of the volume (e.g. gp2, io1, etc...).",
                        "type": "string"
                      }
                    },
                    "required": [
                      "size"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "providerID": {
                  "description": "ProviderID is the unique identifier as specified by the cloud provider.",
                  "type": "string"
                },
                "publicIP": {
                  "description": "PublicIP specifies whether the instance should get a public IP.\nPrecedence for this setting is as follows:\n1. This field if set\n2. Cluster/flavor setting\n3. Subnet default",
                  "type": "boolean"
                },
                "rootVolume": {
                  "description": "RootVolume encapsulates the configuration options for the root volume",
                  "properties": {
                    "deviceName": {
                      "description": "Device name",
                      "type": "string"
                    },
                    "encrypted": {
                      "description": "Encrypted is whether the volume should be encrypted or not.",
                      "type": "boolean"
                    },
                    "encryptionKey": {
                      "description": "EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.\nIf Encrypted is set and this is omitted, the default AWS key will be used.\nThe key must already exist and be accessible by the controller.",
                      "type": "string"
                    },
                    "iops": {
                      "description": "IOPS is the number of IOPS requested for the disk. Not applicable to all types.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "size": {
                      "description": "Size specifies size (in Gi) of the storage device.\nMust be greater than the image snapshot size or 8 (whichever is greater).",
                      "format": "int64",
                      "minimum": 8,
                      "type": "integer"
                    },
                    "throughput": {
                      "description": "Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.",
                      "format": "int64",
                      "type": "integer"
                    },
                    "type": {
                      "description": "Type is the type of the volume (e.g. gp2, io1, etc...).",
                      "type": "string"
                    }
                  },
                  "required": [
                    "size"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "spotMarketOptions": {
                  "description": "SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.",
                  "properties": {
                    "maxPrice": {
                      "description": "MaxPrice defines the maximum price the user is willing to pay for Spot VM instances",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "sshKeyName": {
                  "description": "SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)",
                  "type": "string"
                },
                "subnet": {
                  "description": "Subnet is a reference to the subnet to use for this instance. If not specified,\nthe cluster subnet will be used.",
                  "properties": {
                    "arn": {
                      "description": "ARN of resource.\nDeprecated: This field has no function and is going to be removed in the next release.",
                      "type": "string"
                    },
                    "filters": {
                      "description": "Filters is a set of key/value pairs used to identify a resource\nThey are applied according to the rules defined by the AWS API:\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                      "items": {
                        "description": "Filter is a filter used to identify an AWS resource.",
                        "properties": {
                          "name": {
                            "description": "Name of the filter. Filter names are case-sensitive.",
                            "type": "string"
                          },
                          "values": {
                            "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "name",
                          "values"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "id": {
                      "description": "ID of resource",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tenancy": {
                  "description": "Tenancy indicates if instance should run on shared or single-tenant hardware.",
                  "enum": [
                    "default",
                    "dedicated",
                    "host"
                  ],
                  "type": "string"
                },
                "uncompressedUserData": {
                  "description": "UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.\ncloud-init has built-in support for gzip-compressed user data\nuser data stored in aws secret manager is always gzip-compressed.",
                  "type": "boolean"
                }
              },
              "required": [
                "instanceType"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "spec"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "template"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.",
      "properties": {
        "capacity": {
          "additionalProperties": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "x-kubernetes-int-or-string": true
          },
          "description": "Capacity defines the resource capacity for this machine.\nThis value is used for autoscaling from zero operations as defined in:\nhttps://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md",
          "type": "object"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
