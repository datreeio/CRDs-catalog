{
  "description": "JobDefinition is the Schema for the JobDefinitions API. Provides a Batch Job Definition resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "JobDefinitionSpec defines the desired state of JobDefinition",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "containerProperties": {
              "description": "Valid container properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.",
              "type": "string"
            },
            "deregisterOnNewRevision": {
              "description": "When updating a job definition a new revision is created. This parameter determines if the previous version is deregistered (INACTIVE) or left  ACTIVE. Defaults to true.",
              "type": "boolean"
            },
            "ecsProperties": {
              "description": "Valid ECS properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.",
              "type": "string"
            },
            "eksProperties": {
              "description": "Valid eks properties. This parameter is only valid if the type parameter is container.",
              "properties": {
                "podProperties": {
                  "description": "Properties for the Kubernetes pod resources of a job. See pod_properties below.",
                  "properties": {
                    "containers": {
                      "description": "Properties of the container that's used on the Amazon EKS pod. See containers below.",
                      "items": {
                        "properties": {
                          "args": {
                            "description": "Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "command": {
                            "description": "Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "env": {
                            "description": "Environment variables to pass to a container. See EKS Environment below.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of the environment variable.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "image": {
                            "description": "Docker image used to start the container.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the container. If the name isn't specified, the default name \"Default\" is used. Each container in a pod must have a unique name.",
                            "type": "string"
                          },
                          "resources": {
                            "description": "Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "securityContext": {
                            "description": "Security context for a job.",
                            "properties": {
                              "privileged": {
                                "type": "boolean"
                              },
                              "readOnlyRootFileSystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "number"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "volumeMounts": {
                            "description": "Volume mounts for the container.",
                            "items": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "dnsPolicy": {
                      "description": "DNS policy for the pod. The default value is ClusterFirst. If the host_network argument is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.",
                      "type": "string"
                    },
                    "hostNetwork": {
                      "description": "Whether the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.",
                      "type": "boolean"
                    },
                    "imagePullSecret": {
                      "description": "List of Kubernetes secret resources. See image_pull_secret below.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Unique identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "initContainers": {
                      "description": "Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.",
                      "items": {
                        "properties": {
                          "args": {
                            "description": "Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "command": {
                            "description": "Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "env": {
                            "description": "Environment variables to pass to a container. See EKS Environment below.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of the environment variable.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "image": {
                            "description": "Docker image used to start the container.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the job definition.",
                            "type": "string"
                          },
                          "resources": {
                            "description": "Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "securityContext": {
                            "description": "Security context for a job.",
                            "properties": {
                              "privileged": {
                                "type": "boolean"
                              },
                              "readOnlyRootFileSystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "number"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "volumeMounts": {
                            "description": "Volume mounts for the container.",
                            "items": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "description": "Metadata about the Kubernetes pod.",
                      "properties": {
                        "labels": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Key-value pairs used to identify, sort, and organize cube resources.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceAccountName": {
                      "description": "Name of the service account that's used to run the pod.",
                      "type": "string"
                    },
                    "shareProcessNamespace": {
                      "description": "Indicates if the processes in a container are shared, or visible, to other containers in the same pod.",
                      "type": "boolean"
                    },
                    "volumes": {
                      "description": "Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.",
                      "items": {
                        "properties": {
                          "emptyDir": {
                            "properties": {
                              "medium": {
                                "description": "Medium to store the volume. The default value is an empty string, which uses the storage of the node.",
                                "type": "string"
                              },
                              "sizeLimit": {
                                "description": "Maximum size of the volume. By default, there's no maximum size defined.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "hostPath": {
                            "description": "Path of the file or directory on the host to mount into containers on the pod.",
                            "properties": {
                              "path": {
                                "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name of the job definition.",
                            "type": "string"
                          },
                          "secret": {
                            "properties": {
                              "optional": {
                                "description": "Whether the secret or the secret's keys must be defined.",
                                "type": "boolean"
                              },
                              "secretName": {
                                "description": "Name of the secret. The name must be allowed as a DNS subdomain name.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name of the job definition.",
              "type": "string"
            },
            "nodeProperties": {
              "description": "Valid node properties provided as a single valid JSON document. This parameter is required if the type parameter is multinode.",
              "type": "string"
            },
            "parameters": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Parameter substitution placeholders to set in the job definition.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "platformCapabilities": {
              "description": "Platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "propagateTags": {
              "description": "Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.",
              "type": "boolean"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "retryStrategy": {
              "description": "Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of retry_strategy is 1.  Defined below.",
              "properties": {
                "attempts": {
                  "description": "Number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.",
                  "type": "number"
                },
                "evaluateOnExit": {
                  "description": "Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.",
                  "items": {
                    "properties": {
                      "action": {
                        "description": "Action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: retry, exit.",
                        "type": "string"
                      },
                      "onExitCode": {
                        "description": "Glob pattern to match against the decimal representation of the exit code returned for a job.",
                        "type": "string"
                      },
                      "onReason": {
                        "description": "Glob pattern to match against the reason returned for a job.",
                        "type": "string"
                      },
                      "onStatusReason": {
                        "description": "Glob pattern to match against the status reason returned for a job.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "schedulingPriority": {
              "description": "Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values 0 through 9999.",
              "type": "number"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.",
              "properties": {
                "attemptDurationSeconds": {
                  "description": "Time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "type": {
              "description": "Type of job definition. Must be container or multinode.",
              "type": "string"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "containerProperties": {
              "description": "Valid container properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.",
              "type": "string"
            },
            "deregisterOnNewRevision": {
              "description": "When updating a job definition a new revision is created. This parameter determines if the previous version is deregistered (INACTIVE) or left  ACTIVE. Defaults to true.",
              "type": "boolean"
            },
            "ecsProperties": {
              "description": "Valid ECS properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.",
              "type": "string"
            },
            "eksProperties": {
              "description": "Valid eks properties. This parameter is only valid if the type parameter is container.",
              "properties": {
                "podProperties": {
                  "description": "Properties for the Kubernetes pod resources of a job. See pod_properties below.",
                  "properties": {
                    "containers": {
                      "description": "Properties of the container that's used on the Amazon EKS pod. See containers below.",
                      "items": {
                        "properties": {
                          "args": {
                            "description": "Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "command": {
                            "description": "Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "env": {
                            "description": "Environment variables to pass to a container. See EKS Environment below.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of the environment variable.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "image": {
                            "description": "Docker image used to start the container.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the container. If the name isn't specified, the default name \"Default\" is used. Each container in a pod must have a unique name.",
                            "type": "string"
                          },
                          "resources": {
                            "description": "Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "securityContext": {
                            "description": "Security context for a job.",
                            "properties": {
                              "privileged": {
                                "type": "boolean"
                              },
                              "readOnlyRootFileSystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "number"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "volumeMounts": {
                            "description": "Volume mounts for the container.",
                            "items": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "dnsPolicy": {
                      "description": "DNS policy for the pod. The default value is ClusterFirst. If the host_network argument is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.",
                      "type": "string"
                    },
                    "hostNetwork": {
                      "description": "Whether the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.",
                      "type": "boolean"
                    },
                    "imagePullSecret": {
                      "description": "List of Kubernetes secret resources. See image_pull_secret below.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Unique identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "initContainers": {
                      "description": "Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.",
                      "items": {
                        "properties": {
                          "args": {
                            "description": "Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "command": {
                            "description": "Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "env": {
                            "description": "Environment variables to pass to a container. See EKS Environment below.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of the environment variable.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "image": {
                            "description": "Docker image used to start the container.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the job definition.",
                            "type": "string"
                          },
                          "resources": {
                            "description": "Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "securityContext": {
                            "description": "Security context for a job.",
                            "properties": {
                              "privileged": {
                                "type": "boolean"
                              },
                              "readOnlyRootFileSystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "number"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "volumeMounts": {
                            "description": "Volume mounts for the container.",
                            "items": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "description": "Metadata about the Kubernetes pod.",
                      "properties": {
                        "labels": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Key-value pairs used to identify, sort, and organize cube resources.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceAccountName": {
                      "description": "Name of the service account that's used to run the pod.",
                      "type": "string"
                    },
                    "shareProcessNamespace": {
                      "description": "Indicates if the processes in a container are shared, or visible, to other containers in the same pod.",
                      "type": "boolean"
                    },
                    "volumes": {
                      "description": "Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.",
                      "items": {
                        "properties": {
                          "emptyDir": {
                            "properties": {
                              "medium": {
                                "description": "Medium to store the volume. The default value is an empty string, which uses the storage of the node.",
                                "type": "string"
                              },
                              "sizeLimit": {
                                "description": "Maximum size of the volume. By default, there's no maximum size defined.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "hostPath": {
                            "description": "Path of the file or directory on the host to mount into containers on the pod.",
                            "properties": {
                              "path": {
                                "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name of the job definition.",
                            "type": "string"
                          },
                          "secret": {
                            "properties": {
                              "optional": {
                                "description": "Whether the secret or the secret's keys must be defined.",
                                "type": "boolean"
                              },
                              "secretName": {
                                "description": "Name of the secret. The name must be allowed as a DNS subdomain name.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name of the job definition.",
              "type": "string"
            },
            "nodeProperties": {
              "description": "Valid node properties provided as a single valid JSON document. This parameter is required if the type parameter is multinode.",
              "type": "string"
            },
            "parameters": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Parameter substitution placeholders to set in the job definition.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "platformCapabilities": {
              "description": "Platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "propagateTags": {
              "description": "Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.",
              "type": "boolean"
            },
            "retryStrategy": {
              "description": "Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of retry_strategy is 1.  Defined below.",
              "properties": {
                "attempts": {
                  "description": "Number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.",
                  "type": "number"
                },
                "evaluateOnExit": {
                  "description": "Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.",
                  "items": {
                    "properties": {
                      "action": {
                        "description": "Action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: retry, exit.",
                        "type": "string"
                      },
                      "onExitCode": {
                        "description": "Glob pattern to match against the decimal representation of the exit code returned for a job.",
                        "type": "string"
                      },
                      "onReason": {
                        "description": "Glob pattern to match against the reason returned for a job.",
                        "type": "string"
                      },
                      "onStatusReason": {
                        "description": "Glob pattern to match against the status reason returned for a job.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "schedulingPriority": {
              "description": "Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values 0 through 9999.",
              "type": "number"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.",
              "properties": {
                "attemptDurationSeconds": {
                  "description": "Time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "type": {
              "description": "Type of job definition. Must be container or multinode.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        },
        {
          "message": "spec.forProvider.type is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "JobDefinitionStatus defines the observed state of JobDefinition.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "ARN of the job definition, includes revision (:#).",
              "type": "string"
            },
            "arnPrefix": {
              "description": "ARN without the revision number.",
              "type": "string"
            },
            "containerProperties": {
              "description": "Valid container properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.",
              "type": "string"
            },
            "deregisterOnNewRevision": {
              "description": "When updating a job definition a new revision is created. This parameter determines if the previous version is deregistered (INACTIVE) or left  ACTIVE. Defaults to true.",
              "type": "boolean"
            },
            "ecsProperties": {
              "description": "Valid ECS properties provided as a single valid JSON document. This parameter is only valid if the type parameter is container.",
              "type": "string"
            },
            "eksProperties": {
              "description": "Valid eks properties. This parameter is only valid if the type parameter is container.",
              "properties": {
                "podProperties": {
                  "description": "Properties for the Kubernetes pod resources of a job. See pod_properties below.",
                  "properties": {
                    "containers": {
                      "description": "Properties of the container that's used on the Amazon EKS pod. See containers below.",
                      "items": {
                        "properties": {
                          "args": {
                            "description": "Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "command": {
                            "description": "Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "env": {
                            "description": "Environment variables to pass to a container. See EKS Environment below.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of the environment variable.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "image": {
                            "description": "Docker image used to start the container.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the container. If the name isn't specified, the default name \"Default\" is used. Each container in a pod must have a unique name.",
                            "type": "string"
                          },
                          "resources": {
                            "description": "Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "securityContext": {
                            "description": "Security context for a job.",
                            "properties": {
                              "privileged": {
                                "type": "boolean"
                              },
                              "readOnlyRootFileSystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "number"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "volumeMounts": {
                            "description": "Volume mounts for the container.",
                            "items": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "dnsPolicy": {
                      "description": "DNS policy for the pod. The default value is ClusterFirst. If the host_network argument is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.",
                      "type": "string"
                    },
                    "hostNetwork": {
                      "description": "Whether the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.",
                      "type": "boolean"
                    },
                    "imagePullSecret": {
                      "description": "List of Kubernetes secret resources. See image_pull_secret below.",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "Unique identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "initContainers": {
                      "description": "Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.",
                      "items": {
                        "properties": {
                          "args": {
                            "description": "Array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "command": {
                            "description": "Entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "env": {
                            "description": "Environment variables to pass to a container. See EKS Environment below.",
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Value of the environment variable.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          },
                          "image": {
                            "description": "Docker image used to start the container.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy for the container. Supported values are Always, IfNotPresent, and Never.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the job definition.",
                            "type": "string"
                          },
                          "resources": {
                            "description": "Type and amount of resources to assign to a container. The supported resources include memory, cpu, and nvidia.com/gpu.",
                            "properties": {
                              "limits": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "requests": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "securityContext": {
                            "description": "Security context for a job.",
                            "properties": {
                              "privileged": {
                                "type": "boolean"
                              },
                              "readOnlyRootFileSystem": {
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "type": "number"
                              },
                              "runAsNonRoot": {
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "volumeMounts": {
                            "description": "Volume mounts for the container.",
                            "items": {
                              "properties": {
                                "mountPath": {
                                  "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the job definition.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "metadata": {
                      "description": "Metadata about the Kubernetes pod.",
                      "properties": {
                        "labels": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Key-value pairs used to identify, sort, and organize cube resources.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "serviceAccountName": {
                      "description": "Name of the service account that's used to run the pod.",
                      "type": "string"
                    },
                    "shareProcessNamespace": {
                      "description": "Indicates if the processes in a container are shared, or visible, to other containers in the same pod.",
                      "type": "boolean"
                    },
                    "volumes": {
                      "description": "Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.",
                      "items": {
                        "properties": {
                          "emptyDir": {
                            "properties": {
                              "medium": {
                                "description": "Medium to store the volume. The default value is an empty string, which uses the storage of the node.",
                                "type": "string"
                              },
                              "sizeLimit": {
                                "description": "Maximum size of the volume. By default, there's no maximum size defined.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "hostPath": {
                            "description": "Path of the file or directory on the host to mount into containers on the pod.",
                            "properties": {
                              "path": {
                                "description": "Path of the file or directory on the host to mount into containers on the pod.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name of the job definition.",
                            "type": "string"
                          },
                          "secret": {
                            "properties": {
                              "optional": {
                                "description": "Whether the secret or the secret's keys must be defined.",
                                "type": "boolean"
                              },
                              "secretName": {
                                "description": "Name of the secret. The name must be allowed as a DNS subdomain name.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "id": {
              "type": "string"
            },
            "name": {
              "description": "Name of the job definition.",
              "type": "string"
            },
            "nodeProperties": {
              "description": "Valid node properties provided as a single valid JSON document. This parameter is required if the type parameter is multinode.",
              "type": "string"
            },
            "parameters": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Parameter substitution placeholders to set in the job definition.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "platformCapabilities": {
              "description": "Platform capabilities required by the job definition. If no value is specified, it defaults to EC2. To run the job on Fargate resources, specify FARGATE.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "propagateTags": {
              "description": "Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is false.",
              "type": "boolean"
            },
            "retryStrategy": {
              "description": "Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of retry_strategy is 1.  Defined below.",
              "properties": {
                "attempts": {
                  "description": "Number of times to move a job to the RUNNABLE status. You may specify between 1 and 10 attempts.",
                  "type": "number"
                },
                "evaluateOnExit": {
                  "description": "Evaluate on exit conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified. You may specify up to 5 configuration blocks.",
                  "items": {
                    "properties": {
                      "action": {
                        "description": "Action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: retry, exit.",
                        "type": "string"
                      },
                      "onExitCode": {
                        "description": "Glob pattern to match against the decimal representation of the exit code returned for a job.",
                        "type": "string"
                      },
                      "onReason": {
                        "description": "Glob pattern to match against the reason returned for a job.",
                        "type": "string"
                      },
                      "onStatusReason": {
                        "description": "Glob pattern to match against the status reason returned for a job.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "revision": {
              "description": "Revision of the job definition.",
              "type": "number"
            },
            "schedulingPriority": {
              "description": "Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values 0 through 9999.",
              "type": "number"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of timeout is 1. Defined below.",
              "properties": {
                "attemptDurationSeconds": {
                  "description": "Time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "type": {
              "description": "Type of job definition. Must be container or multinode.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
