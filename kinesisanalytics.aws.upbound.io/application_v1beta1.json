{
  "description": "Application is the Schema for the Applications API. Provides a AWS Kinesis Analytics Application",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ApplicationSpec defines the desired state of Application",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "cloudwatchLoggingOptions": {
              "description": "The CloudWatch log stream options to monitor application errors.\nSee CloudWatch Logging Options below for more details.",
              "items": {
                "properties": {
                  "logStreamArn": {
                    "description": "The ARN of the CloudWatch Log Stream.",
                    "type": "string"
                  },
                  "logStreamArnRef": {
                    "description": "Reference to a Stream in cloudwatchlogs to populate logStreamArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "logStreamArnSelector": {
                    "description": "Selector for a Stream in cloudwatchlogs to populate logStreamArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArn": {
                    "description": "The ARN of the IAM Role used to send application messages.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "code": {
              "description": "SQL Code to transform input data, and generate output.",
              "type": "string"
            },
            "description": {
              "description": "Description of the application.",
              "type": "string"
            },
            "inputs": {
              "description": "Input configuration of the application. See Inputs below for more details.",
              "items": {
                "properties": {
                  "kinesisFirehose": {
                    "description": "The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.\nSee Kinesis Firehose below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kinesisStream": {
                    "description": "The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.\nSee Kinesis Stream below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a Stream in kinesis to populate resourceArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a Stream in kinesis to populate resourceArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "namePrefix": {
                    "description": "The Name Prefix to use when creating an in-application stream.",
                    "type": "string"
                  },
                  "parallelism": {
                    "description": "The number of Parallel in-application streams to create.\nSee Parallelism below for more details.",
                    "items": {
                      "properties": {
                        "count": {
                          "description": "The Count of streams.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "processingConfiguration": {
                    "description": "The Processing Configuration to transform records as they are received from the stream.\nSee Processing Configuration below for more details.",
                    "items": {
                      "properties": {
                        "lambda": {
                          "description": "The Lambda function configuration. See Lambda below for more details.",
                          "items": {
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function.",
                                "type": "string"
                              },
                              "roleArn": {
                                "description": "The IAM Role ARN to read the data.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "The Schema format of the data in the streaming source. See Source Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordColumns": {
                          "description": "The Record Column mapping for the streaming source data element.\nSee Record Columns below for more details.",
                          "items": {
                            "properties": {
                              "mapping": {
                                "description": "The Mapping reference to the data element.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the column.",
                                "type": "string"
                              },
                              "sqlType": {
                                "description": "The SQL Type of the column.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "recordEncoding": {
                          "description": "The Encoding of the record in the streaming source.",
                          "type": "string"
                        },
                        "recordFormat": {
                          "description": "The Record Format and mapping information to schematize a record.\nSee Record Format below for more details.",
                          "items": {
                            "properties": {
                              "mappingParameters": {
                                "description": "The Mapping Information for the record format.\nSee Mapping Parameters below for more details.",
                                "items": {
                                  "properties": {
                                    "csv": {
                                      "description": "Mapping information when the record format uses delimiters.\nSee CSV Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordColumnDelimiter": {
                                            "description": "The Column Delimiter.",
                                            "type": "string"
                                          },
                                          "recordRowDelimiter": {
                                            "description": "The Row Delimiter.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "json": {
                                      "description": "Mapping information when JSON is the record format on the streaming source.\nSee JSON Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordRowPath": {
                                            "description": "Path to the top-level parent that contains the records.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "startingPositionConfiguration": {
                    "description": "The point at which the application starts processing records from the streaming source.\nSee Starting Position Configuration below for more details.",
                    "items": {
                      "properties": {
                        "startingPosition": {
                          "description": "The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "outputs": {
              "description": "Output destination configuration of the application. See Outputs below for more details.",
              "items": {
                "properties": {
                  "kinesisFirehose": {
                    "description": "The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.\nSee Kinesis Firehose below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a DeliveryStream in firehose to populate resourceArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a DeliveryStream in firehose to populate resourceArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kinesisStream": {
                    "description": "The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.\nSee Kinesis Stream below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "lambda": {
                    "description": "The Lambda function destination. See Lambda below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "The Name of the in-application stream.",
                    "type": "string"
                  },
                  "schema": {
                    "description": "The Schema format of the data written to the destination. See Destination Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordFormatType": {
                          "description": "The Format Type of the records on the output stream. Can be CSV or JSON.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "referenceDataSources": {
              "description": "An S3 Reference Data Source for the application.\nSee Reference Data Sources below for more details.",
              "items": {
                "properties": {
                  "s3": {
                    "description": "The S3 configuration for the reference data source. See S3 Reference below for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The S3 Bucket ARN.",
                          "type": "string"
                        },
                        "fileKey": {
                          "description": "The File Key name containing reference data.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "The Schema format of the data in the streaming source. See Source Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordColumns": {
                          "description": "The Record Column mapping for the streaming source data element.\nSee Record Columns below for more details.",
                          "items": {
                            "properties": {
                              "mapping": {
                                "description": "The Mapping reference to the data element.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the column.",
                                "type": "string"
                              },
                              "sqlType": {
                                "description": "The SQL Type of the column.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "recordEncoding": {
                          "description": "The Encoding of the record in the streaming source.",
                          "type": "string"
                        },
                        "recordFormat": {
                          "description": "The Record Format and mapping information to schematize a record.\nSee Record Format below for more details.",
                          "items": {
                            "properties": {
                              "mappingParameters": {
                                "description": "The Mapping Information for the record format.\nSee Mapping Parameters below for more details.",
                                "items": {
                                  "properties": {
                                    "csv": {
                                      "description": "Mapping information when the record format uses delimiters.\nSee CSV Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordColumnDelimiter": {
                                            "description": "The Column Delimiter.",
                                            "type": "string"
                                          },
                                          "recordRowDelimiter": {
                                            "description": "The Row Delimiter.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "json": {
                                      "description": "Mapping information when JSON is the record format on the streaming source.\nSee JSON Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordRowPath": {
                                            "description": "Path to the top-level parent that contains the records.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "tableName": {
                    "description": "The in-application Table Name.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "startApplication": {
              "description": "Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.\nTo modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.",
              "type": "boolean"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "cloudwatchLoggingOptions": {
              "description": "The CloudWatch log stream options to monitor application errors.\nSee CloudWatch Logging Options below for more details.",
              "items": {
                "properties": {
                  "logStreamArn": {
                    "description": "The ARN of the CloudWatch Log Stream.",
                    "type": "string"
                  },
                  "logStreamArnRef": {
                    "description": "Reference to a Stream in cloudwatchlogs to populate logStreamArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "logStreamArnSelector": {
                    "description": "Selector for a Stream in cloudwatchlogs to populate logStreamArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArn": {
                    "description": "The ARN of the IAM Role used to send application messages.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "code": {
              "description": "SQL Code to transform input data, and generate output.",
              "type": "string"
            },
            "description": {
              "description": "Description of the application.",
              "type": "string"
            },
            "inputs": {
              "description": "Input configuration of the application. See Inputs below for more details.",
              "items": {
                "properties": {
                  "kinesisFirehose": {
                    "description": "The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.\nSee Kinesis Firehose below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kinesisStream": {
                    "description": "The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.\nSee Kinesis Stream below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a Stream in kinesis to populate resourceArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a Stream in kinesis to populate resourceArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "namePrefix": {
                    "description": "The Name Prefix to use when creating an in-application stream.",
                    "type": "string"
                  },
                  "parallelism": {
                    "description": "The number of Parallel in-application streams to create.\nSee Parallelism below for more details.",
                    "items": {
                      "properties": {
                        "count": {
                          "description": "The Count of streams.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "processingConfiguration": {
                    "description": "The Processing Configuration to transform records as they are received from the stream.\nSee Processing Configuration below for more details.",
                    "items": {
                      "properties": {
                        "lambda": {
                          "description": "The Lambda function configuration. See Lambda below for more details.",
                          "items": {
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function.",
                                "type": "string"
                              },
                              "roleArn": {
                                "description": "The IAM Role ARN to read the data.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "The Schema format of the data in the streaming source. See Source Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordColumns": {
                          "description": "The Record Column mapping for the streaming source data element.\nSee Record Columns below for more details.",
                          "items": {
                            "properties": {
                              "mapping": {
                                "description": "The Mapping reference to the data element.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the column.",
                                "type": "string"
                              },
                              "sqlType": {
                                "description": "The SQL Type of the column.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "recordEncoding": {
                          "description": "The Encoding of the record in the streaming source.",
                          "type": "string"
                        },
                        "recordFormat": {
                          "description": "The Record Format and mapping information to schematize a record.\nSee Record Format below for more details.",
                          "items": {
                            "properties": {
                              "mappingParameters": {
                                "description": "The Mapping Information for the record format.\nSee Mapping Parameters below for more details.",
                                "items": {
                                  "properties": {
                                    "csv": {
                                      "description": "Mapping information when the record format uses delimiters.\nSee CSV Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordColumnDelimiter": {
                                            "description": "The Column Delimiter.",
                                            "type": "string"
                                          },
                                          "recordRowDelimiter": {
                                            "description": "The Row Delimiter.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "json": {
                                      "description": "Mapping information when JSON is the record format on the streaming source.\nSee JSON Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordRowPath": {
                                            "description": "Path to the top-level parent that contains the records.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "startingPositionConfiguration": {
                    "description": "The point at which the application starts processing records from the streaming source.\nSee Starting Position Configuration below for more details.",
                    "items": {
                      "properties": {
                        "startingPosition": {
                          "description": "The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "outputs": {
              "description": "Output destination configuration of the application. See Outputs below for more details.",
              "items": {
                "properties": {
                  "kinesisFirehose": {
                    "description": "The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.\nSee Kinesis Firehose below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a DeliveryStream in firehose to populate resourceArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a DeliveryStream in firehose to populate resourceArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        },
                        "roleArnRef": {
                          "description": "Reference to a Role in iam to populate roleArn.",
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "roleArnSelector": {
                          "description": "Selector for a Role in iam to populate roleArn.",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "properties": {
                                "resolution": {
                                  "default": "Required",
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ],
                                  "type": "string"
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kinesisStream": {
                    "description": "The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.\nSee Kinesis Stream below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "lambda": {
                    "description": "The Lambda function destination. See Lambda below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "The Name of the in-application stream.",
                    "type": "string"
                  },
                  "schema": {
                    "description": "The Schema format of the data written to the destination. See Destination Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordFormatType": {
                          "description": "The Format Type of the records on the output stream. Can be CSV or JSON.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "referenceDataSources": {
              "description": "An S3 Reference Data Source for the application.\nSee Reference Data Sources below for more details.",
              "items": {
                "properties": {
                  "s3": {
                    "description": "The S3 configuration for the reference data source. See S3 Reference below for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The S3 Bucket ARN.",
                          "type": "string"
                        },
                        "fileKey": {
                          "description": "The File Key name containing reference data.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "The Schema format of the data in the streaming source. See Source Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordColumns": {
                          "description": "The Record Column mapping for the streaming source data element.\nSee Record Columns below for more details.",
                          "items": {
                            "properties": {
                              "mapping": {
                                "description": "The Mapping reference to the data element.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the column.",
                                "type": "string"
                              },
                              "sqlType": {
                                "description": "The SQL Type of the column.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "recordEncoding": {
                          "description": "The Encoding of the record in the streaming source.",
                          "type": "string"
                        },
                        "recordFormat": {
                          "description": "The Record Format and mapping information to schematize a record.\nSee Record Format below for more details.",
                          "items": {
                            "properties": {
                              "mappingParameters": {
                                "description": "The Mapping Information for the record format.\nSee Mapping Parameters below for more details.",
                                "items": {
                                  "properties": {
                                    "csv": {
                                      "description": "Mapping information when the record format uses delimiters.\nSee CSV Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordColumnDelimiter": {
                                            "description": "The Column Delimiter.",
                                            "type": "string"
                                          },
                                          "recordRowDelimiter": {
                                            "description": "The Row Delimiter.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "json": {
                                      "description": "Mapping information when JSON is the record format on the streaming source.\nSee JSON Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordRowPath": {
                                            "description": "Path to the top-level parent that contains the records.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "tableName": {
                    "description": "The in-application Table Name.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "startApplication": {
              "description": "Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.\nTo modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.",
              "type": "boolean"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ApplicationStatus defines the observed state of Application.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "The ARN of the Kinesis Analytics Appliation.",
              "type": "string"
            },
            "cloudwatchLoggingOptions": {
              "description": "The CloudWatch log stream options to monitor application errors.\nSee CloudWatch Logging Options below for more details.",
              "items": {
                "properties": {
                  "id": {
                    "description": "The ARN of the Kinesis Analytics Application.",
                    "type": "string"
                  },
                  "logStreamArn": {
                    "description": "The ARN of the CloudWatch Log Stream.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The ARN of the IAM Role used to send application messages.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "code": {
              "description": "SQL Code to transform input data, and generate output.",
              "type": "string"
            },
            "createTimestamp": {
              "description": "The Timestamp when the application version was created.",
              "type": "string"
            },
            "description": {
              "description": "Description of the application.",
              "type": "string"
            },
            "id": {
              "description": "The ARN of the Kinesis Analytics Application.",
              "type": "string"
            },
            "inputs": {
              "description": "Input configuration of the application. See Inputs below for more details.",
              "items": {
                "properties": {
                  "id": {
                    "description": "The ARN of the Kinesis Analytics Application.",
                    "type": "string"
                  },
                  "kinesisFirehose": {
                    "description": "The Kinesis Firehose configuration for the streaming source. Conflicts with kinesis_stream.\nSee Kinesis Firehose below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kinesisStream": {
                    "description": "The Kinesis Stream configuration for the streaming source. Conflicts with kinesis_firehose.\nSee Kinesis Stream below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "namePrefix": {
                    "description": "The Name Prefix to use when creating an in-application stream.",
                    "type": "string"
                  },
                  "parallelism": {
                    "description": "The number of Parallel in-application streams to create.\nSee Parallelism below for more details.",
                    "items": {
                      "properties": {
                        "count": {
                          "description": "The Count of streams.",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "processingConfiguration": {
                    "description": "The Processing Configuration to transform records as they are received from the stream.\nSee Processing Configuration below for more details.",
                    "items": {
                      "properties": {
                        "lambda": {
                          "description": "The Lambda function configuration. See Lambda below for more details.",
                          "items": {
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function.",
                                "type": "string"
                              },
                              "roleArn": {
                                "description": "The IAM Role ARN to read the data.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "The Schema format of the data in the streaming source. See Source Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordColumns": {
                          "description": "The Record Column mapping for the streaming source data element.\nSee Record Columns below for more details.",
                          "items": {
                            "properties": {
                              "mapping": {
                                "description": "The Mapping reference to the data element.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the column.",
                                "type": "string"
                              },
                              "sqlType": {
                                "description": "The SQL Type of the column.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "recordEncoding": {
                          "description": "The Encoding of the record in the streaming source.",
                          "type": "string"
                        },
                        "recordFormat": {
                          "description": "The Record Format and mapping information to schematize a record.\nSee Record Format below for more details.",
                          "items": {
                            "properties": {
                              "mappingParameters": {
                                "description": "The Mapping Information for the record format.\nSee Mapping Parameters below for more details.",
                                "items": {
                                  "properties": {
                                    "csv": {
                                      "description": "Mapping information when the record format uses delimiters.\nSee CSV Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordColumnDelimiter": {
                                            "description": "The Column Delimiter.",
                                            "type": "string"
                                          },
                                          "recordRowDelimiter": {
                                            "description": "The Row Delimiter.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "json": {
                                      "description": "Mapping information when JSON is the record format on the streaming source.\nSee JSON Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordRowPath": {
                                            "description": "Path to the top-level parent that contains the records.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "recordFormatType": {
                                "description": "The Format Type of the records on the output stream. Can be CSV or JSON.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "startingPositionConfiguration": {
                    "description": "The point at which the application starts processing records from the streaming source.\nSee Starting Position Configuration below for more details.",
                    "items": {
                      "properties": {
                        "startingPosition": {
                          "description": "The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "streamNames": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "lastUpdateTimestamp": {
              "description": "The Timestamp when the application was last updated.",
              "type": "string"
            },
            "outputs": {
              "description": "Output destination configuration of the application. See Outputs below for more details.",
              "items": {
                "properties": {
                  "id": {
                    "description": "The ARN of the Kinesis Analytics Application.",
                    "type": "string"
                  },
                  "kinesisFirehose": {
                    "description": "The Kinesis Firehose configuration for the destination stream. Conflicts with kinesis_stream.\nSee Kinesis Firehose below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kinesisStream": {
                    "description": "The Kinesis Stream configuration for the destination stream. Conflicts with kinesis_firehose.\nSee Kinesis Stream below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "lambda": {
                    "description": "The Lambda function destination. See Lambda below for more details.",
                    "items": {
                      "properties": {
                        "resourceArn": {
                          "description": "The ARN of the Lambda function.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "The Name of the in-application stream.",
                    "type": "string"
                  },
                  "schema": {
                    "description": "The Schema format of the data written to the destination. See Destination Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordFormatType": {
                          "description": "The Format Type of the records on the output stream. Can be CSV or JSON.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "referenceDataSources": {
              "description": "An S3 Reference Data Source for the application.\nSee Reference Data Sources below for more details.",
              "items": {
                "properties": {
                  "id": {
                    "description": "The ARN of the Kinesis Analytics Application.",
                    "type": "string"
                  },
                  "s3": {
                    "description": "The S3 configuration for the reference data source. See S3 Reference below for more details.",
                    "items": {
                      "properties": {
                        "bucketArn": {
                          "description": "The S3 Bucket ARN.",
                          "type": "string"
                        },
                        "fileKey": {
                          "description": "The File Key name containing reference data.",
                          "type": "string"
                        },
                        "roleArn": {
                          "description": "The IAM Role ARN to read the data.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "The Schema format of the data in the streaming source. See Source Schema below for more details.",
                    "items": {
                      "properties": {
                        "recordColumns": {
                          "description": "The Record Column mapping for the streaming source data element.\nSee Record Columns below for more details.",
                          "items": {
                            "properties": {
                              "mapping": {
                                "description": "The Mapping reference to the data element.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the column.",
                                "type": "string"
                              },
                              "sqlType": {
                                "description": "The SQL Type of the column.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "recordEncoding": {
                          "description": "The Encoding of the record in the streaming source.",
                          "type": "string"
                        },
                        "recordFormat": {
                          "description": "The Record Format and mapping information to schematize a record.\nSee Record Format below for more details.",
                          "items": {
                            "properties": {
                              "mappingParameters": {
                                "description": "The Mapping Information for the record format.\nSee Mapping Parameters below for more details.",
                                "items": {
                                  "properties": {
                                    "csv": {
                                      "description": "Mapping information when the record format uses delimiters.\nSee CSV Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordColumnDelimiter": {
                                            "description": "The Column Delimiter.",
                                            "type": "string"
                                          },
                                          "recordRowDelimiter": {
                                            "description": "The Row Delimiter.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "json": {
                                      "description": "Mapping information when JSON is the record format on the streaming source.\nSee JSON Mapping Parameters below for more details.",
                                      "items": {
                                        "properties": {
                                          "recordRowPath": {
                                            "description": "Path to the top-level parent that contains the records.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "recordFormatType": {
                                "description": "The Format Type of the records on the output stream. Can be CSV or JSON.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "tableName": {
                    "description": "The in-application Table Name.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "startApplication": {
              "description": "Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined starting_position must be configured.\nTo modify an application's starting position, first stop the application by setting start_application = false, then update starting_position and set start_application = true.",
              "type": "boolean"
            },
            "status": {
              "description": "The Status of the application.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "version": {
              "description": "The Version of the application.",
              "type": "number"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
