{
  "description": "VirtualNode is the Schema for the VirtualNodes API. Provides an AWS App Mesh virtual node resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VirtualNodeSpec defines the desired state of VirtualNode",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshNameRef": {
              "description": "Reference to a Mesh in appmesh to populate meshName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "meshNameSelector": {
              "description": "Selector for a Mesh in appmesh to populate meshName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the virtual node. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "spec": {
              "description": "Virtual node specification to apply.",
              "items": {
                "properties": {
                  "backend": {
                    "description": "Backends to which the virtual node is expected to send outbound traffic.",
                    "items": {
                      "properties": {
                        "virtualService": {
                          "description": "Virtual service to use as a backend for a virtual node.",
                          "items": {
                            "properties": {
                              "clientPolicy": {
                                "description": "Client policy for the backend.",
                                "items": {
                                  "properties": {
                                    "tls": {
                                      "description": "Transport Layer Security (TLS) client policy.",
                                      "items": {
                                        "properties": {
                                          "certificate": {
                                            "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                            "items": {
                                              "properties": {
                                                "file": {
                                                  "description": "Local file certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateChain": {
                                                        "description": "Certificate chain for the certificate.",
                                                        "type": "string"
                                                      },
                                                      "privateKey": {
                                                        "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "sds": {
                                                  "description": "A Secret Discovery Service certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "secretName": {
                                                        "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "enforce": {
                                            "description": "Whether the policy is enforced. Default is true.",
                                            "type": "boolean"
                                          },
                                          "ports": {
                                            "description": "One or more ports that the policy is enforced for.",
                                            "items": {
                                              "type": "number"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                          },
                                          "validation": {
                                            "description": "TLS validation context.",
                                            "items": {
                                              "properties": {
                                                "subjectAlternativeNames": {
                                                  "description": "SANs for a TLS validation context.",
                                                  "items": {
                                                    "properties": {
                                                      "match": {
                                                        "description": "Criteria for determining a SAN's match.",
                                                        "items": {
                                                          "properties": {
                                                            "exact": {
                                                              "description": "Values sent must match the specified values exactly.",
                                                              "items": {
                                                                "type": "string"
                                                              },
                                                              "type": "array",
                                                              "x-kubernetes-list-type": "set"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "trust": {
                                                  "description": "TLS validation context trust.",
                                                  "items": {
                                                    "properties": {
                                                      "acm": {
                                                        "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "certificateAuthorityArns": {
                                                              "description": "One or more ACM ARNs.",
                                                              "items": {
                                                                "type": "string"
                                                              },
                                                              "type": "array",
                                                              "x-kubernetes-list-type": "set"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      },
                                                      "file": {
                                                        "description": "Local file certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "certificateChain": {
                                                              "description": "Certificate chain for the certificate.",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      },
                                                      "sds": {
                                                        "description": "A Secret Discovery Service certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "secretName": {
                                                              "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "virtualServiceName": {
                                "description": "Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "backendDefaults": {
                    "description": "Defaults for backends.",
                    "items": {
                      "properties": {
                        "clientPolicy": {
                          "description": "Client policy for the backend.",
                          "items": {
                            "properties": {
                              "tls": {
                                "description": "Transport Layer Security (TLS) client policy.",
                                "items": {
                                  "properties": {
                                    "certificate": {
                                      "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                      "items": {
                                        "properties": {
                                          "file": {
                                            "description": "Local file certificate.",
                                            "items": {
                                              "properties": {
                                                "certificateChain": {
                                                  "description": "Certificate chain for the certificate.",
                                                  "type": "string"
                                                },
                                                "privateKey": {
                                                  "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "sds": {
                                            "description": "A Secret Discovery Service certificate.",
                                            "items": {
                                              "properties": {
                                                "secretName": {
                                                  "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "enforce": {
                                      "description": "Whether the policy is enforced. Default is true.",
                                      "type": "boolean"
                                    },
                                    "ports": {
                                      "description": "One or more ports that the policy is enforced for.",
                                      "items": {
                                        "type": "number"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "set"
                                    },
                                    "validation": {
                                      "description": "TLS validation context.",
                                      "items": {
                                        "properties": {
                                          "subjectAlternativeNames": {
                                            "description": "SANs for a TLS validation context.",
                                            "items": {
                                              "properties": {
                                                "match": {
                                                  "description": "Criteria for determining a SAN's match.",
                                                  "items": {
                                                    "properties": {
                                                      "exact": {
                                                        "description": "Values sent must match the specified values exactly.",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-type": "set"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "trust": {
                                            "description": "TLS validation context trust.",
                                            "items": {
                                              "properties": {
                                                "acm": {
                                                  "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateAuthorityArns": {
                                                        "description": "One or more ACM ARNs.",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-type": "set"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "file": {
                                                  "description": "Local file certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateChain": {
                                                        "description": "Certificate chain for the certificate.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "sds": {
                                                  "description": "A Secret Discovery Service certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "secretName": {
                                                        "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "listener": {
                    "description": "Listeners from which the virtual node is expected to receive inbound traffic.",
                    "items": {
                      "properties": {
                        "connectionPool": {
                          "description": "Connection pool information for the listener.",
                          "items": {
                            "properties": {
                              "grpc": {
                                "description": "Connection pool information for gRPC listeners.",
                                "items": {
                                  "properties": {
                                    "maxRequests": {
                                      "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http": {
                                "description": "Connection pool information for HTTP listeners.",
                                "items": {
                                  "properties": {
                                    "maxConnections": {
                                      "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    },
                                    "maxPendingRequests": {
                                      "description": "Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http2": {
                                "description": "Connection pool information for HTTP2 listeners.",
                                "items": {
                                  "properties": {
                                    "maxRequests": {
                                      "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "tcp": {
                                "description": "Connection pool information for TCP listeners.",
                                "items": {
                                  "properties": {
                                    "maxConnections": {
                                      "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "healthCheck": {
                          "description": "Health check information for the listener.",
                          "items": {
                            "properties": {
                              "healthyThreshold": {
                                "description": "Number of consecutive successful health checks that must occur before declaring listener healthy.",
                                "type": "number"
                              },
                              "intervalMillis": {
                                "description": "Time period in milliseconds between each health check execution.",
                                "type": "number"
                              },
                              "path": {
                                "description": "File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Port used for the port mapping.",
                                "type": "number"
                              },
                              "protocol": {
                                "description": "Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.",
                                "type": "string"
                              },
                              "timeoutMillis": {
                                "description": "Amount of time to wait when receiving a response from the health check, in milliseconds.",
                                "type": "number"
                              },
                              "unhealthyThreshold": {
                                "description": "Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "outlierDetection": {
                          "description": "Outlier detection information for the listener.",
                          "items": {
                            "properties": {
                              "baseEjectionDuration": {
                                "description": "Base amount of time for which a host is ejected.",
                                "items": {
                                  "properties": {
                                    "unit": {
                                      "description": "Unit of time. Valid values: ms, s.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "interval": {
                                "description": "Time interval between ejection sweep analysis.",
                                "items": {
                                  "properties": {
                                    "unit": {
                                      "description": "Unit of time. Valid values: ms, s.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "maxEjectionPercent": {
                                "description": "Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\nMinimum value of 0. Maximum value of 100.",
                                "type": "number"
                              },
                              "maxServerErrors": {
                                "description": "Number of consecutive 5xx errors required for ejection. Minimum value of 1.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "portMapping": {
                          "description": "Port mapping information for the listener.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "Port used for the port mapping.",
                                "type": "number"
                              },
                              "protocol": {
                                "description": "Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "timeout": {
                          "description": "Timeouts for different protocols.",
                          "items": {
                            "properties": {
                              "grpc": {
                                "description": "Connection pool information for gRPC listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http": {
                                "description": "Connection pool information for HTTP listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http2": {
                                "description": "Connection pool information for HTTP2 listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "tcp": {
                                "description": "Connection pool information for TCP listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "tls": {
                          "description": "Transport Layer Security (TLS) client policy.",
                          "items": {
                            "properties": {
                              "certificate": {
                                "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                "items": {
                                  "properties": {
                                    "acm": {
                                      "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                      "items": {
                                        "properties": {
                                          "certificateArn": {
                                            "description": "ARN for the certificate.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "file": {
                                      "description": "Local file certificate.",
                                      "items": {
                                        "properties": {
                                          "certificateChain": {
                                            "description": "Certificate chain for the certificate.",
                                            "type": "string"
                                          },
                                          "privateKey": {
                                            "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "sds": {
                                      "description": "A Secret Discovery Service certificate.",
                                      "items": {
                                        "properties": {
                                          "secretName": {
                                            "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "mode": {
                                "description": "Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.",
                                "type": "string"
                              },
                              "validation": {
                                "description": "TLS validation context.",
                                "items": {
                                  "properties": {
                                    "subjectAlternativeNames": {
                                      "description": "SANs for a TLS validation context.",
                                      "items": {
                                        "properties": {
                                          "match": {
                                            "description": "Criteria for determining a SAN's match.",
                                            "items": {
                                              "properties": {
                                                "exact": {
                                                  "description": "Values sent must match the specified values exactly.",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array",
                                                  "x-kubernetes-list-type": "set"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "trust": {
                                      "description": "TLS validation context trust.",
                                      "items": {
                                        "properties": {
                                          "file": {
                                            "description": "Local file certificate.",
                                            "items": {
                                              "properties": {
                                                "certificateChain": {
                                                  "description": "Certificate chain for the certificate.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "sds": {
                                            "description": "A Secret Discovery Service certificate.",
                                            "items": {
                                              "properties": {
                                                "secretName": {
                                                  "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "logging": {
                    "description": "Inbound and outbound access logging information for the virtual node.",
                    "items": {
                      "properties": {
                        "accessLog": {
                          "description": "Access log configuration for a virtual node.",
                          "items": {
                            "properties": {
                              "file": {
                                "description": "Local file certificate.",
                                "items": {
                                  "properties": {
                                    "format": {
                                      "description": "The specified format for the logs.",
                                      "items": {
                                        "properties": {
                                          "json": {
                                            "description": "The logging format for JSON.",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "The specified key for the JSON. Must be between 1 and 100 characters in length.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "text": {
                                            "description": "The logging format for text. Must be between 1 and 1000 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "path": {
                                      "description": "File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "serviceDiscovery": {
                    "description": "Service discovery information for the virtual node.",
                    "items": {
                      "properties": {
                        "awsCloudMap": {
                          "description": "Any AWS Cloud Map information for the virtual node.",
                          "items": {
                            "properties": {
                              "attributes": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.",
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "namespaceName": {
                                "description": "Name of the AWS Cloud Map namespace to use.\nUse the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.",
                                "type": "string"
                              },
                              "namespaceNameRef": {
                                "description": "Reference to a HTTPNamespace in servicediscovery to populate namespaceName.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "namespaceNameSelector": {
                                "description": "Selector for a HTTPNamespace in servicediscovery to populate namespaceName.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "serviceName": {
                                "description": "attribute of the dns object to hostname.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "dns": {
                          "description": "DNS service name for the virtual node.",
                          "items": {
                            "properties": {
                              "hostname": {
                                "description": "DNS host name for your virtual node.",
                                "type": "string"
                              },
                              "ipPreference": {
                                "description": "The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.",
                                "type": "string"
                              },
                              "responseType": {
                                "description": "The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshNameRef": {
              "description": "Reference to a Mesh in appmesh to populate meshName.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "meshNameSelector": {
              "description": "Selector for a Mesh in appmesh to populate meshName.",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the virtual node. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "spec": {
              "description": "Virtual node specification to apply.",
              "items": {
                "properties": {
                  "backend": {
                    "description": "Backends to which the virtual node is expected to send outbound traffic.",
                    "items": {
                      "properties": {
                        "virtualService": {
                          "description": "Virtual service to use as a backend for a virtual node.",
                          "items": {
                            "properties": {
                              "clientPolicy": {
                                "description": "Client policy for the backend.",
                                "items": {
                                  "properties": {
                                    "tls": {
                                      "description": "Transport Layer Security (TLS) client policy.",
                                      "items": {
                                        "properties": {
                                          "certificate": {
                                            "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                            "items": {
                                              "properties": {
                                                "file": {
                                                  "description": "Local file certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateChain": {
                                                        "description": "Certificate chain for the certificate.",
                                                        "type": "string"
                                                      },
                                                      "privateKey": {
                                                        "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "sds": {
                                                  "description": "A Secret Discovery Service certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "secretName": {
                                                        "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "enforce": {
                                            "description": "Whether the policy is enforced. Default is true.",
                                            "type": "boolean"
                                          },
                                          "ports": {
                                            "description": "One or more ports that the policy is enforced for.",
                                            "items": {
                                              "type": "number"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                          },
                                          "validation": {
                                            "description": "TLS validation context.",
                                            "items": {
                                              "properties": {
                                                "subjectAlternativeNames": {
                                                  "description": "SANs for a TLS validation context.",
                                                  "items": {
                                                    "properties": {
                                                      "match": {
                                                        "description": "Criteria for determining a SAN's match.",
                                                        "items": {
                                                          "properties": {
                                                            "exact": {
                                                              "description": "Values sent must match the specified values exactly.",
                                                              "items": {
                                                                "type": "string"
                                                              },
                                                              "type": "array",
                                                              "x-kubernetes-list-type": "set"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "trust": {
                                                  "description": "TLS validation context trust.",
                                                  "items": {
                                                    "properties": {
                                                      "acm": {
                                                        "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "certificateAuthorityArns": {
                                                              "description": "One or more ACM ARNs.",
                                                              "items": {
                                                                "type": "string"
                                                              },
                                                              "type": "array",
                                                              "x-kubernetes-list-type": "set"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      },
                                                      "file": {
                                                        "description": "Local file certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "certificateChain": {
                                                              "description": "Certificate chain for the certificate.",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      },
                                                      "sds": {
                                                        "description": "A Secret Discovery Service certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "secretName": {
                                                              "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "virtualServiceName": {
                                "description": "Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "backendDefaults": {
                    "description": "Defaults for backends.",
                    "items": {
                      "properties": {
                        "clientPolicy": {
                          "description": "Client policy for the backend.",
                          "items": {
                            "properties": {
                              "tls": {
                                "description": "Transport Layer Security (TLS) client policy.",
                                "items": {
                                  "properties": {
                                    "certificate": {
                                      "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                      "items": {
                                        "properties": {
                                          "file": {
                                            "description": "Local file certificate.",
                                            "items": {
                                              "properties": {
                                                "certificateChain": {
                                                  "description": "Certificate chain for the certificate.",
                                                  "type": "string"
                                                },
                                                "privateKey": {
                                                  "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "sds": {
                                            "description": "A Secret Discovery Service certificate.",
                                            "items": {
                                              "properties": {
                                                "secretName": {
                                                  "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "enforce": {
                                      "description": "Whether the policy is enforced. Default is true.",
                                      "type": "boolean"
                                    },
                                    "ports": {
                                      "description": "One or more ports that the policy is enforced for.",
                                      "items": {
                                        "type": "number"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "set"
                                    },
                                    "validation": {
                                      "description": "TLS validation context.",
                                      "items": {
                                        "properties": {
                                          "subjectAlternativeNames": {
                                            "description": "SANs for a TLS validation context.",
                                            "items": {
                                              "properties": {
                                                "match": {
                                                  "description": "Criteria for determining a SAN's match.",
                                                  "items": {
                                                    "properties": {
                                                      "exact": {
                                                        "description": "Values sent must match the specified values exactly.",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-type": "set"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "trust": {
                                            "description": "TLS validation context trust.",
                                            "items": {
                                              "properties": {
                                                "acm": {
                                                  "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateAuthorityArns": {
                                                        "description": "One or more ACM ARNs.",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-type": "set"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "file": {
                                                  "description": "Local file certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateChain": {
                                                        "description": "Certificate chain for the certificate.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "sds": {
                                                  "description": "A Secret Discovery Service certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "secretName": {
                                                        "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "listener": {
                    "description": "Listeners from which the virtual node is expected to receive inbound traffic.",
                    "items": {
                      "properties": {
                        "connectionPool": {
                          "description": "Connection pool information for the listener.",
                          "items": {
                            "properties": {
                              "grpc": {
                                "description": "Connection pool information for gRPC listeners.",
                                "items": {
                                  "properties": {
                                    "maxRequests": {
                                      "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http": {
                                "description": "Connection pool information for HTTP listeners.",
                                "items": {
                                  "properties": {
                                    "maxConnections": {
                                      "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    },
                                    "maxPendingRequests": {
                                      "description": "Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http2": {
                                "description": "Connection pool information for HTTP2 listeners.",
                                "items": {
                                  "properties": {
                                    "maxRequests": {
                                      "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "tcp": {
                                "description": "Connection pool information for TCP listeners.",
                                "items": {
                                  "properties": {
                                    "maxConnections": {
                                      "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "healthCheck": {
                          "description": "Health check information for the listener.",
                          "items": {
                            "properties": {
                              "healthyThreshold": {
                                "description": "Number of consecutive successful health checks that must occur before declaring listener healthy.",
                                "type": "number"
                              },
                              "intervalMillis": {
                                "description": "Time period in milliseconds between each health check execution.",
                                "type": "number"
                              },
                              "path": {
                                "description": "File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Port used for the port mapping.",
                                "type": "number"
                              },
                              "protocol": {
                                "description": "Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.",
                                "type": "string"
                              },
                              "timeoutMillis": {
                                "description": "Amount of time to wait when receiving a response from the health check, in milliseconds.",
                                "type": "number"
                              },
                              "unhealthyThreshold": {
                                "description": "Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "outlierDetection": {
                          "description": "Outlier detection information for the listener.",
                          "items": {
                            "properties": {
                              "baseEjectionDuration": {
                                "description": "Base amount of time for which a host is ejected.",
                                "items": {
                                  "properties": {
                                    "unit": {
                                      "description": "Unit of time. Valid values: ms, s.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "interval": {
                                "description": "Time interval between ejection sweep analysis.",
                                "items": {
                                  "properties": {
                                    "unit": {
                                      "description": "Unit of time. Valid values: ms, s.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "maxEjectionPercent": {
                                "description": "Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\nMinimum value of 0. Maximum value of 100.",
                                "type": "number"
                              },
                              "maxServerErrors": {
                                "description": "Number of consecutive 5xx errors required for ejection. Minimum value of 1.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "portMapping": {
                          "description": "Port mapping information for the listener.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "Port used for the port mapping.",
                                "type": "number"
                              },
                              "protocol": {
                                "description": "Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "timeout": {
                          "description": "Timeouts for different protocols.",
                          "items": {
                            "properties": {
                              "grpc": {
                                "description": "Connection pool information for gRPC listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http": {
                                "description": "Connection pool information for HTTP listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http2": {
                                "description": "Connection pool information for HTTP2 listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "tcp": {
                                "description": "Connection pool information for TCP listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "tls": {
                          "description": "Transport Layer Security (TLS) client policy.",
                          "items": {
                            "properties": {
                              "certificate": {
                                "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                "items": {
                                  "properties": {
                                    "acm": {
                                      "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                      "items": {
                                        "properties": {
                                          "certificateArn": {
                                            "description": "ARN for the certificate.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "file": {
                                      "description": "Local file certificate.",
                                      "items": {
                                        "properties": {
                                          "certificateChain": {
                                            "description": "Certificate chain for the certificate.",
                                            "type": "string"
                                          },
                                          "privateKey": {
                                            "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "sds": {
                                      "description": "A Secret Discovery Service certificate.",
                                      "items": {
                                        "properties": {
                                          "secretName": {
                                            "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "mode": {
                                "description": "Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.",
                                "type": "string"
                              },
                              "validation": {
                                "description": "TLS validation context.",
                                "items": {
                                  "properties": {
                                    "subjectAlternativeNames": {
                                      "description": "SANs for a TLS validation context.",
                                      "items": {
                                        "properties": {
                                          "match": {
                                            "description": "Criteria for determining a SAN's match.",
                                            "items": {
                                              "properties": {
                                                "exact": {
                                                  "description": "Values sent must match the specified values exactly.",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array",
                                                  "x-kubernetes-list-type": "set"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "trust": {
                                      "description": "TLS validation context trust.",
                                      "items": {
                                        "properties": {
                                          "file": {
                                            "description": "Local file certificate.",
                                            "items": {
                                              "properties": {
                                                "certificateChain": {
                                                  "description": "Certificate chain for the certificate.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "sds": {
                                            "description": "A Secret Discovery Service certificate.",
                                            "items": {
                                              "properties": {
                                                "secretName": {
                                                  "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "logging": {
                    "description": "Inbound and outbound access logging information for the virtual node.",
                    "items": {
                      "properties": {
                        "accessLog": {
                          "description": "Access log configuration for a virtual node.",
                          "items": {
                            "properties": {
                              "file": {
                                "description": "Local file certificate.",
                                "items": {
                                  "properties": {
                                    "format": {
                                      "description": "The specified format for the logs.",
                                      "items": {
                                        "properties": {
                                          "json": {
                                            "description": "The logging format for JSON.",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "The specified key for the JSON. Must be between 1 and 100 characters in length.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "text": {
                                            "description": "The logging format for text. Must be between 1 and 1000 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "path": {
                                      "description": "File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "serviceDiscovery": {
                    "description": "Service discovery information for the virtual node.",
                    "items": {
                      "properties": {
                        "awsCloudMap": {
                          "description": "Any AWS Cloud Map information for the virtual node.",
                          "items": {
                            "properties": {
                              "attributes": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.",
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "namespaceName": {
                                "description": "Name of the AWS Cloud Map namespace to use.\nUse the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.",
                                "type": "string"
                              },
                              "namespaceNameRef": {
                                "description": "Reference to a HTTPNamespace in servicediscovery to populate namespaceName.",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "namespaceNameSelector": {
                                "description": "Selector for a HTTPNamespace in servicediscovery to populate namespaceName.",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "properties": {
                                      "resolution": {
                                        "default": "Required",
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ],
                                        "type": "string"
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "serviceName": {
                                "description": "attribute of the dns object to hostname.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "dns": {
                          "description": "DNS service name for the virtual node.",
                          "items": {
                            "properties": {
                              "hostname": {
                                "description": "DNS host name for your virtual node.",
                                "type": "string"
                              },
                              "ipPreference": {
                                "description": "The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.",
                                "type": "string"
                              },
                              "responseType": {
                                "description": "The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        },
        {
          "message": "spec.forProvider.spec is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.spec) || (has(self.initProvider) && has(self.initProvider.spec))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "VirtualNodeStatus defines the observed state of VirtualNode.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "ARN of the virtual node.",
              "type": "string"
            },
            "createdDate": {
              "description": "Creation date of the virtual node.",
              "type": "string"
            },
            "id": {
              "description": "ID of the virtual node.",
              "type": "string"
            },
            "lastUpdatedDate": {
              "description": "Last update date of the virtual node.",
              "type": "string"
            },
            "meshName": {
              "description": "Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the virtual node. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "resourceOwner": {
              "description": "Resource owner's AWS account ID.",
              "type": "string"
            },
            "spec": {
              "description": "Virtual node specification to apply.",
              "items": {
                "properties": {
                  "backend": {
                    "description": "Backends to which the virtual node is expected to send outbound traffic.",
                    "items": {
                      "properties": {
                        "virtualService": {
                          "description": "Virtual service to use as a backend for a virtual node.",
                          "items": {
                            "properties": {
                              "clientPolicy": {
                                "description": "Client policy for the backend.",
                                "items": {
                                  "properties": {
                                    "tls": {
                                      "description": "Transport Layer Security (TLS) client policy.",
                                      "items": {
                                        "properties": {
                                          "certificate": {
                                            "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                            "items": {
                                              "properties": {
                                                "file": {
                                                  "description": "Local file certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateChain": {
                                                        "description": "Certificate chain for the certificate.",
                                                        "type": "string"
                                                      },
                                                      "privateKey": {
                                                        "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "sds": {
                                                  "description": "A Secret Discovery Service certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "secretName": {
                                                        "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "enforce": {
                                            "description": "Whether the policy is enforced. Default is true.",
                                            "type": "boolean"
                                          },
                                          "ports": {
                                            "description": "One or more ports that the policy is enforced for.",
                                            "items": {
                                              "type": "number"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                          },
                                          "validation": {
                                            "description": "TLS validation context.",
                                            "items": {
                                              "properties": {
                                                "subjectAlternativeNames": {
                                                  "description": "SANs for a TLS validation context.",
                                                  "items": {
                                                    "properties": {
                                                      "match": {
                                                        "description": "Criteria for determining a SAN's match.",
                                                        "items": {
                                                          "properties": {
                                                            "exact": {
                                                              "description": "Values sent must match the specified values exactly.",
                                                              "items": {
                                                                "type": "string"
                                                              },
                                                              "type": "array",
                                                              "x-kubernetes-list-type": "set"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "trust": {
                                                  "description": "TLS validation context trust.",
                                                  "items": {
                                                    "properties": {
                                                      "acm": {
                                                        "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "certificateAuthorityArns": {
                                                              "description": "One or more ACM ARNs.",
                                                              "items": {
                                                                "type": "string"
                                                              },
                                                              "type": "array",
                                                              "x-kubernetes-list-type": "set"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      },
                                                      "file": {
                                                        "description": "Local file certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "certificateChain": {
                                                              "description": "Certificate chain for the certificate.",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      },
                                                      "sds": {
                                                        "description": "A Secret Discovery Service certificate.",
                                                        "items": {
                                                          "properties": {
                                                            "secretName": {
                                                              "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                              "type": "string"
                                                            }
                                                          },
                                                          "type": "object",
                                                          "additionalProperties": false
                                                        },
                                                        "type": "array"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "virtualServiceName": {
                                "description": "Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "backendDefaults": {
                    "description": "Defaults for backends.",
                    "items": {
                      "properties": {
                        "clientPolicy": {
                          "description": "Client policy for the backend.",
                          "items": {
                            "properties": {
                              "tls": {
                                "description": "Transport Layer Security (TLS) client policy.",
                                "items": {
                                  "properties": {
                                    "certificate": {
                                      "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                      "items": {
                                        "properties": {
                                          "file": {
                                            "description": "Local file certificate.",
                                            "items": {
                                              "properties": {
                                                "certificateChain": {
                                                  "description": "Certificate chain for the certificate.",
                                                  "type": "string"
                                                },
                                                "privateKey": {
                                                  "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "sds": {
                                            "description": "A Secret Discovery Service certificate.",
                                            "items": {
                                              "properties": {
                                                "secretName": {
                                                  "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "enforce": {
                                      "description": "Whether the policy is enforced. Default is true.",
                                      "type": "boolean"
                                    },
                                    "ports": {
                                      "description": "One or more ports that the policy is enforced for.",
                                      "items": {
                                        "type": "number"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "set"
                                    },
                                    "validation": {
                                      "description": "TLS validation context.",
                                      "items": {
                                        "properties": {
                                          "subjectAlternativeNames": {
                                            "description": "SANs for a TLS validation context.",
                                            "items": {
                                              "properties": {
                                                "match": {
                                                  "description": "Criteria for determining a SAN's match.",
                                                  "items": {
                                                    "properties": {
                                                      "exact": {
                                                        "description": "Values sent must match the specified values exactly.",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-type": "set"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "trust": {
                                            "description": "TLS validation context trust.",
                                            "items": {
                                              "properties": {
                                                "acm": {
                                                  "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateAuthorityArns": {
                                                        "description": "One or more ACM ARNs.",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-type": "set"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "file": {
                                                  "description": "Local file certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "certificateChain": {
                                                        "description": "Certificate chain for the certificate.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                },
                                                "sds": {
                                                  "description": "A Secret Discovery Service certificate.",
                                                  "items": {
                                                    "properties": {
                                                      "secretName": {
                                                        "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object",
                                                    "additionalProperties": false
                                                  },
                                                  "type": "array"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "listener": {
                    "description": "Listeners from which the virtual node is expected to receive inbound traffic.",
                    "items": {
                      "properties": {
                        "connectionPool": {
                          "description": "Connection pool information for the listener.",
                          "items": {
                            "properties": {
                              "grpc": {
                                "description": "Connection pool information for gRPC listeners.",
                                "items": {
                                  "properties": {
                                    "maxRequests": {
                                      "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http": {
                                "description": "Connection pool information for HTTP listeners.",
                                "items": {
                                  "properties": {
                                    "maxConnections": {
                                      "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    },
                                    "maxPendingRequests": {
                                      "description": "Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http2": {
                                "description": "Connection pool information for HTTP2 listeners.",
                                "items": {
                                  "properties": {
                                    "maxRequests": {
                                      "description": "Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "tcp": {
                                "description": "Connection pool information for TCP listeners.",
                                "items": {
                                  "properties": {
                                    "maxConnections": {
                                      "description": "Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "healthCheck": {
                          "description": "Health check information for the listener.",
                          "items": {
                            "properties": {
                              "healthyThreshold": {
                                "description": "Number of consecutive successful health checks that must occur before declaring listener healthy.",
                                "type": "number"
                              },
                              "intervalMillis": {
                                "description": "Time period in milliseconds between each health check execution.",
                                "type": "number"
                              },
                              "path": {
                                "description": "File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.",
                                "type": "string"
                              },
                              "port": {
                                "description": "Port used for the port mapping.",
                                "type": "number"
                              },
                              "protocol": {
                                "description": "Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.",
                                "type": "string"
                              },
                              "timeoutMillis": {
                                "description": "Amount of time to wait when receiving a response from the health check, in milliseconds.",
                                "type": "number"
                              },
                              "unhealthyThreshold": {
                                "description": "Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "outlierDetection": {
                          "description": "Outlier detection information for the listener.",
                          "items": {
                            "properties": {
                              "baseEjectionDuration": {
                                "description": "Base amount of time for which a host is ejected.",
                                "items": {
                                  "properties": {
                                    "unit": {
                                      "description": "Unit of time. Valid values: ms, s.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "interval": {
                                "description": "Time interval between ejection sweep analysis.",
                                "items": {
                                  "properties": {
                                    "unit": {
                                      "description": "Unit of time. Valid values: ms, s.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "maxEjectionPercent": {
                                "description": "Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.\nMinimum value of 0. Maximum value of 100.",
                                "type": "number"
                              },
                              "maxServerErrors": {
                                "description": "Number of consecutive 5xx errors required for ejection. Minimum value of 1.",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "portMapping": {
                          "description": "Port mapping information for the listener.",
                          "items": {
                            "properties": {
                              "port": {
                                "description": "Port used for the port mapping.",
                                "type": "number"
                              },
                              "protocol": {
                                "description": "Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "timeout": {
                          "description": "Timeouts for different protocols.",
                          "items": {
                            "properties": {
                              "grpc": {
                                "description": "Connection pool information for gRPC listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http": {
                                "description": "Connection pool information for HTTP listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "http2": {
                                "description": "Connection pool information for HTTP2 listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "perRequest": {
                                      "description": "Per request timeout.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "tcp": {
                                "description": "Connection pool information for TCP listeners.",
                                "items": {
                                  "properties": {
                                    "idle": {
                                      "description": "Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.",
                                      "items": {
                                        "properties": {
                                          "unit": {
                                            "description": "Unit of time. Valid values: ms, s.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "tls": {
                          "description": "Transport Layer Security (TLS) client policy.",
                          "items": {
                            "properties": {
                              "certificate": {
                                "description": "Virtual node's client's Transport Layer Security (TLS) certificate.",
                                "items": {
                                  "properties": {
                                    "acm": {
                                      "description": "TLS validation context trust for an AWS Certificate Manager (ACM) certificate.",
                                      "items": {
                                        "properties": {
                                          "certificateArn": {
                                            "description": "ARN for the certificate.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "file": {
                                      "description": "Local file certificate.",
                                      "items": {
                                        "properties": {
                                          "certificateChain": {
                                            "description": "Certificate chain for the certificate.",
                                            "type": "string"
                                          },
                                          "privateKey": {
                                            "description": "Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "sds": {
                                      "description": "A Secret Discovery Service certificate.",
                                      "items": {
                                        "properties": {
                                          "secretName": {
                                            "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "mode": {
                                "description": "Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.",
                                "type": "string"
                              },
                              "validation": {
                                "description": "TLS validation context.",
                                "items": {
                                  "properties": {
                                    "subjectAlternativeNames": {
                                      "description": "SANs for a TLS validation context.",
                                      "items": {
                                        "properties": {
                                          "match": {
                                            "description": "Criteria for determining a SAN's match.",
                                            "items": {
                                              "properties": {
                                                "exact": {
                                                  "description": "Values sent must match the specified values exactly.",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "type": "array",
                                                  "x-kubernetes-list-type": "set"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "trust": {
                                      "description": "TLS validation context trust.",
                                      "items": {
                                        "properties": {
                                          "file": {
                                            "description": "Local file certificate.",
                                            "items": {
                                              "properties": {
                                                "certificateChain": {
                                                  "description": "Certificate chain for the certificate.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "sds": {
                                            "description": "A Secret Discovery Service certificate.",
                                            "items": {
                                              "properties": {
                                                "secretName": {
                                                  "description": "Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "logging": {
                    "description": "Inbound and outbound access logging information for the virtual node.",
                    "items": {
                      "properties": {
                        "accessLog": {
                          "description": "Access log configuration for a virtual node.",
                          "items": {
                            "properties": {
                              "file": {
                                "description": "Local file certificate.",
                                "items": {
                                  "properties": {
                                    "format": {
                                      "description": "The specified format for the logs.",
                                      "items": {
                                        "properties": {
                                          "json": {
                                            "description": "The logging format for JSON.",
                                            "items": {
                                              "properties": {
                                                "key": {
                                                  "description": "The specified key for the JSON. Must be between 1 and 100 characters in length.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "The specified value for the JSON. Must be between 1 and 100 characters in length.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object",
                                              "additionalProperties": false
                                            },
                                            "type": "array"
                                          },
                                          "text": {
                                            "description": "The logging format for text. Must be between 1 and 1000 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "additionalProperties": false
                                      },
                                      "type": "array"
                                    },
                                    "path": {
                                      "description": "File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "serviceDiscovery": {
                    "description": "Service discovery information for the virtual node.",
                    "items": {
                      "properties": {
                        "awsCloudMap": {
                          "description": "Any AWS Cloud Map information for the virtual node.",
                          "items": {
                            "properties": {
                              "attributes": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.",
                                "type": "object",
                                "x-kubernetes-map-type": "granular"
                              },
                              "namespaceName": {
                                "description": "Name of the AWS Cloud Map namespace to use.\nUse the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.",
                                "type": "string"
                              },
                              "serviceName": {
                                "description": "attribute of the dns object to hostname.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "dns": {
                          "description": "DNS service name for the virtual node.",
                          "items": {
                            "properties": {
                              "hostname": {
                                "description": "DNS host name for your virtual node.",
                                "type": "string"
                              },
                              "ipPreference": {
                                "description": "The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.",
                                "type": "string"
                              },
                              "responseType": {
                                "description": "The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
