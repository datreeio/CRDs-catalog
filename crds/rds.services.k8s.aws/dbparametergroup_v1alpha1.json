{
  "description": "DBParameterGroup is the Schema for the DBParameterGroups API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DBParameterGroupSpec defines the desired state of DBParameterGroup. \n Contains the details of an Amazon RDS DB parameter group. \n This data type is used as a response element in the DescribeDBParameterGroups action.",
      "properties": {
        "description": {
          "description": "The description for the DB parameter group.",
          "type": "string"
        },
        "family": {
          "description": "The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family. \n To list all of the available parameter group families for a DB engine, use the following command: \n aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\" --engine <engine> \n For example, to list all of the available parameter group families for the MySQL DB engine, use the following command: \n aws rds describe-db-engine-versions --query \"DBEngineVersions[].DBParameterGroupFamily\" --engine mysql \n The output contains duplicates. \n The following are the valid DB engine values: \n - aurora (for MySQL 5.6-compatible Aurora) \n - aurora-mysql (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora) \n - aurora-postgresql \n - mariadb \n - mysql \n - oracle-ee \n - oracle-ee-cdb \n - oracle-se2 \n - oracle-se2-cdb \n - postgres \n - sqlserver-ee \n - sqlserver-se \n - sqlserver-ex \n - sqlserver-web",
          "type": "string"
        },
        "name": {
          "description": "The name of the DB parameter group. \n Constraints: \n - Must be 1 to 255 letters, numbers, or hyphens. \n - First character must be a letter \n - Can't end with a hyphen or contain two consecutive hyphens \n This value is stored as a lowercase string.",
          "type": "string"
        },
        "parameterOverrides": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "These are ONLY user-defined parameter overrides for the DB parameter group. This does not contain default or system parameters.",
          "type": "object"
        },
        "tags": {
          "description": "Tags to assign to the DB parameter group.",
          "items": {
            "description": "Metadata assigned to an Amazon RDS resource consisting of a key-value pair. \n For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "description",
        "family",
        "name"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DBParameterGroupStatus defines the observed state of DBParameterGroup",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "parameterOverrideStatuses": {
          "description": "A list of Parameter values.",
          "items": {
            "description": "This data type is used as a request parameter in the ModifyDBParameterGroup and ResetDBParameterGroup actions. \n This data type is used as a response element in the DescribeEngineDefaultParameters and DescribeDBParameters actions.",
            "properties": {
              "allowedValues": {
                "type": "string"
              },
              "applyMethod": {
                "type": "string"
              },
              "applyType": {
                "type": "string"
              },
              "dataType": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "isModifiable": {
                "type": "boolean"
              },
              "minimumEngineVersion": {
                "type": "string"
              },
              "parameterName": {
                "type": "string"
              },
              "parameterValue": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "supportedEngineModes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
