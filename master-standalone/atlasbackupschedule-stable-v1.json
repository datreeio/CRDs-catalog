{
  "description": "AtlasBackupSchedule is the Schema for the atlasbackupschedules API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasBackupScheduleSpec defines the desired state of AtlasBackupSchedule",
      "properties": {
        "autoExportEnabled": {
          "default": true,
          "description": "Specify true to enable automatic export of cloud backup snapshots to the AWS bucket. You must also define the export policy using export. If omitted, defaults to false.",
          "type": "boolean"
        },
        "export": {
          "description": "Export policy for automatically exporting cloud backup snapshots to AWS bucket.",
          "properties": {
            "exportBucketId": {
              "description": "Unique identifier of the AWS bucket to export the cloud backup snapshot to.",
              "type": "string"
            },
            "frequencyType": {
              "default": "MONTHLY",
              "enum": [
                "MONTHLY"
              ],
              "type": "string"
            }
          },
          "required": [
            "exportBucketId",
            "frequencyType"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "policy": {
          "description": "A reference (name & namespace) for backup policy in the desired updated backup policy.",
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "referenceHourOfDay": {
          "description": "UTC Hour of day between 0 and 23, inclusive, representing which hour of the day that Atlas takes snapshots for backup policy items",
          "format": "int64",
          "maximum": 23,
          "minimum": 0,
          "type": "integer"
        },
        "referenceMinuteOfHour": {
          "description": "UTC Minutes after ReferenceHourOfDay that Atlas takes snapshots for backup policy items. Must be between 0 and 59, inclusive.",
          "format": "int64",
          "maximum": 59,
          "minimum": 0,
          "type": "integer"
        },
        "restoreWindowDays": {
          "default": 1,
          "description": "Number of days back in time you can restore to with Continuous Cloud Backup accuracy. Must be a positive, non-zero integer. Applies to continuous cloud backups only.",
          "format": "int64",
          "type": "integer"
        },
        "updateSnapshots": {
          "description": "Specify true to apply the retention changes in the updated backup policy to snapshots that Atlas took previously.",
          "type": "boolean"
        },
        "useOrgAndGroupNamesInExportPrefix": {
          "description": "Specify true to use organization and project names instead of organization and project UUIDs in the path for the metadata files that Atlas uploads to your S3 bucket after it finishes exporting the snapshots",
          "type": "boolean"
        }
      },
      "required": [
        "policy"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "type": "object"
    }
  },
  "type": "object"
}
