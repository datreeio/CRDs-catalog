{
  "description": "Endpoint is the Schema for the Endpoints API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EndpointSpec defines the desired state of Endpoint. \n An global endpoint used to improve your application's availability by making it regional-fault tolerant. For more information about global endpoints, see Making applications Regional-fault tolerant with global endpoints and event replication (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-global-endpoints.html) in the Amazon EventBridge User Guide..",
      "properties": {
        "description": {
          "description": "A description of the global endpoint.",
          "type": "string"
        },
        "eventBuses": {
          "description": "Define the event buses used. \n The names of the event buses must be identical in each Region.",
          "items": {
            "description": "The event buses the endpoint is associated with.",
            "properties": {
              "eventBusARN": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the global endpoint. For example, \"Name\":\"us-east-2-custom_bus_A-endpoint\".",
          "type": "string"
        },
        "replicationConfig": {
          "description": "Enable or disable event replication.",
          "properties": {
            "state": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "roleARN": {
          "description": "The ARN of the role used for replication.",
          "type": "string"
        },
        "routingConfig": {
          "description": "Configure the routing policy, including the health check and secondary Region..",
          "properties": {
            "failoverConfig": {
              "description": "The failover configuration for an endpoint. This includes what triggers failover and what happens when it's triggered.",
              "properties": {
                "primary": {
                  "description": "The primary Region of the endpoint.",
                  "properties": {
                    "healthCheck": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "secondary": {
                  "description": "The secondary Region that processes events when failover is triggered or replication is enabled.",
                  "properties": {
                    "route": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "eventBuses",
        "name",
        "routingConfig"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "EndpointStatus defines the observed state of Endpoint",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "state": {
          "description": "The state of the endpoint that was created by this request.",
          "type": "string"
        },
        "stateReason": {
          "description": "The reason the endpoint you asked for information about is in its current state.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
