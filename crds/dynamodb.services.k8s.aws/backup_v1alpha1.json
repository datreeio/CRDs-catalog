{
  "description": "Backup is the Schema for the Backups API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BackupSpec defines the desired state of Backup.",
      "properties": {
        "backupName": {
          "description": "Specified name for the backup.",
          "type": "string"
        },
        "tableName": {
          "description": "The name of the table.",
          "type": "string"
        }
      },
      "required": [
        "backupName",
        "tableName"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "BackupStatus defines the observed state of Backup",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "backupCreationDateTime": {
          "description": "Time at which the backup was created. This is the request time of the backup.",
          "format": "date-time",
          "type": "string"
        },
        "backupExpiryDateTime": {
          "description": "Time at which the automatic on-demand backup created by DynamoDB will expire.\nThis SYSTEM on-demand backup expires automatically 35 days after its creation.",
          "format": "date-time",
          "type": "string"
        },
        "backupSizeBytes": {
          "description": "Size of the backup in bytes. DynamoDB updates this value approximately every\nsix hours. Recent changes might not be reflected in this value.",
          "format": "int64",
          "type": "integer"
        },
        "backupStatus": {
          "description": "Backup can be in one of the following states: CREATING, ACTIVE, DELETED.",
          "type": "string"
        },
        "backupType": {
          "description": "BackupType:\n\n   * USER - You create and manage these using the on-demand backup feature.\n\n   * SYSTEM - If you delete a table with point-in-time recovery enabled,\n   a SYSTEM backup is automatically created and is retained for 35 days (at\n   no additional cost). System backups allow you to restore the deleted table\n   to the state it was in just before the point of deletion.\n\n   * AWS_BACKUP - On-demand backup created by you from Backup service.",
          "type": "string"
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
