{
  "description": "FeatureGroup is the Schema for the FeatureGroups API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FeatureGroupSpec defines the desired state of FeatureGroup. \n Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.",
      "properties": {
        "description": {
          "description": "A free-form description of a FeatureGroup.",
          "type": "string"
        },
        "eventTimeFeatureName": {
          "description": "The name of the feature that stores the EventTime of a Record in a FeatureGroup. \n An EventTime is a point in time when a new event occurs that corresponds to the creation or update of a Record in a FeatureGroup. All Records in the FeatureGroup must have a corresponding EventTime. \n An EventTime can be a String or Fractional. \n - Fractional: EventTime feature values must be a Unix timestamp in seconds. \n - String: EventTime feature values must be an ISO-8601 string in the format. The following formats are supported yyyy-MM-dd'T'HH:mm:ssZ and yyyy-MM-dd'T'HH:mm:ss.SSSZ where yyyy, MM, and dd represent the year, month, and day respectively and HH, mm, ss, and if applicable, SSS represent the hour, month, second and milliseconds respsectively. 'T' and Z are constants.",
          "type": "string"
        },
        "featureDefinitions": {
          "description": "A list of Feature names and types. Name and Type is compulsory per Feature. \n Valid feature FeatureTypes are Integral, Fractional and String. \n FeatureNames cannot be any of the following: is_deleted, write_time, api_invocation_time \n You can create up to 2,500 FeatureDefinitions per FeatureGroup.",
          "items": {
            "description": "A list of features. You must include FeatureName and FeatureType. Valid feature FeatureTypes are Integral, Fractional and String.",
            "properties": {
              "featureName": {
                "type": "string"
              },
              "featureType": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "featureGroupName": {
          "description": "The name of the FeatureGroup. The name must be unique within an Amazon Web Services Region in an Amazon Web Services account. The name: \n - Must start and end with an alphanumeric character. \n - Can only contain alphanumeric character and hyphens. Spaces are not allowed.",
          "type": "string"
        },
        "offlineStoreConfig": {
          "description": "Use this to configure an OfflineFeatureStore. This parameter allows you to specify: \n - The Amazon Simple Storage Service (Amazon S3) location of an OfflineStore. \n - A configuration for an Amazon Web Services Glue or Amazon Web Services Hive data catalog. \n - An KMS encryption key to encrypt the Amazon S3 location used for OfflineStore. If KMS encryption key is not specified, by default we encrypt all data at rest using Amazon Web Services KMS key. By defining your bucket-level key (https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html) for SSE, you can reduce Amazon Web Services KMS requests costs by up to 99 percent. \n - Format for the offline store table. Supported formats are Glue (Default) and Apache Iceberg (https://iceberg.apache.org/). \n To learn more about this parameter, see OfflineStoreConfig.",
          "properties": {
            "dataCatalogConfig": {
              "description": "The meta data of the Glue table which serves as data catalog for the OfflineStore.",
              "properties": {
                "catalog": {
                  "type": "string"
                },
                "database": {
                  "type": "string"
                },
                "tableName": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "disableGlueTableCreation": {
              "type": "boolean"
            },
            "s3StorageConfig": {
              "description": "The Amazon Simple Storage (Amazon S3) location and and security configuration for OfflineStore.",
              "properties": {
                "kmsKeyID": {
                  "type": "string"
                },
                "resolvedOutputS3URI": {
                  "type": "string"
                },
                "s3URI": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "onlineStoreConfig": {
          "description": "You can turn the OnlineStore on or off by specifying True for the EnableOnlineStore flag in OnlineStoreConfig; the default value is False. \n You can also include an Amazon Web Services KMS key ID (KMSKeyId) for at-rest encryption of the OnlineStore.",
          "properties": {
            "enableOnlineStore": {
              "type": "boolean"
            },
            "securityConfig": {
              "description": "The security configuration for OnlineStore.",
              "properties": {
                "kmsKeyID": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "recordIdentifierFeatureName": {
          "description": "The name of the Feature whose value uniquely identifies a Record defined in the FeatureStore. Only the latest record per identifier value will be stored in the OnlineStore. RecordIdentifierFeatureName must be one of feature definitions' names. \n You use the RecordIdentifierFeatureName to access data in a FeatureStore. \n This name: \n - Must start and end with an alphanumeric character. \n - Can only contains alphanumeric characters, hyphens, underscores. Spaces are not allowed.",
          "type": "string"
        },
        "roleARN": {
          "description": "The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the OfflineStore if an OfflineStoreConfig is provided.",
          "type": "string"
        },
        "tags": {
          "description": "Tags used to identify Features in each FeatureGroup.",
          "items": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources. \n You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see AddTags. \n For more information on adding metadata to your Amazon Web Services resources with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). For advice on best practices for managing Amazon Web Services resources with tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "eventTimeFeatureName",
        "featureDefinitions",
        "featureGroupName",
        "recordIdentifierFeatureName"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "FeatureGroupStatus defines the observed state of FeatureGroup",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "failureReason": {
          "description": "The reason that the FeatureGroup failed to be replicated in the OfflineStore. This is failure can occur because: \n * The FeatureGroup could not be created in the OfflineStore. \n * The FeatureGroup could not be deleted from the OfflineStore.",
          "type": "string"
        },
        "featureGroupStatus": {
          "description": "The status of the feature group.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
