{
  "description": "UserProfile is the Schema for the UserProfiles API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "UserProfileSpec defines the desired state of UserProfile.",
      "properties": {
        "domainID": {
          "description": "The ID of the associated Domain.",
          "type": "string"
        },
        "singleSignOnUserIdentifier": {
          "description": "A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is \"UserName\". If the Domain's AuthMode is IAM Identity Center, this field is required. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.",
          "type": "string"
        },
        "singleSignOnUserValue": {
          "description": "The username of the associated Amazon Web Services Single Sign-On User for this UserProfile. If the Domain's AuthMode is IAM Identity Center, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not IAM Identity Center, this field cannot be specified.",
          "type": "string"
        },
        "tags": {
          "description": "Each tag consists of a key and an optional value. Tag keys must be unique per resource. \n Tags that you specify for the User Profile are also added to all Apps that the User Profile launches.",
          "items": {
            "description": "A tag object that consists of a key and an optional value, used to manage metadata for SageMaker Amazon Web Services resources. \n You can add tags to notebook instances, training jobs, hyperparameter tuning jobs, batch transform jobs, models, labeling jobs, work teams, endpoint configurations, and endpoints. For more information on adding tags to SageMaker resources, see AddTags. \n For more information on adding metadata to your Amazon Web Services resources with tagging, see Tagging Amazon Web Services resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html). For advice on best practices for managing Amazon Web Services resources with tagging, see Tagging Best Practices: Implement an Effective Amazon Web Services Resource Tagging Strategy (https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf).",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "userProfileName": {
          "description": "A name for the UserProfile. This value is not case sensitive.",
          "type": "string"
        },
        "userSettings": {
          "description": "A collection of settings.",
          "properties": {
            "executionRole": {
              "type": "string"
            },
            "jupyterServerAppSettings": {
              "description": "The JupyterServer app settings.",
              "properties": {
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "lifecycleConfigARNs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "kernelGatewayAppSettings": {
              "description": "The KernelGateway app settings.",
              "properties": {
                "customImages": {
                  "items": {
                    "description": "A custom SageMaker image. For more information, see Bring your own SageMaker image (https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html).",
                    "properties": {
                      "appImageConfigName": {
                        "type": "string"
                      },
                      "imageName": {
                        "type": "string"
                      },
                      "imageVersionNumber": {
                        "format": "int64",
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "lifecycleConfigARNs": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "rStudioServerProAppSettings": {
              "description": "A collection of settings that configure user interaction with the RStudioServerPro app. RStudioServerProAppSettings cannot be updated. The RStudioServerPro app must be deleted and a new one created to make any changes.",
              "properties": {
                "accessStatus": {
                  "type": "string"
                },
                "userGroup": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityGroups": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "sharingSettings": {
              "description": "Specifies options for sharing SageMaker Studio notebooks. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called. When SharingSettings is not specified, notebook sharing isn't allowed.",
              "properties": {
                "notebookOutputOption": {
                  "type": "string"
                },
                "s3KMSKeyID": {
                  "type": "string"
                },
                "s3OutputPath": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tensorBoardAppSettings": {
              "description": "The TensorBoard app settings.",
              "properties": {
                "defaultResourceSpec": {
                  "description": "Specifies the ARN's of a SageMaker image and SageMaker image version, and the instance type that the version runs on.",
                  "properties": {
                    "instanceType": {
                      "type": "string"
                    },
                    "lifecycleConfigARN": {
                      "type": "string"
                    },
                    "sageMakerImageARN": {
                      "type": "string"
                    },
                    "sageMakerImageVersionARN": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "domainID",
        "userProfileName"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "UserProfileStatus defines the observed state of UserProfile",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
