{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "rules": {
          "items": {
            "description": "Rule defines authorization rules object.",
            "properties": {
              "filters": {
                "items": {
                  "properties": {
                    "arguments": {
                      "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "ifRequestHeader": {
                      "description": "HeaderFieldSelector allows for matching on header fields using an exact match value or using a regular expression match.",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "negate": {
                          "type": "boolean"
                        },
                        "value": {
                          "description": "Value will do an exact match on header value, empty is a valid value",
                          "type": "string"
                        },
                        "valueRegex": {
                          "description": "ValueRegex will do a match on the header value based on the provide header regular expression",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "name": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    },
                    "onAllow": {
                      "type": "string"
                    },
                    "onDeny": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "host": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "precedence": {
                "type": "integer"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-preserve-unknown-fields": true,
      "additionalProperties": false
    }
  },
  "type": "object"
}
