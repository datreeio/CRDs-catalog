{
  "description": "AppImageConfig is the Schema for the AppImageConfigs API. Provides a SageMaker App Image Config resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AppImageConfigSpec defines the desired state of AppImageConfig",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "codeEditorAppImageConfig": {
              "description": "The CodeEditorAppImageConfig. You can only specify one image kernel in the AppImageConfig API. This kernel is shown to users before the image starts. After the image runs, all kernels are visible in Code Editor. See Code Editor App Image Config details below.",
              "items": {
                "properties": {
                  "containerConfig": {
                    "description": "The configuration used to run the application image container. See Container Config details below.",
                    "items": {
                      "properties": {
                        "containerArguments": {
                          "description": "The arguments for the container when you're running the application.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEntrypoint": {
                          "description": "The entrypoint used to run the application in the container.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEnvironmentVariables": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The environment variables to set in the container.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "jupyterLabImageConfig": {
              "description": "The JupyterLabAppImageConfig. You can only specify one image kernel in the AppImageConfig API. This kernel is shown to users before the image starts. After the image runs, all kernels are visible in JupyterLab. See Jupyter Lab Image Config details below.",
              "items": {
                "properties": {
                  "containerConfig": {
                    "description": "The configuration used to run the application image container. See Container Config details below.",
                    "items": {
                      "properties": {
                        "containerArguments": {
                          "description": "The arguments for the container when you're running the application.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEntrypoint": {
                          "description": "The entrypoint used to run the application in the container.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEnvironmentVariables": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The environment variables to set in the container.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kernelGatewayImageConfig": {
              "description": "The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.",
              "items": {
                "properties": {
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kernelSpec": {
                    "description": "The default branch for the Git repository. See Kernel Spec details below.",
                    "items": {
                      "properties": {
                        "displayName": {
                          "description": "The display name of the kernel.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the kernel.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "codeEditorAppImageConfig": {
              "description": "The CodeEditorAppImageConfig. You can only specify one image kernel in the AppImageConfig API. This kernel is shown to users before the image starts. After the image runs, all kernels are visible in Code Editor. See Code Editor App Image Config details below.",
              "items": {
                "properties": {
                  "containerConfig": {
                    "description": "The configuration used to run the application image container. See Container Config details below.",
                    "items": {
                      "properties": {
                        "containerArguments": {
                          "description": "The arguments for the container when you're running the application.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEntrypoint": {
                          "description": "The entrypoint used to run the application in the container.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEnvironmentVariables": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The environment variables to set in the container.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "jupyterLabImageConfig": {
              "description": "The JupyterLabAppImageConfig. You can only specify one image kernel in the AppImageConfig API. This kernel is shown to users before the image starts. After the image runs, all kernels are visible in JupyterLab. See Jupyter Lab Image Config details below.",
              "items": {
                "properties": {
                  "containerConfig": {
                    "description": "The configuration used to run the application image container. See Container Config details below.",
                    "items": {
                      "properties": {
                        "containerArguments": {
                          "description": "The arguments for the container when you're running the application.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEntrypoint": {
                          "description": "The entrypoint used to run the application in the container.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEnvironmentVariables": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The environment variables to set in the container.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kernelGatewayImageConfig": {
              "description": "The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.",
              "items": {
                "properties": {
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kernelSpec": {
                    "description": "The default branch for the Git repository. See Kernel Spec details below.",
                    "items": {
                      "properties": {
                        "displayName": {
                          "description": "The display name of the kernel.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the kernel.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "AppImageConfigStatus defines the observed state of AppImageConfig.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) assigned by AWS to this App Image Config.",
              "type": "string"
            },
            "codeEditorAppImageConfig": {
              "description": "The CodeEditorAppImageConfig. You can only specify one image kernel in the AppImageConfig API. This kernel is shown to users before the image starts. After the image runs, all kernels are visible in Code Editor. See Code Editor App Image Config details below.",
              "items": {
                "properties": {
                  "containerConfig": {
                    "description": "The configuration used to run the application image container. See Container Config details below.",
                    "items": {
                      "properties": {
                        "containerArguments": {
                          "description": "The arguments for the container when you're running the application.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEntrypoint": {
                          "description": "The entrypoint used to run the application in the container.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEnvironmentVariables": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The environment variables to set in the container.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "id": {
              "description": "The name of the App Image Config.",
              "type": "string"
            },
            "jupyterLabImageConfig": {
              "description": "The JupyterLabAppImageConfig. You can only specify one image kernel in the AppImageConfig API. This kernel is shown to users before the image starts. After the image runs, all kernels are visible in JupyterLab. See Jupyter Lab Image Config details below.",
              "items": {
                "properties": {
                  "containerConfig": {
                    "description": "The configuration used to run the application image container. See Container Config details below.",
                    "items": {
                      "properties": {
                        "containerArguments": {
                          "description": "The arguments for the container when you're running the application.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEntrypoint": {
                          "description": "The entrypoint used to run the application in the container.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "containerEnvironmentVariables": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "The environment variables to set in the container.",
                          "type": "object",
                          "x-kubernetes-map-type": "granular"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "kernelGatewayImageConfig": {
              "description": "The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app. See Kernel Gateway Image Config details below.",
              "items": {
                "properties": {
                  "fileSystemConfig": {
                    "description": "The URL where the Git repository is located. See File System Config details below.",
                    "items": {
                      "properties": {
                        "defaultGid": {
                          "description": "The default POSIX group ID (GID). If not specified, defaults to 100. Valid values are 0 and 100.",
                          "type": "number"
                        },
                        "defaultUid": {
                          "description": "The default POSIX user ID (UID). If not specified, defaults to 1000. Valid values are 0 and 1000.",
                          "type": "number"
                        },
                        "mountPath": {
                          "description": "The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "kernelSpec": {
                    "description": "The default branch for the Git repository. See Kernel Spec details below.",
                    "items": {
                      "properties": {
                        "displayName": {
                          "description": "The display name of the kernel.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the kernel.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
