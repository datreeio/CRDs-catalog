{
  "description": "FluxReport is the Schema for the fluxreports API.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FluxReportSpec defines the observed state of a Flux installation.",
      "properties": {
        "components": {
          "description": "ComponentsStatus is the status of the Flux controller deployments.",
          "items": {
            "description": "FluxComponentStatus defines the observed state of a Flux component.",
            "properties": {
              "image": {
                "description": "Image is the container image of the Flux component.",
                "type": "string"
              },
              "name": {
                "description": "Name is the name of the Flux component.",
                "type": "string"
              },
              "ready": {
                "description": "Ready is the readiness status of the Flux component.",
                "type": "boolean"
              },
              "status": {
                "description": "Status is a human-readable message indicating details\nabout the Flux component observed state.",
                "type": "string"
              }
            },
            "required": [
              "image",
              "name",
              "ready",
              "status"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "distribution": {
          "description": "Distribution is the version information of the Flux installation.",
          "properties": {
            "entitlement": {
              "description": "Entitlement is the entitlement verification status.",
              "type": "string"
            },
            "managedBy": {
              "description": "ManagedBy is the name of the operator managing the Flux instance.",
              "type": "string"
            },
            "status": {
              "description": "Status is a human-readable message indicating details\nabout the distribution observed state.",
              "type": "string"
            },
            "version": {
              "description": "Version is the version of the Flux instance.",
              "type": "string"
            }
          },
          "required": [
            "entitlement",
            "status"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "reconcilers": {
          "description": "ReconcilersStatus is the list of Flux reconcilers and\ntheir statistics grouped by API kind.",
          "items": {
            "description": "FluxReconcilerStatus defines the observed state of a Flux reconciler.",
            "properties": {
              "apiVersion": {
                "description": "APIVersion is the API version of the Flux resource.",
                "type": "string"
              },
              "kind": {
                "description": "Kind is the kind of the Flux resource.",
                "type": "string"
              },
              "stats": {
                "description": "Stats is the reconcile statics of the Flux resource kind.",
                "properties": {
                  "failing": {
                    "description": "Failing is the number of reconciled\nresources in the Failing state.",
                    "type": "integer"
                  },
                  "running": {
                    "description": "Running is the number of reconciled\nresources in the Running state.",
                    "type": "integer"
                  },
                  "suspended": {
                    "description": "Suspended is the number of reconciled\nresources in the Suspended state.",
                    "type": "integer"
                  },
                  "totalSize": {
                    "description": "TotalSize is the total size of the artifacts in storage.",
                    "type": "string"
                  }
                },
                "required": [
                  "failing",
                  "running",
                  "suspended"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "apiVersion",
              "kind"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "sync": {
          "description": "SyncStatus is the status of the cluster sync\nSource and Kustomization resources.",
          "properties": {
            "id": {
              "description": "ID is the identifier of the sync.",
              "type": "string"
            },
            "path": {
              "description": "Path is the kustomize path of the sync.",
              "type": "string"
            },
            "ready": {
              "description": "Ready is the readiness status of the sync.",
              "type": "boolean"
            },
            "source": {
              "description": "Source is the URL of the source repository.",
              "type": "string"
            },
            "status": {
              "description": "Status is a human-readable message indicating details\nabout the sync observed state.",
              "type": "string"
            }
          },
          "required": [
            "id",
            "ready",
            "status"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "distribution"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "FluxReportStatus defines the readiness of a FluxReport.",
      "properties": {
        "conditions": {
          "description": "Conditions contains the readiness conditions of the object.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "lastHandledReconcileAt": {
          "description": "LastHandledReconcileAt holds the value of the most recent\nreconcile request value, so a change of the annotation value\ncan be detected.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
