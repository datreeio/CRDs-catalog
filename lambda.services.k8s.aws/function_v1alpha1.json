{
  "description": "Function is the Schema for the Functions API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FunctionSpec defines the desired state of Function.",
      "properties": {
        "architectures": {
          "description": "The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is x86_64.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "code": {
          "description": "The code for the function.",
          "properties": {
            "imageURI": {
              "type": "string"
            },
            "s3Bucket": {
              "type": "string"
            },
            "s3BucketRef": {
              "description": "Reference field for S3Bucket",
              "properties": {
                "from": {
                  "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "s3Key": {
              "type": "string"
            },
            "s3ObjectVersion": {
              "type": "string"
            },
            "zipFile": {
              "format": "byte",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "codeSigningConfigARN": {
          "description": "To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.",
          "type": "string"
        },
        "deadLetterConfig": {
          "description": "A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead-letter queues (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq).",
          "properties": {
            "targetARN": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "description": {
          "description": "A description of the function.",
          "type": "string"
        },
        "environment": {
          "description": "Environment variables that are accessible from function code during execution.",
          "properties": {
            "variables": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ephemeralStorage": {
          "description": "The size of the function's /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB.",
          "properties": {
            "size": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "fileSystemConfigs": {
          "description": "Connection settings for an Amazon EFS file system.",
          "items": {
            "description": "Details about the connection between a Lambda function and an Amazon EFS file system (https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html).",
            "properties": {
              "arn": {
                "type": "string"
              },
              "localMountPath": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "functionEventInvokeConfig": {
          "properties": {
            "destinationConfig": {
              "description": "A configuration object that specifies the destination of an event after Lambda processes it.",
              "properties": {
                "onFailure": {
                  "description": "A destination for events that failed processing.",
                  "properties": {
                    "destination": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "onSuccess": {
                  "description": "A destination for events that were processed successfully.",
                  "properties": {
                    "destination": {
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "functionName": {
              "type": "string"
            },
            "maximumEventAgeInSeconds": {
              "format": "int64",
              "type": "integer"
            },
            "maximumRetryAttempts": {
              "format": "int64",
              "type": "integer"
            },
            "qualifier": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "handler": {
          "description": "The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Lambda programming model (https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html).",
          "type": "string"
        },
        "imageConfig": {
          "description": "Container image configuration values (https://docs.aws.amazon.com/lambda/latest/dg/configuration-images.html#configuration-images-settings) that override the values in the container image Dockerfile.",
          "properties": {
            "command": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "entryPoint": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "workingDirectory": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "kmsKeyARN": {
          "description": "The ARN of the Key Management Service (KMS) key that's used to encrypt your function's environment variables. If it's not provided, Lambda uses a default service key.",
          "type": "string"
        },
        "kmsKeyRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "layers": {
          "description": "A list of function layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "memorySize": {
          "description": "The amount of memory available to the function (https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "The name of the Lambda function. \n Name formats \n - Function name \u2013 my-function. \n - Function ARN \u2013 arn:aws:lambda:us-west-2:123456789012:function:my-function. \n - Partial ARN \u2013 123456789012:function:my-function. \n The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.",
          "type": "string"
        },
        "packageType": {
          "description": "The type of deployment package. Set to Image for container image and set to Zip for .zip file archive.",
          "type": "string"
        },
        "publish": {
          "description": "Set to true to publish the first version of the function during creation.",
          "type": "boolean"
        },
        "reservedConcurrentExecutions": {
          "description": "The number of simultaneous executions to reserve for the function.",
          "format": "int64",
          "type": "integer"
        },
        "role": {
          "description": "The Amazon Resource Name (ARN) of the function's execution role.",
          "type": "string"
        },
        "runtime": {
          "description": "The identifier of the function's runtime (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime is required if the deployment package is a .zip file archive.",
          "type": "string"
        },
        "snapStart": {
          "description": "The function's SnapStart (https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.",
          "properties": {
            "applyOn": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A list of tags (https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.",
          "type": "object"
        },
        "timeout": {
          "description": "The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see Lambda execution environment (https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).",
          "format": "int64",
          "type": "integer"
        },
        "tracingConfig": {
          "description": "Set Mode to Active to sample and trace a subset of incoming requests with X-Ray (https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html).",
          "properties": {
            "mode": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "vpcConfig": {
          "description": "For network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see Configuring a Lambda function to access resources in a VPC (https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).",
          "properties": {
            "securityGroupIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "securityGroupRefs": {
              "description": "Reference field for SecurityGroupIDs",
              "items": {
                "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
                "properties": {
                  "from": {
                    "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "subnetIDs": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "subnetRefs": {
              "description": "Reference field for SubnetIDs",
              "items": {
                "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api",
                "properties": {
                  "from": {
                    "description": "AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "code",
        "name",
        "role"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "FunctionStatus defines the observed state of Function",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource",
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an \"adopted\" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "required": [
            "ownerAccountID",
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "codeSHA256": {
          "description": "The SHA256 hash of the function's deployment package.",
          "type": "string"
        },
        "codeSize": {
          "description": "The size of the function's deployment package, in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "conditions": {
          "description": "All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "imageConfigResponse": {
          "description": "The function's image configuration values.",
          "properties": {
            "error": {
              "description": "Error response to GetFunctionConfiguration.",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "imageConfig": {
              "description": "Configuration values that override the container image Dockerfile settings. For more information, see Container image settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).",
              "properties": {
                "command": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "entryPoint": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "workingDirectory": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "lastModified": {
          "description": "The date and time that the function was last updated, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).",
          "type": "string"
        },
        "lastUpdateStatus": {
          "description": "The status of the last update that was performed on the function. This is first set to Successful after function creation completes.",
          "type": "string"
        },
        "lastUpdateStatusReason": {
          "description": "The reason for the last update that was performed on the function.",
          "type": "string"
        },
        "lastUpdateStatusReasonCode": {
          "description": "The reason code for the last update that was performed on the function.",
          "type": "string"
        },
        "layerStatuses": {
          "description": "The function's layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).",
          "items": {
            "description": "An Lambda layer (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).",
            "properties": {
              "arn": {
                "type": "string"
              },
              "codeSize": {
                "format": "int64",
                "type": "integer"
              },
              "signingJobARN": {
                "type": "string"
              },
              "signingProfileVersionARN": {
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "masterARN": {
          "description": "For Lambda@Edge functions, the ARN of the main function.",
          "type": "string"
        },
        "revisionID": {
          "description": "The latest updated revision of the function or alias.",
          "type": "string"
        },
        "signingJobARN": {
          "description": "The ARN of the signing job.",
          "type": "string"
        },
        "signingProfileVersionARN": {
          "description": "The ARN of the signing profile version.",
          "type": "string"
        },
        "state": {
          "description": "The current state of the function. When the state is Inactive, you can reactivate the function by invoking it.",
          "type": "string"
        },
        "stateReason": {
          "description": "The reason for the function's current state.",
          "type": "string"
        },
        "stateReasonCode": {
          "description": "The reason code for the function's current state. When the code is Creating, you can't invoke or modify the function.",
          "type": "string"
        },
        "version": {
          "description": "The version of the Lambda function.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
