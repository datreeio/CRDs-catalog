{
  "description": "MaxScale is the Schema for the maxscales API. It is used to define MaxScale clusters.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MaxScaleSpec defines the desired state of MaxScale.",
      "properties": {
        "admin": {
          "description": "Admin configures the admin REST API and GUI.",
          "properties": {
            "guiEnabled": {
              "description": "GuiEnabled indicates whether the admin GUI should be enabled.",
              "type": "boolean"
            },
            "port": {
              "description": "Port where the admin REST API and GUI will be exposed.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "affinity": {
          "description": "Affinity to be used in the Pod.",
          "properties": {
            "antiAffinityEnabled": {
              "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
              "type": "boolean"
            },
            "nodeAffinity": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeaffinity-v1-core",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#preferredschedulingterm-v1-core",
                    "properties": {
                      "preference": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core",
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchFields": {
                            "items": {
                              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "weight": {
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "preference",
                      "weight"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselector-v1-core",
                  "properties": {
                    "nodeSelectorTerms": {
                      "items": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core",
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchFields": {
                            "items": {
                              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "required": [
                    "nodeSelectorTerms"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "podAntiAffinity": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                        "properties": {
                          "labelSelector": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta",
                            "properties": {
                              "matchExpressions": {
                                "items": {
                                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "topologyKey"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "weight": {
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                    "properties": {
                      "labelSelector": {
                        "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta",
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                  "type": "string"
                                },
                                "values": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "required": [
                                "key",
                                "operator"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "topologyKey": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "topologyKey"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "args": {
          "description": "Args to be used in the Container.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "auth": {
          "description": "Auth defines the credentials required for MaxScale to connect to MariaDB.",
          "properties": {
            "adminPasswordSecretKeyRef": {
              "description": "AdminPasswordSecretKeyRef is Secret key reference to the admin password to call the admin REST API. It is defaulted if not provided.",
              "properties": {
                "generate": {
                  "default": false,
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "adminUsername": {
              "description": "AdminUsername is an admin username to call the admin REST API. It is defaulted if not provided.",
              "type": "string"
            },
            "clientMaxConnections": {
              "description": "ClientMaxConnections defines the maximum number of connections that the client can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
              "format": "int32",
              "type": "integer"
            },
            "clientPasswordSecretKeyRef": {
              "description": "ClientPasswordSecretKeyRef is Secret key reference to the password to connect to MaxScale. It is defaulted if not provided.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
              "properties": {
                "generate": {
                  "default": false,
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "clientUsername": {
              "description": "ClientUsername is the user to connect to MaxScale. It is defaulted if not provided.",
              "type": "string"
            },
            "deleteDefaultAdmin": {
              "description": "DeleteDefaultAdmin determines whether the default admin user should be deleted after the initial configuration. If not provided, it defaults to true.",
              "type": "boolean"
            },
            "generate": {
              "description": "Generate  defies whether the operator should generate users and grants for MaxScale to work.\nIt only supports MariaDBs specified via spec.mariaDbRef.",
              "type": "boolean"
            },
            "metricsPasswordSecretKeyRef": {
              "description": "MetricsPasswordSecretKeyRef is Secret key reference to the metrics password to call the admib REST API. It is defaulted if metrics are enabled.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
              "properties": {
                "generate": {
                  "default": false,
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "metricsUsername": {
              "description": "MetricsUsername is an metrics username to call the REST API. It is defaulted if metrics are enabled.",
              "type": "string"
            },
            "monitorMaxConnections": {
              "description": "MonitorMaxConnections defines the maximum number of connections that the monitor can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
              "format": "int32",
              "type": "integer"
            },
            "monitorPasswordSecretKeyRef": {
              "description": "MonitorPasswordSecretKeyRef is Secret key reference to the password used by MaxScale monitor to connect to MariaDB server. It is defaulted if not provided.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
              "properties": {
                "generate": {
                  "default": false,
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "monitorUsername": {
              "description": "MonitorUsername is the user used by MaxScale monitor to connect to MariaDB server. It is defaulted if not provided.",
              "type": "string"
            },
            "serverMaxConnections": {
              "description": "ServerMaxConnections defines the maximum number of connections that the server can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
              "format": "int32",
              "type": "integer"
            },
            "serverPasswordSecretKeyRef": {
              "description": "ServerPasswordSecretKeyRef is Secret key reference to the password used by MaxScale to connect to MariaDB server. It is defaulted if not provided.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
              "properties": {
                "generate": {
                  "default": false,
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "serverUsername": {
              "description": "ServerUsername is the user used by MaxScale to connect to MariaDB server. It is defaulted if not provided.",
              "type": "string"
            },
            "syncMaxConnections": {
              "description": "SyncMaxConnections defines the maximum number of connections that the sync can establish.\nIf HA is enabled, make sure to increase this value, as more MaxScale replicas implies more connections.\nIt defaults to 30 times the number of MaxScale replicas.",
              "format": "int32",
              "type": "integer"
            },
            "syncPasswordSecretKeyRef": {
              "description": "SyncPasswordSecretKeyRef is Secret key reference to the password used by MaxScale config to connect to MariaDB server. It is defaulted when HA is enabled.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
              "properties": {
                "generate": {
                  "default": false,
                  "description": "Generate indicates whether the Secret should be generated if the Secret referenced is not present.",
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "syncUsername": {
              "description": "MonitoSyncUsernamerUsername is the user used by MaxScale config sync to connect to MariaDB server. It is defaulted when HA is enabled.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "command": {
          "description": "Command to be used in the Container.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "config": {
          "description": "Config defines the MaxScale configuration.",
          "properties": {
            "params": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Params is a key value pair of parameters to be used in the MaxScale static configuration file.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#global-settings.",
              "type": "object"
            },
            "sync": {
              "description": "Sync defines how to replicate configuration across MaxScale replicas. It is defaulted when HA is enabled.",
              "properties": {
                "database": {
                  "description": "Database is the MariaDB logical database where the 'maxscale_config' table will be created in order to persist and synchronize config changes. If not provided, it defaults to 'mysql'.",
                  "type": "string"
                },
                "interval": {
                  "description": "Interval defines the config synchronization interval. It is defaulted if not provided.",
                  "type": "string"
                },
                "timeout": {
                  "description": "Interval defines the config synchronization timeout. It is defaulted if not provided.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "volumeClaimTemplate": {
              "description": "VolumeClaimTemplate provides a template to define the PVCs for storing MaxScale runtime configuration files. It is defaulted if not provided.",
              "properties": {
                "accessModes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "metadata": {
                  "description": "Metadata to be added to the PVC metadata.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Annotations to be added to children resources.",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels to be added to children resources.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "resources": {
                  "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                  "properties": {
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "selector": {
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "required": [
                          "key",
                          "operator"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "storageClassName": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "connection": {
          "description": "Connection provides a template to define the Connection for MaxScale.",
          "properties": {
            "healthCheck": {
              "description": "HealthCheck to be used in the Connection.",
              "properties": {
                "interval": {
                  "description": "Interval used to perform health checks.",
                  "type": "string"
                },
                "retryInterval": {
                  "description": "RetryInterval is the interval used to perform health check retries.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "params": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Params to be used in the Connection.",
              "type": "object"
            },
            "port": {
              "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
              "format": "int32",
              "type": "integer"
            },
            "secretName": {
              "description": "SecretName to be used in the Connection.",
              "type": "string"
            },
            "secretTemplate": {
              "description": "SecretTemplate to be used in the Connection.",
              "properties": {
                "databaseKey": {
                  "description": "DatabaseKey to be used in the Secret.",
                  "type": "string"
                },
                "format": {
                  "description": "Format to be used in the Secret.",
                  "type": "string"
                },
                "hostKey": {
                  "description": "HostKey to be used in the Secret.",
                  "type": "string"
                },
                "key": {
                  "description": "Key to be used in the Secret.",
                  "type": "string"
                },
                "metadata": {
                  "description": "Metadata to be added to the Secret object.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Annotations to be added to children resources.",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels to be added to children resources.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "passwordKey": {
                  "description": "PasswordKey to be used in the Secret.",
                  "type": "string"
                },
                "portKey": {
                  "description": "PortKey to be used in the Secret.",
                  "type": "string"
                },
                "usernameKey": {
                  "description": "UsernameKey to be used in the Secret.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "serviceName": {
              "description": "ServiceName to be used in the Connection.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "env": {
          "description": "Env represents the environment variables to be injected in a container.",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
            "properties": {
              "name": {
                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "valueFrom": {
                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envvarsource-v1-core.",
                "properties": {
                  "configMapKeyRef": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#configmapkeyselector-v1-core.",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "default": "",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "fieldRef": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#objectfieldselector-v1-core.",
                    "properties": {
                      "apiVersion": {
                        "type": "string"
                      },
                      "fieldPath": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "fieldPath"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "secretKeyRef": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#secretkeyselector-v1-core.",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "default": "",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "envFrom": {
          "description": "EnvFrom represents the references (via ConfigMap and Secrets) to environment variables to be injected in the container.",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#envfromsource-v1-core.",
            "properties": {
              "configMapRef": {
                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                "properties": {
                  "name": {
                    "default": "",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "prefix": {
                "type": "string"
              },
              "secretRef": {
                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                "properties": {
                  "name": {
                    "default": "",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "guiKubernetesService": {
          "description": "GuiKubernetesService defines a template for a Kubernetes Service object to connect to MaxScale's GUI.",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "description": "AllocateLoadBalancerNodePorts Service field.",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy Service field.",
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP Service field.",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "LoadBalancerSourceRanges Service field.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "metadata": {
              "description": "Metadata to be added to the Service metadata.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations to be added to children resources.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels to be added to children resources.",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "sessionAffinity": {
              "description": "SessionAffinity Service field.",
              "type": "string"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "image": {
          "description": "Image name to be used by the MaxScale instances. The supported format is `<image>:<tag>`.\nOnly MaxScale official images are supported.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
          "enum": [
            "Always",
            "Never",
            "IfNotPresent"
          ],
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
            "properties": {
              "name": {
                "default": "",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "inheritMetadata": {
          "description": "InheritMetadata defines the metadata to be inherited by children resources.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations to be added to children resources.",
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels to be added to children resources.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "kubernetesService": {
          "description": "KubernetesService defines a template for a Kubernetes Service object to connect to MaxScale.",
          "properties": {
            "allocateLoadBalancerNodePorts": {
              "description": "AllocateLoadBalancerNodePorts Service field.",
              "type": "boolean"
            },
            "externalTrafficPolicy": {
              "description": "ExternalTrafficPolicy Service field.",
              "type": "string"
            },
            "loadBalancerIP": {
              "description": "LoadBalancerIP Service field.",
              "type": "string"
            },
            "loadBalancerSourceRanges": {
              "description": "LoadBalancerSourceRanges Service field.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "metadata": {
              "description": "Metadata to be added to the Service metadata.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations to be added to children resources.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels to be added to children resources.",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "sessionAffinity": {
              "description": "SessionAffinity Service field.",
              "type": "string"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type is the Service type. One of `ClusterIP`, `NodePort` or `LoadBalancer`. If not defined, it defaults to `ClusterIP`.",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "livenessProbe": {
          "description": "LivenessProbe to be used in the Container.",
          "properties": {
            "exec": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
              "properties": {
                "command": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "format": "int32",
              "type": "integer"
            },
            "httpGet": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
              "properties": {
                "host": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#tcpsocketaction-v1-core.",
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "timeoutSeconds": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "mariaDbRef": {
          "description": "MariaDBRef is a reference to the MariaDB that MaxScale points to. It is used to initialize the servers field.",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "waitForIt": {
              "default": true,
              "description": "WaitForIt indicates whether the controller using this reference should wait for MariaDB to be ready.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "metrics": {
          "description": "Metrics configures metrics and how to scrape them.",
          "properties": {
            "enabled": {
              "description": "Enabled is a flag to enable Metrics",
              "type": "boolean"
            },
            "exporter": {
              "description": "Exporter defines the metrics exporter container.",
              "properties": {
                "affinity": {
                  "description": "Affinity to be used in the Pod.",
                  "properties": {
                    "antiAffinityEnabled": {
                      "description": "AntiAffinityEnabled configures PodAntiAffinity so each Pod is scheduled in a different Node, enabling HA.\nMake sure you have at least as many Nodes available as the replicas to not end up with unscheduled Pods.",
                      "type": "boolean"
                    },
                    "nodeAffinity": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeaffinity-v1-core",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#preferredschedulingterm-v1-core",
                            "properties": {
                              "preference": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core",
                                "properties": {
                                  "matchExpressions": {
                                    "items": {
                                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchFields": {
                                    "items": {
                                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "preference",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselector-v1-core",
                          "properties": {
                            "nodeSelectorTerms": {
                              "items": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorterm-v1-core",
                                "properties": {
                                  "matchExpressions": {
                                    "items": {
                                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchFields": {
                                    "items": {
                                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#nodeselectorrequirement-v1-core",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A node selector operator is the set of operators that can be used in\na node selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "required": [
                            "nodeSelectorTerms"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "podAntiAffinity": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podantiaffinity-v1-core.",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#weightedpodaffinityterm-v1-core.",
                            "properties": {
                              "podAffinityTerm": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                                "properties": {
                                  "labelSelector": {
                                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta",
                                    "properties": {
                                      "matchExpressions": {
                                        "items": {
                                          "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array",
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "topologyKey"
                                ],
                                "type": "object",
                                "additionalProperties": false
                              },
                              "weight": {
                                "format": "int32",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "podAffinityTerm",
                              "weight"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "items": {
                            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#podaffinityterm-v1-core.",
                            "properties": {
                              "labelSelector": {
                                "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselector-v1-meta",
                                "properties": {
                                  "matchExpressions": {
                                    "items": {
                                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#labelselectorrequirement-v1-meta",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "A label selector operator is the set of operators that can be used in a selector requirement.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array",
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "type": "object",
                                      "additionalProperties": false
                                    },
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "topologyKey"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "image": {
                  "description": "Image name to be used as metrics exporter. The supported format is `<image>:<tag>`.\nOnly mysqld-exporter >= v0.15.0 is supported: https://github.com/prometheus/mysqld_exporter",
                  "type": "string"
                },
                "imagePullPolicy": {
                  "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ],
                  "type": "string"
                },
                "imagePullSecrets": {
                  "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
                  "items": {
                    "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#localobjectreference-v1-core.",
                    "properties": {
                      "name": {
                        "default": "",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "nodeSelector": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "NodeSelector to be used in the Pod.",
                  "type": "object"
                },
                "podMetadata": {
                  "description": "PodMetadata defines extra metadata for the Pod.",
                  "properties": {
                    "annotations": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Annotations to be added to children resources.",
                      "type": "object"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Labels to be added to children resources.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "podSecurityContext": {
                  "description": "SecurityContext holds pod-level security attributes and common container settings.",
                  "properties": {
                    "appArmorProfile": {
                      "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "fsGroup": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "fsGroupChangePolicy": {
                      "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
                      "type": "string"
                    },
                    "runAsGroup": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "description": "SELinuxOptions are the labels to be applied to the container",
                      "properties": {
                        "level": {
                          "description": "Level is SELinux level label that applies to the container.",
                          "type": "string"
                        },
                        "role": {
                          "description": "Role is a SELinux role label that applies to the container.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is a SELinux type label that applies to the container.",
                          "type": "string"
                        },
                        "user": {
                          "description": "User is a SELinux user label that applies to the container.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "seccompProfile": {
                      "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
                      "properties": {
                        "localhostProfile": {
                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                          "type": "string"
                        },
                        "type": {
                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "supplementalGroups": {
                      "items": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "port": {
                  "description": "Port where the exporter will be listening for connections.",
                  "format": "int32",
                  "type": "integer"
                },
                "priorityClassName": {
                  "description": "PriorityClassName to be used in the Pod.",
                  "type": "string"
                },
                "resources": {
                  "description": "Resouces describes the compute resource requirements.",
                  "properties": {
                    "limits": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object"
                    },
                    "requests": {
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      },
                      "description": "ResourceList is a set of (resource name, quantity) pairs.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "securityContext": {
                  "description": "SecurityContext holds container-level security attributes.",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "description": "Adds and removes POSIX capabilities from running containers.",
                      "properties": {
                        "add": {
                          "description": "Added capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "drop": {
                          "description": "Removed capabilities",
                          "items": {
                            "description": "Capability represent POSIX capabilities type",
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "format": "int64",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "tolerations": {
                  "description": "Tolerations to be used in the Pod.",
                  "items": {
                    "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                    "properties": {
                      "effect": {
                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                        "type": "string"
                      },
                      "key": {
                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "value": {
                        "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "serviceMonitor": {
              "description": "ServiceMonitor defines the ServiceMonior object.",
              "properties": {
                "interval": {
                  "description": "Interval for scraping metrics.",
                  "type": "string"
                },
                "jobLabel": {
                  "description": "JobLabel to add to the ServiceMonitor object.",
                  "type": "string"
                },
                "prometheusRelease": {
                  "description": "PrometheusRelease is the release label to add to the ServiceMonitor object.",
                  "type": "string"
                },
                "scrapeTimeout": {
                  "description": "ScrapeTimeout defines the timeout for scraping metrics.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "monitor": {
          "description": "Monitor monitors MariaDB server instances. It is required if 'spec.mariaDbRef' is not provided.",
          "properties": {
            "cooperativeMonitoring": {
              "description": "CooperativeMonitoring enables coordination between multiple MaxScale instances running monitors. It is defaulted when HA is enabled.",
              "enum": [
                "majority_of_all",
                "majority_of_running"
              ],
              "type": "string"
            },
            "interval": {
              "description": "Interval used to monitor MariaDB servers. It is defaulted if not provided.",
              "type": "string"
            },
            "module": {
              "description": "Module is the module to use to monitor MariaDB servers. It is mandatory when no MariaDB reference is provided.",
              "type": "string"
            },
            "name": {
              "description": "Name is the identifier of the monitor. It is defaulted if not provided.",
              "type": "string"
            },
            "params": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Params defines extra parameters to pass to the monitor.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-common-monitor-parameters/.\nMonitor specific parameter are also suported:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-galera-monitor/#galera-monitor-optional-parameters.\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-monitor/#configuration.",
              "type": "object"
            },
            "suspend": {
              "default": false,
              "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "NodeSelector to be used in the Pod.",
          "type": "object"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget defines the budget for replica availability.",
          "properties": {
            "maxUnavailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "MaxUnavailable defines the number of maximum unavailable Pods.",
              "x-kubernetes-int-or-string": true
            },
            "minAvailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "MinAvailable defines the number of minimum available Pods.",
              "x-kubernetes-int-or-string": true
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "podMetadata": {
          "description": "PodMetadata defines extra metadata for the Pod.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations to be added to children resources.",
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels to be added to children resources.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "podSecurityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings.",
          "properties": {
            "appArmorProfile": {
              "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "fsGroup": {
              "format": "int64",
              "type": "integer"
            },
            "fsGroupChangePolicy": {
              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
              "type": "string"
            },
            "runAsGroup": {
              "format": "int64",
              "type": "integer"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "format": "int64",
              "type": "integer"
            },
            "seLinuxOptions": {
              "description": "SELinuxOptions are the labels to be applied to the container",
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": "string"
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "seccompProfile": {
              "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "supplementalGroups": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "priorityClassName": {
          "description": "PriorityClassName to be used in the Pod.",
          "type": "string"
        },
        "readinessProbe": {
          "description": "ReadinessProbe to be used in the Container.",
          "properties": {
            "exec": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
              "properties": {
                "command": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "format": "int32",
              "type": "integer"
            },
            "httpGet": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
              "properties": {
                "host": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#tcpsocketaction-v1-core.",
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "timeoutSeconds": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "replicas": {
          "default": 1,
          "description": "Replicas indicates the number of desired instances.",
          "format": "int32",
          "type": "integer"
        },
        "requeueInterval": {
          "description": "RequeueInterval is used to perform requeue reconciliations. If not defined, it defaults to 10s.",
          "type": "string"
        },
        "resources": {
          "description": "Resouces describes the compute resource requirements.",
          "properties": {
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "securityContext": {
          "description": "SecurityContext holds security configuration that will be applied to a container.",
          "properties": {
            "allowPrivilegeEscalation": {
              "type": "boolean"
            },
            "capabilities": {
              "description": "Adds and removes POSIX capabilities from running containers.",
              "properties": {
                "add": {
                  "description": "Added capabilities",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                },
                "drop": {
                  "description": "Removed capabilities",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "privileged": {
              "type": "boolean"
            },
            "readOnlyRootFilesystem": {
              "type": "boolean"
            },
            "runAsGroup": {
              "format": "int64",
              "type": "integer"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "servers": {
          "description": "Servers are the MariaDB servers to forward traffic to. It is required if 'spec.mariaDbRef' is not provided.",
          "items": {
            "description": "MaxScaleServer defines a MariaDB server to forward traffic to.",
            "properties": {
              "address": {
                "description": "Address is the network address of the MariaDB server.",
                "type": "string"
              },
              "maintenance": {
                "description": "Maintenance indicates whether the server is in maintenance mode.",
                "type": "boolean"
              },
              "name": {
                "description": "Name is the identifier of the MariaDB server.",
                "type": "string"
              },
              "params": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Params defines extra parameters to pass to the server.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#server_1.",
                "type": "object"
              },
              "port": {
                "description": "Port is the network port of the MariaDB server. If not provided, it defaults to 3306.",
                "format": "int32",
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol is the MaxScale protocol to use when communicating with this MariaDB server. If not provided, it defaults to MariaDBBackend.",
                "type": "string"
              }
            },
            "required": [
              "address",
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to be used by the Pods.",
          "type": "string"
        },
        "services": {
          "description": "Services define how the traffic is forwarded to the MariaDB servers. It is defaulted if not provided.",
          "items": {
            "description": "Services define how the traffic is forwarded to the MariaDB servers.",
            "properties": {
              "listener": {
                "description": "MaxScaleListener defines how the MaxScale server will listen for connections.",
                "properties": {
                  "name": {
                    "description": "Name is the identifier of the listener. It is defaulted if not provided",
                    "type": "string"
                  },
                  "params": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Params defines extra parameters to pass to the listener.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#listener_1.",
                    "type": "object"
                  },
                  "port": {
                    "description": "Port is the network port where the MaxScale server will listen.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "protocol": {
                    "description": "Protocol is the MaxScale protocol to use when communicating with the client. If not provided, it defaults to MariaDBProtocol.",
                    "type": "string"
                  },
                  "suspend": {
                    "default": false,
                    "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "port"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "name": {
                "description": "Name is the identifier of the MaxScale service.",
                "type": "string"
              },
              "params": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Params defines extra parameters to pass to the service.\nAny parameter supported by MaxScale may be specified here. See reference:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-mariadb-maxscale-configuration-guide/#service_1.\nRouter specific parameter are also suported:\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-readwritesplit/#configuration.\nhttps://mariadb.com/kb/en/mariadb-maxscale-2308-readconnroute/#configuration.",
                "type": "object"
              },
              "router": {
                "description": "Router is the type of router to use.",
                "enum": [
                  "readwritesplit",
                  "readconnroute"
                ],
                "type": "string"
              },
              "suspend": {
                "default": false,
                "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
                "type": "boolean"
              }
            },
            "required": [
              "listener",
              "name",
              "router"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "startupProbe": {
          "description": "StartupProbe to be used in the Container.",
          "properties": {
            "exec": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#execaction-v1-core.",
              "properties": {
                "command": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "format": "int32",
              "type": "integer"
            },
            "httpGet": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#httpgetaction-v1-core.",
              "properties": {
                "host": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "URIScheme identifies the scheme used for connection to a host for Get actions",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#tcpsocketaction-v1-core.",
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "timeoutSeconds": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "suspend": {
          "default": false,
          "description": "Suspend indicates whether the current resource should be suspended or not.\nThis can be useful for maintenance, as disabling the reconciliation prevents the operator from interfering with user operations during maintenance activities.",
          "type": "boolean"
        },
        "tls": {
          "description": "TLS defines the PKI to be used with MaxScale.",
          "properties": {
            "adminCASecretRef": {
              "description": "AdminCASecretRef is a reference to a Secret containing the admin certificate authority keypair. It is used to establish trust and issue certificates for the MaxScale's administrative REST API and GUI.\nOne of:\n- Secret containing both the 'ca.crt' and 'ca.key' keys. This allows you to bring your own CA to Kubernetes to issue certificates.\n- Secret containing only the 'ca.crt' in order to establish trust. In this case, either adminCertSecretRef or adminCertIssuerRef fields must be provided.\nIf not provided, a self-signed CA will be provisioned to issue the server certificate.",
              "properties": {
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "adminCertIssuerRef": {
              "description": "AdminCertIssuerRef is a reference to a cert-manager issuer object used to issue the MaxScale's administrative REST API and GUI certificate. cert-manager must be installed previously in the cluster.\nIt is mutually exclusive with adminCertSecretRef.\nBy default, the Secret field 'ca.crt' provisioned by cert-manager will be added to the trust chain. A custom trust bundle may be specified via adminCASecretRef.",
              "properties": {
                "group": {
                  "description": "Group of the resource being referred to.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the resource being referred to.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the resource being referred to.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "adminCertSecretRef": {
              "description": "AdminCertSecretRef is a reference to a TLS Secret used by the MaxScale's administrative REST API and GUI.",
              "properties": {
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "enabled": {
              "description": "Enabled indicates whether TLS is enabled, determining if certificates should be issued and mounted to the MaxScale instance.\nIt is enabled by default when the referred MariaDB instance (via mariaDbRef) has TLS enabled and enforced.",
              "type": "boolean"
            },
            "listenerCASecretRef": {
              "description": "ListenerCASecretRef is a reference to a Secret containing the listener certificate authority keypair. It is used to establish trust and issue certificates for the MaxScale's listeners.\nOne of:\n- Secret containing both the 'ca.crt' and 'ca.key' keys. This allows you to bring your own CA to Kubernetes to issue certificates.\n- Secret containing only the 'ca.crt' in order to establish trust. In this case, either listenerCertSecretRef or listenerCertIssuerRef fields must be provided.\nIf not provided, a self-signed CA will be provisioned to issue the listener certificate.",
              "properties": {
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "listenerCertIssuerRef": {
              "description": "ListenerCertIssuerRef is a reference to a cert-manager issuer object used to issue the MaxScale's listeners certificate. cert-manager must be installed previously in the cluster.\nIt is mutually exclusive with listenerCertSecretRef.\nBy default, the Secret field 'ca.crt' provisioned by cert-manager will be added to the trust chain. A custom trust bundle may be specified via listenerCASecretRef.",
              "properties": {
                "group": {
                  "description": "Group of the resource being referred to.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the resource being referred to.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the resource being referred to.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "listenerCertSecretRef": {
              "description": "ListenerCertSecretRef is a reference to a TLS Secret used by the MaxScale's listeners.",
              "properties": {
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "replicationSSLEnabled": {
              "description": "ReplicationSSLEnabled specifies whether the replication SSL is enabled. If enabled, the SSL options will be added to the server configuration.\nIt is enabled by default when the referred MariaDB instance (via mariaDbRef) has replication enabled.\nIf the MariaDB servers are manually provided by the user via the 'servers' field, this must be set by the user as well.",
              "type": "boolean"
            },
            "serverCASecretRef": {
              "description": "ServerCASecretRef is a reference to a Secret containing the MariaDB server CA certificates. It is used to establish trust with MariaDB servers.\nThe Secret should contain a 'ca.crt' key in order to establish trust.\nIf not provided, and the reference to a MariaDB resource is set (mariaDbRef), it will be defaulted to the referred MariaDB CA bundle.",
              "properties": {
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "serverCertSecretRef": {
              "description": "ServerCertSecretRef is a reference to a TLS Secret used by MaxScale to connect to the MariaDB servers.\nIf not provided, and the reference to a MariaDB resource is set (mariaDbRef), it will be defaulted to the referred MariaDB client certificate (clientCertSecretRef).",
              "properties": {
                "name": {
                  "default": "",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "verifyPeerCertificate": {
              "description": "VerifyPeerCertificate specifies whether the peer certificate's signature should be validated against the CA.\nIt is disabled by default.",
              "type": "boolean"
            },
            "verifyPeerHost": {
              "description": "VerifyPeerHost specifies whether the peer certificate's SANs should match the peer host.\nIt is disabled by default.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tolerations": {
          "description": "Tolerations to be used in the Pod.",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "format": "int64",
                "type": "integer"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints to be used in the Pod.",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#topologyspreadconstraint-v1-core.",
            "properties": {
              "labelSelector": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "matchLabelKeys": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "maxSkew": {
                "format": "int32",
                "type": "integer"
              },
              "minDomains": {
                "format": "int32",
                "type": "integer"
              },
              "nodeAffinityPolicy": {
                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                "type": "string"
              },
              "nodeTaintsPolicy": {
                "description": "NodeInclusionPolicy defines the type of node inclusion policy",
                "type": "string"
              },
              "topologyKey": {
                "type": "string"
              },
              "whenUnsatisfiable": {
                "type": "string"
              }
            },
            "required": [
              "maxSkew",
              "topologyKey",
              "whenUnsatisfiable"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "updateStrategy": {
          "description": "UpdateStrategy defines the update strategy for the StatefulSet object.",
          "properties": {
            "rollingUpdate": {
              "description": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.",
              "properties": {
                "maxUnavailable": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding up. This can not be 0.\nDefaults to 1. This field is alpha-level and is only honored by servers that enable the\nMaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to\nReplicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it\nwill be counted towards MaxUnavailable.",
                  "x-kubernetes-int-or-string": true
                },
                "partition": {
                  "description": "Partition indicates the ordinal at which the StatefulSet should be partitioned\nfor updates. During a rolling update, all pods from ordinal Replicas-1 to\nPartition are updated. All pods from ordinal Partition-1 to 0 remain untouched.\nThis is helpful in being able to do a canary based deployment. The default value is 0.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "type": {
              "description": "Type indicates the type of the StatefulSetUpdateStrategy.\nDefault is RollingUpdate.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "volumeMounts": {
          "description": "VolumeMounts to be used in the Container.",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.31/#volumemount-v1-core.",
            "properties": {
              "mountPath": {
                "type": "string"
              },
              "name": {
                "description": "This must match the Name of a Volume.",
                "type": "string"
              },
              "readOnly": {
                "type": "boolean"
              },
              "subPath": {
                "type": "string"
              }
            },
            "required": [
              "mountPath",
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "MaxScaleStatus defines the observed state of MaxScale",
      "properties": {
        "conditions": {
          "description": "Conditions for the MaxScale object.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "configSync": {
          "description": "ConfigSync is the state of config sync.",
          "properties": {
            "databaseVersion": {
              "type": "integer"
            },
            "maxScaleVersion": {
              "type": "integer"
            }
          },
          "required": [
            "databaseVersion",
            "maxScaleVersion"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "listeners": {
          "description": "Listeners is the state of the listeners in the MaxScale API.",
          "items": {
            "description": "MaxScaleResourceStatus indicates whether the resource is in a given state.",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "monitor": {
          "description": "Monitor is the state of the monitor in the MaxScale API.",
          "properties": {
            "name": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "state"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "primaryServer": {
          "description": "PrimaryServer is the primary server in the MaxScale API.",
          "type": "string"
        },
        "replicas": {
          "description": "Replicas indicates the number of current instances.",
          "format": "int32",
          "type": "integer"
        },
        "servers": {
          "description": "Servers is the state of the servers in the MaxScale API.",
          "items": {
            "description": "MaxScaleAPIStatus is the state of the servers in the MaxScale API.",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "services": {
          "description": "Services is the state of the services in the MaxScale API.",
          "items": {
            "description": "MaxScaleResourceStatus indicates whether the resource is in a given state.",
            "properties": {
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "state"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "tls": {
          "description": "TLS aggregates the status of the certificates used by the MaxScale instance.",
          "properties": {
            "adminCert": {
              "description": "AdminCert is the status of the admin certificate.",
              "properties": {
                "issuer": {
                  "description": "Issuer is the issuer of the current certificate.",
                  "type": "string"
                },
                "notAfter": {
                  "description": "NotAfter indicates that the certificate is not valid after the given date.",
                  "format": "date-time",
                  "type": "string"
                },
                "notBefore": {
                  "description": "NotBefore indicates that the certificate is not valid before the given date.",
                  "format": "date-time",
                  "type": "string"
                },
                "subject": {
                  "description": "Subject is the subject of the current certificate.",
                  "type": "string"
                }
              },
              "required": [
                "issuer",
                "subject"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "caBundle": {
              "description": "CABundle is the status of the Certificate Authority bundle.",
              "items": {
                "description": "CertificateStatus represents the current status of a TLS certificate.",
                "properties": {
                  "issuer": {
                    "description": "Issuer is the issuer of the current certificate.",
                    "type": "string"
                  },
                  "notAfter": {
                    "description": "NotAfter indicates that the certificate is not valid after the given date.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "notBefore": {
                    "description": "NotBefore indicates that the certificate is not valid before the given date.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Subject is the subject of the current certificate.",
                    "type": "string"
                  }
                },
                "required": [
                  "issuer",
                  "subject"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "listenerCert": {
              "description": "ListenerCert is the status of the listener certificate.",
              "properties": {
                "issuer": {
                  "description": "Issuer is the issuer of the current certificate.",
                  "type": "string"
                },
                "notAfter": {
                  "description": "NotAfter indicates that the certificate is not valid after the given date.",
                  "format": "date-time",
                  "type": "string"
                },
                "notBefore": {
                  "description": "NotBefore indicates that the certificate is not valid before the given date.",
                  "format": "date-time",
                  "type": "string"
                },
                "subject": {
                  "description": "Subject is the subject of the current certificate.",
                  "type": "string"
                }
              },
              "required": [
                "issuer",
                "subject"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "serverCert": {
              "description": "ServerCert is the status of the MariaDB server certificate.",
              "properties": {
                "issuer": {
                  "description": "Issuer is the issuer of the current certificate.",
                  "type": "string"
                },
                "notAfter": {
                  "description": "NotAfter indicates that the certificate is not valid after the given date.",
                  "format": "date-time",
                  "type": "string"
                },
                "notBefore": {
                  "description": "NotBefore indicates that the certificate is not valid before the given date.",
                  "format": "date-time",
                  "type": "string"
                },
                "subject": {
                  "description": "Subject is the subject of the current certificate.",
                  "type": "string"
                }
              },
              "required": [
                "issuer",
                "subject"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
