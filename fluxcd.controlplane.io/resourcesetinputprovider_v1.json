{
  "description": "ResourceSetInputProvider is the Schema for the ResourceSetInputProviders API.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ResourceSetInputProviderSpec defines the desired state of ResourceSetInputProvider",
      "properties": {
        "certSecretRef": {
          "description": "CertSecretRef specifies the Kubernetes Secret containing either or both of\n\n- a PEM-encoded CA certificate (`ca.crt`)\n- a PEM-encoded client certificate (`tls.crt`) and private key (`tls.key`)\n\nWhen connecting to a Git provider that uses self-signed certificates, the CA certificate\nmust be set in the Secret under the 'ca.crt' key to establish the trust relationship.",
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "defaultValues": {
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          },
          "description": "DefaultValues contains the default values for the inputs.\nThese values are used to populate the inputs when the provider\nresponse does not contain them.",
          "type": "object"
        },
        "filter": {
          "description": "Filter defines the filter to apply to the input provider response.",
          "properties": {
            "excludeBranch": {
              "description": "ExcludeBranch specifies the regular expression to filter the branches\nthat the input provider should exclude.",
              "type": "string"
            },
            "includeBranch": {
              "description": "IncludeBranch specifies the regular expression to filter the branches\nthat the input provider should include.",
              "type": "string"
            },
            "labels": {
              "description": "Labels specifies the list of labels to filter the input provider response.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "limit": {
              "description": "Limit specifies the maximum number of input sets to return.\nWhen not set, the default limit is 100.",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "secretRef": {
          "description": "SecretRef specifies the Kubernetes Secret containing the basic-auth credentials\nto access the input provider. The secret must contain the keys\n'username' and 'password'.\nWhen connecting to a Git provider, the password should be a personal access token\nthat grants read-only access to the repository.",
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type specifies the type of the input provider.",
          "enum": [
            "GitHubBranch",
            "GitHubPullRequest",
            "GitLabBranch",
            "GitLabMergeRequest"
          ],
          "type": "string"
        },
        "url": {
          "description": "URL specifies the HTTP/S address of the input provider API.\nWhen connecting to a Git provider, the URL should point to the repository address.",
          "pattern": "^(http|https)://.*$",
          "type": "string"
        }
      },
      "required": [
        "type",
        "url"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ResourceSetInputProviderStatus defines the observed state of ResourceSetInputProvider.",
      "properties": {
        "conditions": {
          "description": "Conditions contains the readiness conditions of the object.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "exportedInputs": {
          "description": "ExportedInputs contains the list of inputs exported by the provider.",
          "items": {
            "additionalProperties": {
              "x-kubernetes-preserve-unknown-fields": true
            },
            "description": "ResourceSetInput defines the key-value pairs of the ResourceSet input.",
            "type": "object"
          },
          "type": "array"
        },
        "lastExportedRevision": {
          "description": "LastExportedRevision is the digest of the\ninputs that were last reconcile.",
          "type": "string"
        },
        "lastHandledReconcileAt": {
          "description": "LastHandledReconcileAt holds the value of the most recent\nreconcile request value, so a change of the annotation value\ncan be detected.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
