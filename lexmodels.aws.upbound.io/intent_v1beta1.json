{
  "description": "Intent is the Schema for the Intents API. Provides an Amazon Lex intent resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IntentSpec defines the desired state of Intent",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "conclusionStatement": {
              "description": "The statement that you want Amazon Lex to convey to the user\nafter the intent is successfully fulfilled by the Lambda function. This element is relevant only if\nyou provide a Lambda function in the fulfillment_activity. If you return the intent to the client\napplication, you can't specify this element. The follow_up_prompt and conclusion_statement are\nmutually exclusive. You can specify only one. Attributes are documented under statement.",
              "items": {
                "properties": {
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "confirmationPrompt": {
              "description": "Prompts the user to confirm the intent. This question should\nhave a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,\nor neither. Attributes are documented under prompt.",
              "items": {
                "properties": {
                  "maxAttempts": {
                    "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                    "type": "number"
                  },
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "createVersion": {
              "description": "Determines if a new slot type version is created when the initial\nresource is created and on each update. Defaults to false.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the intent. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "dialogCodeHook": {
              "description": "Specifies a Lambda function to invoke for each user input. You can\ninvoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.",
              "items": {
                "properties": {
                  "messageVersion": {
                    "description": "The version of the request-response that you want Amazon Lex to use\nto invoke your Lambda function. For more information, see\nUsing Lambda Functions. Must be less than or equal to 5 characters in length.",
                    "type": "string"
                  },
                  "uri": {
                    "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "followUpPrompt": {
              "description": "Amazon Lex uses this prompt to solicit additional activity after\nfulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the\nuser to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually\nexclusive. You can specify only one. Attributes are documented under follow_up_prompt.",
              "items": {
                "properties": {
                  "prompt": {
                    "description": "Prompts for information from the user. Attributes are documented under prompt.",
                    "items": {
                      "properties": {
                        "maxAttempts": {
                          "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        },
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "rejectionStatement": {
                    "description": "If the user answers \"no\" to the question defined in the prompt field,\nAmazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are\ndocumented below under statement.",
                    "items": {
                      "properties": {
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "fulfillmentActivity": {
              "description": "Describes how the intent is fulfilled. For example, after a\nuser provides all of the information for a pizza order, fulfillment_activity defines how the bot\nplaces an order with a local pizza store. Attributes are documented under fulfillment_activity.",
              "items": {
                "properties": {
                  "codeHook": {
                    "description": "A description of the Lambda function that is run to fulfill the intent.\nRequired if type is CodeHook. Attributes are documented under code_hook.",
                    "items": {
                      "properties": {
                        "messageVersion": {
                          "description": "The version of the request-response that you want Amazon Lex to use\nto invoke your Lambda function. For more information, see\nUsing Lambda Functions. Must be less than or equal to 5 characters in length.",
                          "type": "string"
                        },
                        "uri": {
                          "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "How the intent should be fulfilled, either by running a Lambda function or by\nreturning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "parentIntentSignature": {
              "description": "A unique identifier for the built-in intent to base this\nintent on. To find the signature for an intent, see\nStandard Built-in Intents\nin the Alexa Skills Kit.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "rejectionStatement": {
              "description": "When the user answers \"no\" to the question defined in\nconfirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was\ncanceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.\nAttributes are documented under statement.",
              "items": {
                "properties": {
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "sampleUtterances": {
              "description": "An array of utterances (strings) that a user might say to signal\nthe intent. For example, \"I want {PizzaSize} pizza\", \"Order {Quantity} {PizzaSize} pizzas\".\nIn each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "slot": {
              "description": "An list of intent slots. At runtime, Amazon Lex elicits required slot values\nfrom the user using prompts defined in the slots. Attributes are documented under slot.",
              "items": {
                "properties": {
                  "description": {
                    "description": "A description of the bot. Must be less than or equal to 200 characters in length.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Directs Lex the order in which to elicit this slot value from the user.\nFor example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for\nthe slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits\nvalues is arbitrary. Must be between 1 and 100.",
                    "type": "number"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  },
                  "sampleUtterances": {
                    "description": "If you know a specific pattern with which users might respond to\nan Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This\nis optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "slotConstraint": {
                    "description": "Specifies whether the slot is required or optional.",
                    "type": "string"
                  },
                  "slotType": {
                    "description": "The type of the slot, either a custom slot type that you defined or one of\nthe built-in slot types. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "slotTypeVersion": {
                    "description": "The version of the slot type. Must be less than or equal to 64 characters in length.",
                    "type": "string"
                  },
                  "valueElicitationPrompt": {
                    "description": "The prompt that Amazon Lex uses to elicit the slot value\nfrom the user. Attributes are documented under prompt.",
                    "items": {
                      "properties": {
                        "maxAttempts": {
                          "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        },
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "conclusionStatement": {
              "description": "The statement that you want Amazon Lex to convey to the user\nafter the intent is successfully fulfilled by the Lambda function. This element is relevant only if\nyou provide a Lambda function in the fulfillment_activity. If you return the intent to the client\napplication, you can't specify this element. The follow_up_prompt and conclusion_statement are\nmutually exclusive. You can specify only one. Attributes are documented under statement.",
              "items": {
                "properties": {
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "confirmationPrompt": {
              "description": "Prompts the user to confirm the intent. This question should\nhave a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,\nor neither. Attributes are documented under prompt.",
              "items": {
                "properties": {
                  "maxAttempts": {
                    "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                    "type": "number"
                  },
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "createVersion": {
              "description": "Determines if a new slot type version is created when the initial\nresource is created and on each update. Defaults to false.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the intent. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "dialogCodeHook": {
              "description": "Specifies a Lambda function to invoke for each user input. You can\ninvoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.",
              "items": {
                "properties": {
                  "messageVersion": {
                    "description": "The version of the request-response that you want Amazon Lex to use\nto invoke your Lambda function. For more information, see\nUsing Lambda Functions. Must be less than or equal to 5 characters in length.",
                    "type": "string"
                  },
                  "uri": {
                    "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "followUpPrompt": {
              "description": "Amazon Lex uses this prompt to solicit additional activity after\nfulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the\nuser to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually\nexclusive. You can specify only one. Attributes are documented under follow_up_prompt.",
              "items": {
                "properties": {
                  "prompt": {
                    "description": "Prompts for information from the user. Attributes are documented under prompt.",
                    "items": {
                      "properties": {
                        "maxAttempts": {
                          "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        },
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "rejectionStatement": {
                    "description": "If the user answers \"no\" to the question defined in the prompt field,\nAmazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are\ndocumented below under statement.",
                    "items": {
                      "properties": {
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "fulfillmentActivity": {
              "description": "Describes how the intent is fulfilled. For example, after a\nuser provides all of the information for a pizza order, fulfillment_activity defines how the bot\nplaces an order with a local pizza store. Attributes are documented under fulfillment_activity.",
              "items": {
                "properties": {
                  "codeHook": {
                    "description": "A description of the Lambda function that is run to fulfill the intent.\nRequired if type is CodeHook. Attributes are documented under code_hook.",
                    "items": {
                      "properties": {
                        "messageVersion": {
                          "description": "The version of the request-response that you want Amazon Lex to use\nto invoke your Lambda function. For more information, see\nUsing Lambda Functions. Must be less than or equal to 5 characters in length.",
                          "type": "string"
                        },
                        "uri": {
                          "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "How the intent should be fulfilled, either by running a Lambda function or by\nreturning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "parentIntentSignature": {
              "description": "A unique identifier for the built-in intent to base this\nintent on. To find the signature for an intent, see\nStandard Built-in Intents\nin the Alexa Skills Kit.",
              "type": "string"
            },
            "rejectionStatement": {
              "description": "When the user answers \"no\" to the question defined in\nconfirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was\ncanceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.\nAttributes are documented under statement.",
              "items": {
                "properties": {
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "sampleUtterances": {
              "description": "An array of utterances (strings) that a user might say to signal\nthe intent. For example, \"I want {PizzaSize} pizza\", \"Order {Quantity} {PizzaSize} pizzas\".\nIn each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "slot": {
              "description": "An list of intent slots. At runtime, Amazon Lex elicits required slot values\nfrom the user using prompts defined in the slots. Attributes are documented under slot.",
              "items": {
                "properties": {
                  "description": {
                    "description": "A description of the bot. Must be less than or equal to 200 characters in length.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Directs Lex the order in which to elicit this slot value from the user.\nFor example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for\nthe slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits\nvalues is arbitrary. Must be between 1 and 100.",
                    "type": "number"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  },
                  "sampleUtterances": {
                    "description": "If you know a specific pattern with which users might respond to\nan Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This\nis optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "slotConstraint": {
                    "description": "Specifies whether the slot is required or optional.",
                    "type": "string"
                  },
                  "slotType": {
                    "description": "The type of the slot, either a custom slot type that you defined or one of\nthe built-in slot types. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "slotTypeVersion": {
                    "description": "The version of the slot type. Must be less than or equal to 64 characters in length.",
                    "type": "string"
                  },
                  "valueElicitationPrompt": {
                    "description": "The prompt that Amazon Lex uses to elicit the slot value\nfrom the user. Attributes are documented under prompt.",
                    "items": {
                      "properties": {
                        "maxAttempts": {
                          "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        },
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.fulfillmentActivity is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.fulfillmentActivity) || (has(self.initProvider) && has(self.initProvider.fulfillmentActivity))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "IntentStatus defines the observed state of Intent.",
      "properties": {
        "atProvider": {
          "properties": {
            "arn": {
              "description": "The ARN of the Lex intent.",
              "type": "string"
            },
            "checksum": {
              "description": "Checksum identifying the version of the intent that was created. The checksum is not\nincluded as an argument because the resource will add it automatically when updating the intent.",
              "type": "string"
            },
            "conclusionStatement": {
              "description": "The statement that you want Amazon Lex to convey to the user\nafter the intent is successfully fulfilled by the Lambda function. This element is relevant only if\nyou provide a Lambda function in the fulfillment_activity. If you return the intent to the client\napplication, you can't specify this element. The follow_up_prompt and conclusion_statement are\nmutually exclusive. You can specify only one. Attributes are documented under statement.",
              "items": {
                "properties": {
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "confirmationPrompt": {
              "description": "Prompts the user to confirm the intent. This question should\nhave a yes or no answer. You you must provide both the rejection_statement and confirmation_prompt,\nor neither. Attributes are documented under prompt.",
              "items": {
                "properties": {
                  "maxAttempts": {
                    "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                    "type": "number"
                  },
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "createVersion": {
              "description": "Determines if a new slot type version is created when the initial\nresource is created and on each update. Defaults to false.",
              "type": "boolean"
            },
            "createdDate": {
              "description": "The date when the intent version was created.",
              "type": "string"
            },
            "description": {
              "description": "A description of the intent. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "dialogCodeHook": {
              "description": "Specifies a Lambda function to invoke for each user input. You can\ninvoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.",
              "items": {
                "properties": {
                  "messageVersion": {
                    "description": "The version of the request-response that you want Amazon Lex to use\nto invoke your Lambda function. For more information, see\nUsing Lambda Functions. Must be less than or equal to 5 characters in length.",
                    "type": "string"
                  },
                  "uri": {
                    "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "followUpPrompt": {
              "description": "Amazon Lex uses this prompt to solicit additional activity after\nfulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the\nuser to order a drink. The follow_up_prompt field and the conclusion_statement field are mutually\nexclusive. You can specify only one. Attributes are documented under follow_up_prompt.",
              "items": {
                "properties": {
                  "prompt": {
                    "description": "Prompts for information from the user. Attributes are documented under prompt.",
                    "items": {
                      "properties": {
                        "maxAttempts": {
                          "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        },
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "rejectionStatement": {
                    "description": "If the user answers \"no\" to the question defined in the prompt field,\nAmazon Lex responds with this statement to acknowledge that the intent was canceled. Attributes are\ndocumented below under statement.",
                    "items": {
                      "properties": {
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "fulfillmentActivity": {
              "description": "Describes how the intent is fulfilled. For example, after a\nuser provides all of the information for a pizza order, fulfillment_activity defines how the bot\nplaces an order with a local pizza store. Attributes are documented under fulfillment_activity.",
              "items": {
                "properties": {
                  "codeHook": {
                    "description": "A description of the Lambda function that is run to fulfill the intent.\nRequired if type is CodeHook. Attributes are documented under code_hook.",
                    "items": {
                      "properties": {
                        "messageVersion": {
                          "description": "The version of the request-response that you want Amazon Lex to use\nto invoke your Lambda function. For more information, see\nUsing Lambda Functions. Must be less than or equal to 5 characters in length.",
                          "type": "string"
                        },
                        "uri": {
                          "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "How the intent should be fulfilled, either by running a Lambda function or by\nreturning the slot data to the client application. Type can be either ReturnIntent or CodeHook, as documented here.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "id": {
              "type": "string"
            },
            "lastUpdatedDate": {
              "description": "The date when the $LATEST version of this intent was updated.",
              "type": "string"
            },
            "parentIntentSignature": {
              "description": "A unique identifier for the built-in intent to base this\nintent on. To find the signature for an intent, see\nStandard Built-in Intents\nin the Alexa Skills Kit.",
              "type": "string"
            },
            "rejectionStatement": {
              "description": "When the user answers \"no\" to the question defined in\nconfirmation_prompt, Amazon Lex responds with this statement to acknowledge that the intent was\ncanceled. You must provide both the rejection_statement and the confirmation_prompt, or neither.\nAttributes are documented under statement.",
              "items": {
                "properties": {
                  "message": {
                    "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The content type of the message string.",
                          "type": "string"
                        },
                        "groupNumber": {
                          "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "sampleUtterances": {
              "description": "An array of utterances (strings) that a user might say to signal\nthe intent. For example, \"I want {PizzaSize} pizza\", \"Order {Quantity} {PizzaSize} pizzas\".\nIn each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "slot": {
              "description": "An list of intent slots. At runtime, Amazon Lex elicits required slot values\nfrom the user using prompts defined in the slots. Attributes are documented under slot.",
              "items": {
                "properties": {
                  "description": {
                    "description": "A description of the bot. Must be less than or equal to 200 characters in length.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the intent slot that you want to create. The name is case sensitive. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Directs Lex the order in which to elicit this slot value from the user.\nFor example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for\nthe slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits\nvalues is arbitrary. Must be between 1 and 100.",
                    "type": "number"
                  },
                  "responseCard": {
                    "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                    "type": "string"
                  },
                  "sampleUtterances": {
                    "description": "If you know a specific pattern with which users might respond to\nan Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This\nis optional. In most cases, Amazon Lex is capable of understanding user utterances. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "slotConstraint": {
                    "description": "Specifies whether the slot is required or optional.",
                    "type": "string"
                  },
                  "slotType": {
                    "description": "The type of the slot, either a custom slot type that you defined or one of\nthe built-in slot types. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "slotTypeVersion": {
                    "description": "The version of the slot type. Must be less than or equal to 64 characters in length.",
                    "type": "string"
                  },
                  "valueElicitationPrompt": {
                    "description": "The prompt that Amazon Lex uses to elicit the slot value\nfrom the user. Attributes are documented under prompt.",
                    "items": {
                      "properties": {
                        "maxAttempts": {
                          "description": "The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                          "type": "number"
                        },
                        "message": {
                          "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message. Must contain between 1 and 15 messages.",
                          "items": {
                            "properties": {
                              "content": {
                                "description": "The text of the message. Must be less than or equal to 1000 characters in length.",
                                "type": "string"
                              },
                              "contentType": {
                                "description": "The content type of the message string.",
                                "type": "string"
                              },
                              "groupNumber": {
                                "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response. Must be a number between 1 and 5 (inclusive).",
                                "type": "number"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "responseCard": {
                          "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card. Must be less than or equal to 50000 characters in length.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "version": {
              "description": "The version of the bot.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
