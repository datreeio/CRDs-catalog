{
  "properties": {
    "apiVersion": {
      "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "deletionPolicy": {
          "description": "The deletion policy for the secret version. Setting 'ABANDON' allows the resource\nto be abandoned rather than deleted. Setting 'DISABLE' allows the resource to be\ndisabled rather than deleted. Default is 'DELETE'. Possible values are:\n  * DELETE\n  * DISABLE\n  * ABANDON.",
          "type": "string"
        },
        "enabled": {
          "description": "The current state of the SecretVersion.",
          "type": "boolean"
        },
        "isSecretDataBase64": {
          "description": "Immutable. If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.",
          "type": "boolean"
        },
        "resourceID": {
          "description": "Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.",
          "type": "string"
        },
        "secretData": {
          "description": "Immutable. The secret data. Must be no larger than 64KiB.",
          "oneOf": [
            {
              "not": {
                "required": [
                  "valueFrom"
                ]
              },
              "required": [
                "value"
              ]
            },
            {
              "not": {
                "required": [
                  "value"
                ]
              },
              "required": [
                "valueFrom"
              ]
            }
          ],
          "properties": {
            "value": {
              "description": "Value of the field. Cannot be used if 'valueFrom' is specified.",
              "type": "string"
            },
            "valueFrom": {
              "description": "Source for the field's value. Cannot be used if 'value' is specified.",
              "properties": {
                "secretKeyRef": {
                  "description": "Reference to a value with the given key in the given Secret in the resource's namespace.",
                  "properties": {
                    "key": {
                      "description": "Key that identifies the value to be extracted.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the Secret to extract a value from.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "secretRef": {
          "description": "Secret Manager secret resource",
          "oneOf": [
            {
              "not": {
                "required": [
                  "external"
                ]
              },
              "required": [
                "name"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              },
              "required": [
                "external"
              ]
            }
          ],
          "properties": {
            "external": {
              "description": "Allowed value: The `name` field of a `SecretManagerSecret` resource.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "secretData",
        "secretRef"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "items": {
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "createTime": {
          "description": "The time at which the Secret was created.",
          "type": "string"
        },
        "destroyTime": {
          "description": "The time at which the Secret was destroyed. Only present if state is DESTROYED.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the SecretVersion. Format:\n'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer"
        },
        "version": {
          "description": "The version of the Secret.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
