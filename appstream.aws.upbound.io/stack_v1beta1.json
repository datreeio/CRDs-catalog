{
  "description": "Stack is the Schema for the Stacks API. Provides an AppStream stack",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "StackSpec defines the desired state of Stack",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "accessEndpoints": {
              "description": "Set of configuration blocks defining the interface VPC endpoints. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.\nSee access_endpoints below.",
              "items": {
                "properties": {
                  "endpointType": {
                    "description": "Type of the interface endpoint.\nSee the AccessEndpoint AWS API documentation for valid values.",
                    "type": "string"
                  },
                  "vpceId": {
                    "description": "ID of the VPC in which the interface endpoint is used.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "applicationSettings": {
              "description": "Settings for application settings persistence.\nSee application_settings below.",
              "items": {
                "properties": {
                  "enabled": {
                    "description": "Whether application settings should be persisted.",
                    "type": "boolean"
                  },
                  "settingsGroup": {
                    "description": "Name of the settings group.\nRequired when enabled is true.\nCan be up to 100 characters.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "description": {
              "description": "Description for the AppStream stack.",
              "type": "string"
            },
            "displayName": {
              "description": "Stack name to display.",
              "type": "string"
            },
            "embedHostDomains": {
              "description": "Domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "feedbackUrl": {
              "description": "URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed. .",
              "type": "string"
            },
            "name": {
              "description": "Unique name for the AppStream stack.",
              "type": "string"
            },
            "redirectUrl": {
              "description": "URL that users are redirected to after their streaming session ends.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "storageConnectors": {
              "description": "Configuration block for the storage connectors to enable.\nSee storage_connectors below.",
              "items": {
                "properties": {
                  "connectorType": {
                    "description": "Type of storage connector.\nValid values are HOMEFOLDERS, GOOGLE_DRIVE, or ONE_DRIVE.",
                    "type": "string"
                  },
                  "domains": {
                    "description": "Names of the domains for the account.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "resourceIdentifier": {
                    "description": "ARN of the storage connector.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "streamingExperienceSettings": {
              "description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.\nSee streaming_experience_settings below.",
              "items": {
                "properties": {
                  "preferredProtocol": {
                    "description": "The preferred protocol that you want to use while streaming your application.\nValid values are TCP and UDP.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "userSettings": {
              "description": "Configuration block for the actions that are enabled or disabled for users during their streaming sessions. If not provided, these settings are configured automatically by AWS.\nSee user_settings below.",
              "items": {
                "properties": {
                  "action": {
                    "description": "Action that is enabled or disabled.\nValid values are CLIPBOARD_COPY_FROM_LOCAL_DEVICE,  CLIPBOARD_COPY_TO_LOCAL_DEVICE, FILE_UPLOAD, FILE_DOWNLOAD, PRINTING_TO_LOCAL_DEVICE, DOMAIN_PASSWORD_SIGNIN, or DOMAIN_SMART_CARD_SIGNIN.",
                    "type": "string"
                  },
                  "permission": {
                    "description": "Whether the action is enabled or disabled.\nValid values are ENABLED or DISABLED.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "accessEndpoints": {
              "description": "Set of configuration blocks defining the interface VPC endpoints. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.\nSee access_endpoints below.",
              "items": {
                "properties": {
                  "endpointType": {
                    "description": "Type of the interface endpoint.\nSee the AccessEndpoint AWS API documentation for valid values.",
                    "type": "string"
                  },
                  "vpceId": {
                    "description": "ID of the VPC in which the interface endpoint is used.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "applicationSettings": {
              "description": "Settings for application settings persistence.\nSee application_settings below.",
              "items": {
                "properties": {
                  "enabled": {
                    "description": "Whether application settings should be persisted.",
                    "type": "boolean"
                  },
                  "settingsGroup": {
                    "description": "Name of the settings group.\nRequired when enabled is true.\nCan be up to 100 characters.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "description": {
              "description": "Description for the AppStream stack.",
              "type": "string"
            },
            "displayName": {
              "description": "Stack name to display.",
              "type": "string"
            },
            "embedHostDomains": {
              "description": "Domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "feedbackUrl": {
              "description": "URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed. .",
              "type": "string"
            },
            "name": {
              "description": "Unique name for the AppStream stack.",
              "type": "string"
            },
            "redirectUrl": {
              "description": "URL that users are redirected to after their streaming session ends.",
              "type": "string"
            },
            "storageConnectors": {
              "description": "Configuration block for the storage connectors to enable.\nSee storage_connectors below.",
              "items": {
                "properties": {
                  "connectorType": {
                    "description": "Type of storage connector.\nValid values are HOMEFOLDERS, GOOGLE_DRIVE, or ONE_DRIVE.",
                    "type": "string"
                  },
                  "domains": {
                    "description": "Names of the domains for the account.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "resourceIdentifier": {
                    "description": "ARN of the storage connector.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "streamingExperienceSettings": {
              "description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.\nSee streaming_experience_settings below.",
              "items": {
                "properties": {
                  "preferredProtocol": {
                    "description": "The preferred protocol that you want to use while streaming your application.\nValid values are TCP and UDP.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "userSettings": {
              "description": "Configuration block for the actions that are enabled or disabled for users during their streaming sessions. If not provided, these settings are configured automatically by AWS.\nSee user_settings below.",
              "items": {
                "properties": {
                  "action": {
                    "description": "Action that is enabled or disabled.\nValid values are CLIPBOARD_COPY_FROM_LOCAL_DEVICE,  CLIPBOARD_COPY_TO_LOCAL_DEVICE, FILE_UPLOAD, FILE_DOWNLOAD, PRINTING_TO_LOCAL_DEVICE, DOMAIN_PASSWORD_SIGNIN, or DOMAIN_SMART_CARD_SIGNIN.",
                    "type": "string"
                  },
                  "permission": {
                    "description": "Whether the action is enabled or disabled.\nValid values are ENABLED or DISABLED.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "StackStatus defines the observed state of Stack.",
      "properties": {
        "atProvider": {
          "properties": {
            "accessEndpoints": {
              "description": "Set of configuration blocks defining the interface VPC endpoints. Users of the stack can connect to AppStream 2.0 only through the specified endpoints.\nSee access_endpoints below.",
              "items": {
                "properties": {
                  "endpointType": {
                    "description": "Type of the interface endpoint.\nSee the AccessEndpoint AWS API documentation for valid values.",
                    "type": "string"
                  },
                  "vpceId": {
                    "description": "ID of the VPC in which the interface endpoint is used.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "applicationSettings": {
              "description": "Settings for application settings persistence.\nSee application_settings below.",
              "items": {
                "properties": {
                  "enabled": {
                    "description": "Whether application settings should be persisted.",
                    "type": "boolean"
                  },
                  "settingsGroup": {
                    "description": "Name of the settings group.\nRequired when enabled is true.\nCan be up to 100 characters.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "arn": {
              "description": "ARN of the appstream stack.",
              "type": "string"
            },
            "createdTime": {
              "description": "Date and time, in UTC and extended RFC 3339 format, when the stack was created.",
              "type": "string"
            },
            "description": {
              "description": "Description for the AppStream stack.",
              "type": "string"
            },
            "displayName": {
              "description": "Stack name to display.",
              "type": "string"
            },
            "embedHostDomains": {
              "description": "Domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "set"
            },
            "feedbackUrl": {
              "description": "URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed. .",
              "type": "string"
            },
            "id": {
              "description": "Unique ID of the appstream stack.",
              "type": "string"
            },
            "name": {
              "description": "Unique name for the AppStream stack.",
              "type": "string"
            },
            "redirectUrl": {
              "description": "URL that users are redirected to after their streaming session ends.",
              "type": "string"
            },
            "storageConnectors": {
              "description": "Configuration block for the storage connectors to enable.\nSee storage_connectors below.",
              "items": {
                "properties": {
                  "connectorType": {
                    "description": "Type of storage connector.\nValid values are HOMEFOLDERS, GOOGLE_DRIVE, or ONE_DRIVE.",
                    "type": "string"
                  },
                  "domains": {
                    "description": "Names of the domains for the account.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "resourceIdentifier": {
                    "description": "ARN of the storage connector.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "streamingExperienceSettings": {
              "description": "The streaming protocol you want your stack to prefer. This can be UDP or TCP. Currently, UDP is only supported in the Windows native client.\nSee streaming_experience_settings below.",
              "items": {
                "properties": {
                  "preferredProtocol": {
                    "description": "The preferred protocol that you want to use while streaming your application.\nValid values are TCP and UDP.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "userSettings": {
              "description": "Configuration block for the actions that are enabled or disabled for users during their streaming sessions. If not provided, these settings are configured automatically by AWS.\nSee user_settings below.",
              "items": {
                "properties": {
                  "action": {
                    "description": "Action that is enabled or disabled.\nValid values are CLIPBOARD_COPY_FROM_LOCAL_DEVICE,  CLIPBOARD_COPY_TO_LOCAL_DEVICE, FILE_UPLOAD, FILE_DOWNLOAD, PRINTING_TO_LOCAL_DEVICE, DOMAIN_PASSWORD_SIGNIN, or DOMAIN_SMART_CARD_SIGNIN.",
                    "type": "string"
                  },
                  "permission": {
                    "description": "Whether the action is enabled or disabled.\nValid values are ENABLED or DISABLED.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
