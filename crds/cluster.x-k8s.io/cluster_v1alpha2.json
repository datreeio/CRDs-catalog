{
  "description": "Cluster is the Schema for the clusters API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClusterSpec defines the desired state of Cluster",
      "properties": {
        "clusterNetwork": {
          "description": "Cluster network configuration",
          "properties": {
            "apiServerPort": {
              "description": "APIServerPort specifies the port the API Server should bind to. Defaults to 6443.",
              "format": "int32",
              "type": "integer"
            },
            "pods": {
              "description": "The network ranges from which Pod networks are allocated.",
              "properties": {
                "cidrBlocks": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "cidrBlocks"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "serviceDomain": {
              "description": "Domain name for services.",
              "type": "string"
            },
            "services": {
              "description": "The network ranges from which service VIPs are allocated.",
              "properties": {
                "cidrBlocks": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "cidrBlocks"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "infrastructureRef": {
          "description": "InfrastructureRef is a reference to a provider-specific resource that holds the details for provisioning infrastructure for a cluster in said provider.",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterStatus defines the observed state of Cluster",
      "properties": {
        "apiEndpoints": {
          "description": "APIEndpoints represents the endpoints to communicate with the control plane.",
          "items": {
            "description": "APIEndpoint represents a reachable Kubernetes API endpoint.",
            "properties": {
              "host": {
                "description": "The hostname on which the API server is serving.",
                "type": "string"
              },
              "port": {
                "description": "The port on which the API server is serving.",
                "type": "integer"
              }
            },
            "required": [
              "host",
              "port"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "controlPlaneInitialized": {
          "description": "ControlPlaneInitialized defines if the control plane has been initialized.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "ErrorMessage indicates that there is a problem reconciling the state, and will be set to a descriptive error message.",
          "type": "string"
        },
        "errorReason": {
          "description": "ErrorReason indicates that there is a problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.",
          "type": "string"
        },
        "infrastructureReady": {
          "description": "InfrastructureReady is the state of the infrastructure provider.",
          "type": "boolean"
        },
        "phase": {
          "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
