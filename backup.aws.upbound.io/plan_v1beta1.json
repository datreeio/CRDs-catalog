{
  "description": "Plan is the Schema for the Plans API. Provides an AWS Backup plan resource.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PlanSpec defines the desired state of Plan",
      "properties": {
        "deletionPolicy": {
          "default": "Delete",
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "enum": [
            "Orphan",
            "Delete"
          ],
          "type": "string"
        },
        "forProvider": {
          "properties": {
            "advancedBackupSetting": {
              "description": "An object that specifies backup options for each resource type.",
              "items": {
                "properties": {
                  "backupOptions": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = \"enabled\" } to enable Windows VSS backup option and create a VSS Windows backup.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "resourceType": {
                    "description": "The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "name": {
              "description": "The display name of a backup plan.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "rule": {
              "description": "A rule object that specifies a scheduled task that is used to back up a selection of resources.",
              "items": {
                "properties": {
                  "completionWindow": {
                    "description": "The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.",
                    "type": "number"
                  },
                  "copyAction": {
                    "description": "Configuration block(s) with copy operation settings. Detailed below.",
                    "items": {
                      "properties": {
                        "destinationVaultArn": {
                          "description": "An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.",
                          "type": "string"
                        },
                        "lifecycle": {
                          "description": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.",
                          "items": {
                            "properties": {
                              "coldStorageAfter": {
                                "description": "Specifies the number of days after creation that a recovery point is moved to cold storage.",
                                "type": "number"
                              },
                              "deleteAfter": {
                                "description": "Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.",
                                "type": "number"
                              },
                              "optInToArchiveForSupportedResources": {
                                "description": "This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableContinuousBackup": {
                    "description": "Enable continuous backups for supported resources.",
                    "type": "boolean"
                  },
                  "lifecycle": {
                    "description": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.",
                    "items": {
                      "properties": {
                        "coldStorageAfter": {
                          "description": "Specifies the number of days after creation that a recovery point is moved to cold storage.",
                          "type": "number"
                        },
                        "deleteAfter": {
                          "description": "Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.",
                          "type": "number"
                        },
                        "optInToArchiveForSupportedResources": {
                          "description": "This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "recoveryPointTags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that you can assign to help organize the resources that you create.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "ruleName": {
                    "description": "An display name for a backup rule.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "A CRON expression specifying when AWS Backup initiates a backup job.",
                    "type": "string"
                  },
                  "scheduleExpressionTimezone": {
                    "description": "The timezone in which the schedule expression is set. Default value: \"Etc/UTC\".",
                    "type": "string"
                  },
                  "startWindow": {
                    "description": "The amount of time in minutes before beginning a backup.",
                    "type": "number"
                  },
                  "targetVaultName": {
                    "description": "The name of a logical container where backups are stored.",
                    "type": "string"
                  },
                  "targetVaultNameRef": {
                    "description": "Reference to a Vault in backup to populate targetVaultName.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "targetVaultNameSelector": {
                    "description": "Selector for a Vault in backup to populate targetVaultName.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "required": [
            "region"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "properties": {
            "advancedBackupSetting": {
              "description": "An object that specifies backup options for each resource type.",
              "items": {
                "properties": {
                  "backupOptions": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = \"enabled\" } to enable Windows VSS backup option and create a VSS Windows backup.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "resourceType": {
                    "description": "The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "name": {
              "description": "The display name of a backup plan.",
              "type": "string"
            },
            "rule": {
              "description": "A rule object that specifies a scheduled task that is used to back up a selection of resources.",
              "items": {
                "properties": {
                  "completionWindow": {
                    "description": "The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.",
                    "type": "number"
                  },
                  "copyAction": {
                    "description": "Configuration block(s) with copy operation settings. Detailed below.",
                    "items": {
                      "properties": {
                        "destinationVaultArn": {
                          "description": "An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.",
                          "type": "string"
                        },
                        "lifecycle": {
                          "description": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.",
                          "items": {
                            "properties": {
                              "coldStorageAfter": {
                                "description": "Specifies the number of days after creation that a recovery point is moved to cold storage.",
                                "type": "number"
                              },
                              "deleteAfter": {
                                "description": "Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.",
                                "type": "number"
                              },
                              "optInToArchiveForSupportedResources": {
                                "description": "This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableContinuousBackup": {
                    "description": "Enable continuous backups for supported resources.",
                    "type": "boolean"
                  },
                  "lifecycle": {
                    "description": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.",
                    "items": {
                      "properties": {
                        "coldStorageAfter": {
                          "description": "Specifies the number of days after creation that a recovery point is moved to cold storage.",
                          "type": "number"
                        },
                        "deleteAfter": {
                          "description": "Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.",
                          "type": "number"
                        },
                        "optInToArchiveForSupportedResources": {
                          "description": "This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "recoveryPointTags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that you can assign to help organize the resources that you create.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "ruleName": {
                    "description": "An display name for a backup rule.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "A CRON expression specifying when AWS Backup initiates a backup job.",
                    "type": "string"
                  },
                  "scheduleExpressionTimezone": {
                    "description": "The timezone in which the schedule expression is set. Default value: \"Etc/UTC\".",
                    "type": "string"
                  },
                  "startWindow": {
                    "description": "The amount of time in minutes before beginning a backup.",
                    "type": "number"
                  },
                  "targetVaultName": {
                    "description": "The name of a logical container where backups are stored.",
                    "type": "string"
                  },
                  "targetVaultNameRef": {
                    "description": "Reference to a Vault in backup to populate targetVaultName.",
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "targetVaultNameSelector": {
                    "description": "Selector for a Vault in backup to populate targetVaultName.",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "properties": {
                          "resolution": {
                            "default": "Required",
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "enum": [
                              "Required",
                              "Optional"
                            ],
                            "type": "string"
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "managementPolicies": {
          "default": [
            "*"
          ],
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "providerConfigRef": {
          "default": {
            "name": "default"
          },
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "properties": {
                "resolution": {
                  "default": "Required",
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "enum": [
                    "Required",
                    "Optional"
                  ],
                  "type": "string"
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "properties": {
            "configRef": {
              "default": {
                "name": "default"
              },
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "properties": {
                    "resolution": {
                      "default": "Required",
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "enum": [
                        "Required",
                        "Optional"
                      ],
                      "type": "string"
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object"
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "required": [
            "name",
            "namespace"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "forProvider"
      ],
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "spec.forProvider.name is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))"
        },
        {
          "message": "spec.forProvider.rule is a required parameter",
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || (has(self.initProvider) && has(self.initProvider.rule))"
        }
      ],
      "additionalProperties": false
    },
    "status": {
      "description": "PlanStatus defines the observed state of Plan.",
      "properties": {
        "atProvider": {
          "properties": {
            "advancedBackupSetting": {
              "description": "An object that specifies backup options for each resource type.",
              "items": {
                "properties": {
                  "backupOptions": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to { WindowsVSS = \"enabled\" } to enable Windows VSS backup option and create a VSS Windows backup.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "resourceType": {
                    "description": "The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: EC2.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "arn": {
              "description": "The ARN of the backup plan.",
              "type": "string"
            },
            "id": {
              "description": "The id of the backup plan.",
              "type": "string"
            },
            "name": {
              "description": "The display name of a backup plan.",
              "type": "string"
            },
            "rule": {
              "description": "A rule object that specifies a scheduled task that is used to back up a selection of resources.",
              "items": {
                "properties": {
                  "completionWindow": {
                    "description": "The amount of time in minutes AWS Backup attempts a backup before canceling the job and returning an error.",
                    "type": "number"
                  },
                  "copyAction": {
                    "description": "Configuration block(s) with copy operation settings. Detailed below.",
                    "items": {
                      "properties": {
                        "destinationVaultArn": {
                          "description": "An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.",
                          "type": "string"
                        },
                        "lifecycle": {
                          "description": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.",
                          "items": {
                            "properties": {
                              "coldStorageAfter": {
                                "description": "Specifies the number of days after creation that a recovery point is moved to cold storage.",
                                "type": "number"
                              },
                              "deleteAfter": {
                                "description": "Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.",
                                "type": "number"
                              },
                              "optInToArchiveForSupportedResources": {
                                "description": "This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.",
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "enableContinuousBackup": {
                    "description": "Enable continuous backups for supported resources.",
                    "type": "boolean"
                  },
                  "lifecycle": {
                    "description": "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires.  Fields documented below.",
                    "items": {
                      "properties": {
                        "coldStorageAfter": {
                          "description": "Specifies the number of days after creation that a recovery point is moved to cold storage.",
                          "type": "number"
                        },
                        "deleteAfter": {
                          "description": "Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than cold_storage_after.",
                          "type": "number"
                        },
                        "optInToArchiveForSupportedResources": {
                          "description": "This setting will instruct your backup plan to transition supported resources to archive (cold) storage tier in accordance with your lifecycle settings.",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "recoveryPointTags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Metadata that you can assign to help organize the resources that you create.",
                    "type": "object",
                    "x-kubernetes-map-type": "granular"
                  },
                  "ruleName": {
                    "description": "An display name for a backup rule.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "A CRON expression specifying when AWS Backup initiates a backup job.",
                    "type": "string"
                  },
                  "scheduleExpressionTimezone": {
                    "description": "The timezone in which the schedule expression is set. Default value: \"Etc/UTC\".",
                    "type": "string"
                  },
                  "startWindow": {
                    "description": "The amount of time in minutes before beginning a backup.",
                    "type": "number"
                  },
                  "targetVaultName": {
                    "description": "The name of a logical container where backups are stored.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Key-value map of resource tags.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "x-kubernetes-map-type": "granular"
            },
            "version": {
              "description": "Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
