{
  "description": "VMAlert  executes a list of given alerting or recording rules against configured address.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VMAlertSpec defines the desired state of VMAlert",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the VMAlert\nobject, which shall be mounted into the VMAlert Pods.\nThe ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "configReloaderExtraArgs": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container\nfor example resyncInterval: \"30s\"",
          "type": "object"
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers.\nIt can be useful for proxies, backup, etc.",
          "items": {
            "description": "A single application container that you want to run within a pod.",
            "required": [
              "name"
            ],
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true
          },
          "type": "array"
        },
        "datasource": {
          "description": "Datasource Victoria Metrics or VMSelect url. Required parameter. e.g. http://127.0.0.1:8428",
          "properties": {
            "basicAuth": {
              "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
              "properties": {
                "password": {
                  "description": "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "password_file": {
                  "description": "PasswordFile defines path to password file at disk",
                  "type": "string"
                },
                "username": {
                  "description": "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "bearerTokenFile": {
              "description": "Path to bearer token file",
              "type": "string"
            },
            "bearerTokenSecret": {
              "description": "Optional bearer auth token to use for -remoteWrite.url",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "headers": {
              "description": "Headers allow configuring custom http headers\nMust be in form of semicolon separated header with value\ne.g.\nheaderName:headerValue\nvmalert supports it since 1.79.0 version",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "oauth2": {
              "description": "OAuth2 defines OAuth2 configuration",
              "required": [
                "client_id",
                "token_url"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "tlsConfig": {
              "description": "TLSConfig specifies TLSConfig configuration parameters.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "url": {
              "description": "Victoria Metrics or VMSelect url. Required parameter. E.g. http://127.0.0.1:8428",
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
          "items": {
            "x-kubernetes-preserve-unknown-fields": true
          },
          "properties": {
            "nameservers": {
              "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "options": {
              "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
              "items": {
                "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                "properties": {
                  "name": {
                    "description": "Required.",
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "searches": {
              "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "enforcedNamespaceLabel": {
          "description": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert\nand metric that is user created. The label value will always be the namespace of the object that is\nbeing created.",
          "type": "string"
        },
        "evaluationInterval": {
          "description": "EvaluationInterval defines how often to evaluate rules by default",
          "pattern": "[0-9]+(ms|s|m|h)",
          "type": "string"
        },
        "externalLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "ExternalLabels in the form 'name: value' to add to all generated recording rules and alerts.",
          "type": "object"
        },
        "extraArgs": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "ExtraArgs that will be passed to  VMAlert pod\nfor example -remoteWrite.tmpDataPath=/tmp",
          "type": "object"
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be added to VMAlert pod",
          "items": {
            "description": "EnvVar represents an environment variable present in a Container.",
            "properties": {
              "name": {
                "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                "type": "string"
              },
              "value": {
                "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true,
            "additionalProperties": false
          },
          "type": "array"
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "image": {
          "description": "Image - docker image settings for VMAlert\nif no specified operator uses default config version",
          "properties": {
            "pullPolicy": {
              "description": "PullPolicy describes how to pull docker image",
              "type": "string"
            },
            "repository": {
              "description": "Repository contains name of docker image + it's repository if needed",
              "type": "string"
            },
            "tag": {
              "description": "Tag contains desired docker image version",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace\nto use for pulling images from registries\nsee https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
            "properties": {
              "name": {
                "default": "",
                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                "type": "string"
              }
            },
            "type": "object",
            "x-kubernetes-map-type": "atomic",
            "additionalProperties": false
          },
          "type": "array"
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.\nfetch secrets for injection into the VMAlert configuration from external sources. Any\nerrors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\nUsing initContainers for any use case other then secret fetching is entirely outside the scope\nof what the maintainers will support and by doing so, you accept that this behaviour may break\nat any time without notice.",
          "items": {
            "description": "A single application container that you want to run within a pod.",
            "required": [
              "name"
            ],
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true
          },
          "type": "array"
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features.\nUsing license key is supported starting from VictoriaMetrics v1.94.0.\nSee: https://docs.victoriametrics.com/enterprise.html",
          "properties": {
            "key": {
              "description": "Enterprise license key. This flag is available only in VictoriaMetrics enterprise.\nDocumentation - https://docs.victoriametrics.com/enterprise.html\nfor more information, visit https://victoriametrics.com/products/enterprise/ .\nTo request a trial license, go to https://victoriametrics.com/products/enterprise/trial/",
              "type": "string"
            },
            "keyRef": {
              "description": "KeyRef is reference to secret with license key for enterprise features.",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "logFormat": {
          "description": "LogFormat for VMAlert to be configured with.\ndefault or json",
          "enum": [
            "default",
            "json"
          ],
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMAlert to be configured with.",
          "enum": [
            "INFO",
            "WARN",
            "ERROR",
            "FATAL",
            "PANIC"
          ],
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minim number os seconds to wait before starting update next pod\nif previous in healthy state",
          "format": "int32",
          "type": "integer"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object"
        },
        "notifier": {
          "description": "Notifier prometheus alertmanager endpoint spec. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093\nIf specified both notifier and notifiers, notifier will be added as last element to notifiers.\nonly one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier",
          "properties": {
            "basicAuth": {
              "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
              "properties": {
                "password": {
                  "description": "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "password_file": {
                  "description": "PasswordFile defines path to password file at disk",
                  "type": "string"
                },
                "username": {
                  "description": "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "bearerTokenFile": {
              "description": "Path to bearer token file",
              "type": "string"
            },
            "bearerTokenSecret": {
              "description": "Optional bearer auth token to use for -remoteWrite.url",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "headers": {
              "description": "Headers allow configuring custom http headers\nMust be in form of semicolon separated header with value\ne.g.\nheaderName:headerValue\nvmalert supports it since 1.79.0 version",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "oauth2": {
              "description": "OAuth2 defines OAuth2 configuration",
              "required": [
                "client_id",
                "token_url"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "selector": {
              "description": "Selector allows service discovery for alertmanager\nin this case all matched vmalertmanager replicas will be added into vmalert notifier.url\nas statefulset pod.fqdn",
              "properties": {
                "labelSelector": {
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "required": [
                          "key",
                          "operator"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array",
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "namespaceSelector": {
                  "description": "NamespaceSelector is a selector for selecting either all namespaces or a\nlist of namespaces.",
                  "properties": {
                    "any": {
                      "description": "Boolean describing whether all namespaces are selected in contrast to a\nlist restricting them.",
                      "type": "boolean"
                    },
                    "matchNames": {
                      "description": "List of namespace names.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tlsConfig": {
              "description": "TLSConfig specifies TLSConfig configuration parameters.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "url": {
              "description": "AlertManager url.  E.g. http://127.0.0.1:9093",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "notifierConfigRef": {
          "description": "NotifierConfigRef reference for secret with notifier configuration for vmalert\nonly one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier",
          "properties": {
            "key": {
              "description": "The key of the secret to select from.  Must be a valid secret key.",
              "type": "string"
            },
            "name": {
              "default": "",
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
              "type": "string"
            },
            "optional": {
              "description": "Specify whether the Secret or its key must be defined",
              "type": "boolean"
            }
          },
          "required": [
            "key"
          ],
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "notifiers": {
          "description": "Notifiers prometheus alertmanager endpoints. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093\nIf specified both notifier and notifiers, notifier will be added as last element to notifiers.\nonly one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier",
          "items": {
            "description": "VMAlertNotifierSpec defines the notifier url for sending information about alerts",
            "properties": {
              "basicAuth": {
                "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
                "properties": {
                  "password": {
                    "description": "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "password_file": {
                    "description": "PasswordFile defines path to password file at disk",
                    "type": "string"
                  },
                  "username": {
                    "description": "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD",
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "default": "",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "bearerTokenFile": {
                "description": "Path to bearer token file",
                "type": "string"
              },
              "bearerTokenSecret": {
                "description": "Optional bearer auth token to use for -remoteWrite.url",
                "properties": {
                  "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                  },
                  "name": {
                    "default": "",
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                    "type": "string"
                  },
                  "optional": {
                    "description": "Specify whether the Secret or its key must be defined",
                    "type": "boolean"
                  }
                },
                "required": [
                  "key"
                ],
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "headers": {
                "description": "Headers allow configuring custom http headers\nMust be in form of semicolon separated header with value\ne.g.\nheaderName:headerValue\nvmalert supports it since 1.79.0 version",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "oauth2": {
                "description": "OAuth2 defines OAuth2 configuration",
                "required": [
                  "client_id",
                  "token_url"
                ],
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "selector": {
                "description": "Selector allows service discovery for alertmanager\nin this case all matched vmalertmanager replicas will be added into vmalert notifier.url\nas statefulset pod.fqdn",
                "properties": {
                  "labelSelector": {
                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                    "properties": {
                      "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "properties": {
                            "key": {
                              "description": "key is the label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array",
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "required": [
                            "key",
                            "operator"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array",
                        "x-kubernetes-list-type": "atomic"
                      },
                      "matchLabels": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "x-kubernetes-map-type": "atomic",
                    "additionalProperties": false
                  },
                  "namespaceSelector": {
                    "description": "NamespaceSelector is a selector for selecting either all namespaces or a\nlist of namespaces.",
                    "properties": {
                      "any": {
                        "description": "Boolean describing whether all namespaces are selected in contrast to a\nlist restricting them.",
                        "type": "boolean"
                      },
                      "matchNames": {
                        "description": "List of namespace names.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "tlsConfig": {
                "description": "TLSConfig specifies TLSConfig configuration parameters.",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "url": {
                "description": "AlertManager url.  E.g. http://127.0.0.1:9093",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not\ngoing to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "properties": {
            "maxUnavailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by\n\"selector\" are unavailable after the eviction, i.e. even in absence of\nthe evicted pod. For example, one can prevent all voluntary evictions\nby specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
              "x-kubernetes-int-or-string": true
            },
            "minAvailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "An eviction is allowed if at least \"minAvailable\" pods selected by\n\"selector\" will still be available after the eviction, i.e. even in the\nabsence of the evicted pod.  So for example you can prevent all voluntary\nevictions by specifying \"100%\".",
              "x-kubernetes-int-or-string": true
            },
            "selectorLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "replaces default labels selector generated by operator\nit's useful when you need to create custom budget",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMAlert pods.",
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
              "type": "object"
            },
            "name": {
              "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "port": {
          "description": "Port for listen",
          "type": "string"
        },
        "priorityClassName": {
          "description": "Priority class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "items": {
            "description": "PodReadinessGate contains the reference to a pod condition",
            "properties": {
              "conditionType": {
                "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                "type": "string"
              }
            },
            "required": [
              "conditionType"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "remoteRead": {
          "description": "RemoteRead Optional URL to read vmalert state (persisted via RemoteWrite)\nThis configuration only makes sense if alerts state has been successfully\npersisted (via RemoteWrite) before.\nsee -remoteRead.url docs in vmalerts for details.\nE.g. http://127.0.0.1:8428",
          "properties": {
            "basicAuth": {
              "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
              "properties": {
                "password": {
                  "description": "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "password_file": {
                  "description": "PasswordFile defines path to password file at disk",
                  "type": "string"
                },
                "username": {
                  "description": "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "bearerTokenFile": {
              "description": "Path to bearer token file",
              "type": "string"
            },
            "bearerTokenSecret": {
              "description": "Optional bearer auth token to use for -remoteWrite.url",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "headers": {
              "description": "Headers allow configuring custom http headers\nMust be in form of semicolon separated header with value\ne.g.\nheaderName:headerValue\nvmalert supports it since 1.79.0 version",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "lookback": {
              "description": "Lookback defines how far to look into past for alerts timeseries. For example, if lookback=1h then range from now() to now()-1h will be scanned. (default 1h0m0s)\nApplied only to RemoteReadSpec",
              "type": "string"
            },
            "oauth2": {
              "description": "OAuth2 defines OAuth2 configuration",
              "required": [
                "client_id",
                "token_url"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "tlsConfig": {
              "description": "TLSConfig specifies TLSConfig configuration parameters.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "url": {
              "description": "URL of the endpoint to send samples to.",
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "remoteWrite": {
          "description": "RemoteWrite Optional URL to remote-write compatible storage to persist\nvmalert state and rule results to.\nRule results will be persisted according to each rule.\nAlerts state will be persisted in the form of time series named ALERTS and ALERTS_FOR_STATE\nsee -remoteWrite.url docs in vmalerts for details.\nE.g. http://127.0.0.1:8428",
          "properties": {
            "basicAuth": {
              "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
              "properties": {
                "password": {
                  "description": "The secret in the service scrape namespace that contains the password\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "password_file": {
                  "description": "PasswordFile defines path to password file at disk",
                  "type": "string"
                },
                "username": {
                  "description": "The secret in the service scrape namespace that contains the username\nfor authentication.\nIt must be at them same namespace as CRD",
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "default": "",
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                      "type": "string"
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object",
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "bearerTokenFile": {
              "description": "Path to bearer token file",
              "type": "string"
            },
            "bearerTokenSecret": {
              "description": "Optional bearer auth token to use for -remoteWrite.url",
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "default": "",
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                  "type": "string"
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "required": [
                "key"
              ],
              "type": "object",
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "concurrency": {
              "description": "Defines number of readers that concurrently write into remote storage (default 1)",
              "format": "int32",
              "type": "integer"
            },
            "flushInterval": {
              "description": "Defines interval of flushes to remote write endpoint (default 5s)",
              "pattern": "[0-9]+(ms|s|m|h)",
              "type": "string"
            },
            "headers": {
              "description": "Headers allow configuring custom http headers\nMust be in form of semicolon separated header with value\ne.g.\nheaderName:headerValue\nvmalert supports it since 1.79.0 version",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "maxBatchSize": {
              "description": "Defines defines max number of timeseries to be flushed at once (default 1000)",
              "format": "int32",
              "type": "integer"
            },
            "maxQueueSize": {
              "description": "Defines the max number of pending datapoints to remote write endpoint (default 100000)",
              "format": "int32",
              "type": "integer"
            },
            "oauth2": {
              "description": "OAuth2 defines OAuth2 configuration",
              "required": [
                "client_id",
                "token_url"
              ],
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "tlsConfig": {
              "description": "TLSConfig specifies TLSConfig configuration parameters.",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "url": {
              "description": "URL of the endpoint to send samples to.",
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the VMAlert cluster. The controller will\neventually make the size of the running cluster equal to the expected\nsize.",
          "format": "int32",
          "type": "integer"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or\nmaximum number of revisions that will be maintained in the StatefulSet's revision history.\nDefaults to 10.",
          "format": "int32",
          "type": "integer"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "properties": {
            "maxSurge": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 25%.\nExample: when this is set to 30%, the new ReplicaSet can be scaled up immediately when\nthe rolling update starts, such that the total number of old and new pods do not exceed\n130% of desired pods. Once old pods have been killed,\nnew ReplicaSet can be scaled up further, ensuring that total number of pods running\nat any time during the update is at most 130% of desired pods.",
              "x-kubernetes-int-or-string": true
            },
            "maxUnavailable": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 25%.\nExample: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods\nimmediately when the rolling update starts. Once new pods are ready, old ReplicaSet\ncan be scaled down further, followed by scaling up the new ReplicaSet, ensuring\nthat the total number of pods available at all times during the update is at\nleast 70% of desired pods.",
              "x-kubernetes-int-or-string": true
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ruleNamespaceSelector": {
          "description": "RuleNamespaceSelector to be selected for VMRules discovery.\nWorks in combination with Selector.\nIf both nil - behaviour controlled by selectAllByDefault\nNamespaceSelector nil - only objects at VMAlert namespace.",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "rulePath": {
          "description": "RulePath to the file with alert rules.\nSupports patterns. Flag can be specified multiple times.\nExamples:\n-rule /path/to/file. Path to a single file with alerting rules\n-rule dir/*.yaml -rule /*.yaml. Relative path to all .yaml files in folder,\nabsolute path to all .yaml files in root.\nby default operator adds /etc/vmalert/configs/base/vmalert.yaml",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ruleSelector": {
          "description": "RuleSelector selector to select which VMRules to mount for loading alerting\nrules from.\nWorks in combination with NamespaceSelector.\nIf both nil - behaviour controlled by selectAllByDefault\nNamespaceSelector nil - only objects at VMAlert namespace.",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "required": [
                  "key",
                  "operator"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod.\nhttps://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the VMAlert\nobject, which shall be mounted into the VMAlert Pods.\nThe Secrets are mounted into /etc/vm/secrets/<secret-name>.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings.\nThis defaults to the default PodSecurityContext.",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "selectAllByDefault": {
          "description": "SelectAllByDefault changes default behavior for empty CRD selectors, such RuleSelector.\nwith selectAllByDefault: true and empty serviceScrapeSelector and RuleNamespaceSelector\nOperator selects all exist serviceScrapes\nwith selectAllByDefault: false - selects nothing",
          "type": "boolean"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the\nVMAlert Pods.",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmalert VMServiceScrape spec",
          "required": [
            "endpoints"
          ],
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmalert service spec",
          "properties": {
            "metadata": {
              "description": "EmbeddedObjectMetadata defines objectMeta for additional service.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Labels Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                  "type": "object"
                },
                "name": {
                  "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "spec": {
              "description": "ServiceSpec describes the attributes that a user creates on a service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "useAsDefault": {
              "description": "UseAsDefault applies changes from given service definition to the main object Service\nChanging from headless service to clusterIP or loadbalancer may break cross-component communication",
              "type": "boolean"
            }
          },
          "required": [
            "spec"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "format": "int64",
          "type": "integer"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "format": "int64",
                "type": "integer"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option,\ncontrols how pods are spread across your cluster among failure-domains\nsuch as regions, zones, nodes, and other user-defined topology domains\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "items": {
            "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
            "required": [
              "maxSkew",
              "topologyKey",
              "whenUnsatisfiable"
            ],
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true
          },
          "type": "array"
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "enum": [
            "Recreate",
            "RollingUpdate"
          ],
          "type": "string"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component\nit restricts disk writes access\nuses non-root user out of the box\ndrops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.\nVolumeMounts specified will be appended to other VolumeMounts in the VMAlert container,\nthat are generated as a result of StorageSpec objects.",
          "items": {
            "description": "VolumeMount describes a mounting of a Volume within a container.",
            "properties": {
              "mountPath": {
                "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                "type": "string"
              },
              "mountPropagation": {
                "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                "type": "string"
              },
              "name": {
                "description": "This must match the Name of a Volume.",
                "type": "string"
              },
              "readOnly": {
                "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                "type": "boolean"
              },
              "recursiveReadOnly": {
                "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                "type": "string"
              },
              "subPath": {
                "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                "type": "string"
              },
              "subPathExpr": {
                "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                "type": "string"
              }
            },
            "required": [
              "mountPath",
              "name"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment definition.\nVolumes specified will be appended to other volumes that are generated as a result of\nStorageSpec objects.",
          "items": {
            "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
            "required": [
              "name"
            ],
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true
          },
          "type": "array"
        }
      },
      "required": [
        "datasource"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "VMAlertStatus defines the observed state of VMAlert",
      "properties": {
        "availableReplicas": {
          "description": "AvailableReplicas Total number of available pods (ready for at least minReadySeconds)\ntargeted by this VMAlert cluster.",
          "format": "int32",
          "type": "integer"
        },
        "reason": {
          "description": "Reason defines fail reason for update process, effective only for statefulMode",
          "type": "string"
        },
        "replicas": {
          "description": "ReplicaCount Total number of non-terminated pods targeted by this VMAlert\ncluster (their labels match the selector).",
          "format": "int32",
          "type": "integer"
        },
        "unavailableReplicas": {
          "description": "UnavailableReplicas Total number of unavailable pods targeted by this VMAlert cluster.",
          "format": "int32",
          "type": "integer"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout, effective only for statefulMode",
          "type": "string"
        },
        "updatedReplicas": {
          "description": "UpdatedReplicas Total number of non-terminated pods targeted by this VMAlert\ncluster that have the desired version spec.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
